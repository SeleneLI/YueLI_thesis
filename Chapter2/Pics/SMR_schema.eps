%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 1643.000000 846.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.12.6 (Build 16G29) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 1643 846
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 1643 846
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /C put
dup 34 /o put
dup 35 /n put
dup 36 /t put
dup 37 /r put
dup 38 /l put
dup 39 /space put
dup 40 /p put
dup 41 /a put
dup 42 /e put
dup 43 /D put
dup 44 /I put
dup 45 /T put
dup 46 /R put
dup 47 /M put
dup 48 /slash put
dup 49 /S put
dup 50 /E put
dup 51 /m put
dup 52 /u put
dup 53 /i put
dup 54 /c put
dup 55 /g put
dup 56 /b put
dup 57 /s put
dup 58 /U put
dup 59 /d put
dup 60 /underscore put
dup 61 /N put
dup 62 /f put
dup 63 /y put
dup 64 /q put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<








00>] def
/CharStrings 34 dict dup begin
/.notdef 0 def
/space 1 def
/slash 2 def
/C 3 def
/D 4 def
/E 5 def
/I 6 def
/M 7 def
/N 8 def
/R 9 def
/S 10 def
/T 11 def
/U 12 def
/underscore 13 def
/a 14 def
/b 15 def
/c 16 def
/d 17 def
/e 18 def
/f 19 def
/g 20 def
/i 21 def
/l 22 def
/m 23 def
/n 24 def
/o 25 def
/p 26 def
/q 27 def
/r 28 def
/s 29 def
/t 30 def
/u 31 def
/y 32 def
/uni2B91 33 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-951 -481 1987 1077}def
/UniqueID 4243299 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C9315F0017FC3864FF8D40C74661F4AC4F359AB40455CCBD4B88F0CECF0FBBCE3D81E443BF2B3BDABA64DE646528D274216E141CC2BD3049E9F7D1A996BC56CAFBBBB18F69063033C6B97D9FB89E146ACD1A18BD717F52681A976D83447D96DD3627801822CD048E81EEAC11A7A78DD3CDE98E3813C76E46BA642AE97E0419681B80EF4690172CD09D460BAB4F14F9FFA56DC5F8EB13C08E6271F80F02D3D9ED6403CFCC8934AE70C742E2207B086372E2C78EEE5ADDDFBFB1D925D3DFE1A8D91779B9B8CB7534454BC0EDD1A40CDC4E521394D9525AEAAD6D10134C3970E35E99892E129E9E728C7B809BE82B96B0E973CC041D5602F281E9C1CA3B031011ED9EF7EFEF988C75A95D4D1D3879A933A6D48646D80F7FB4F05A4257EDE315F49AF97821BB2D5DFB0EA1C933DD9DE0D376E6C5E55D884691EBF9F51276E7872C357400A8B5B44DE49DF5C10870D0911C9D925B5EE46C6015C81770D3AE8793F0C47EE41CEA6805A1D3900981901A50A07BA718EE9A02B68339C56348C749C7E8261FDE864F6A31C705089B11EE355DBDDA34E18930C379AD436156F6F9889626B249204EFDC70438672C09882D3F59B7E2AFA5BE73464936A0AEBA04AE11B2385F95818178CC19030FA9959B634B7F68BB3898C4630CE60A5EB3F730FF44FB4A49A9725F1532CB4311886D43BC503A29A522CF8E8FCB03156E546F2802FDA0983000AE6C01DC59B0FB51EC69C7D462D90DA1165077993B26B02F9CC7C74ADDE6D213E
8BAEF5D5DD435D7FB43D49E537CA4471655724C2E645E32826CA7FB60EBE131C5C8F4492C85FD6750B01A793C14921386779006C26746B1F6B0951AF043A2D02B340FEB879A82A21FC5705B31060B3764D5A804953441E0549956E10407BE246893E7E6D93486BBB2C7B94A216935B5A2087C3B541115B397AB5826D53063389175C06A64C282D103FC47B21D1517B3AA27AE952093B26CFFB1B4516F8A0B515F1E47AC0F044B213A287907E5330A984C6BF18DFDACAE8F5A9EC78012F375FA3E2CFA040F13F5355889E7FDBC70EEBCC4B5B7D85261CE965323D158DC7786938D7549EC8E52A4ED2F06B19D53A98C461E4F6A73923E67019D9364366A60380CB4DFEE199B701D894682B579582B425E149A1C5A997CA900BBD8A4BD0A5CC067AD51715FB4318EE81F78E96E105ABA79AA77802BE8EC9E6BBACA80E9521F4E72D6422184C006FE33B5425E1DAC13B9BFA5DAE0FE6962949EC27A6E4935F90D8C104D2928279F38FD17814D603797D50F28CBF5E71877EF8F909D18CC2CD872C2DDBE0C2942BF9ACD6E75A1A8B4338B219A0DCC722BFB7613A1965A1860152F4E66880E55660996CAE5EB85C92550E7892FA56F6B0CA03140E6A75B6FBE6B31462DBE7B0C0D7E054CEFE829C2D1B211CBAADA57BA32F951C89E4D071F76056F4A8CD60F80290D260A42803292D9B43709BDDCB82E9FE250668FF38589AF76C6A7E034E703505510F205674D70E29B3302FA56421F5B76B27E91C39F0B3E2A7871898455B7A37738248DE2F4BF4F112619F12364E90D4D49E6D0C95CFDF445063A1489CBB73A0AF23587224DEF9252605CF0B8CDD94F3DFBC364D8FC15F2CFDFD29CAF17F1E2A15289C9D1F412ED0006DE4CCBA035986AF27C693FE2FE6F2F44CC527E0499705BC4240E8582CE05E031E4B545BE8C39127A4C2E2422FFF55BF826A838F7696E3E11D9FDE3FEAFF091E45A965C087F7EAC37AD3A58C67D9DAA43D6EEEA1E8365EA36F62E41BCA75E6180C81C76B61A397968BDD8806A721B59FCFD00D5C105567DDEA75EB2FE202E8E129EBD2DCCDAD46CB02F57D2FEF2B4ED25C1D7C6E5C369BE73C366E6328D32D120AB9E5AE62A2611830F326215B90DF878D603C637874AD67D33A678CDF73C734200EED66F572010A38B7DC25BF39A22FE6DFCE44DF3A2A041DCEA0477E8909FF3329BCDD70C6D85A72DE4397A1133A4A1466D039ED5CC6EDDB3DF8CE7C6392B4112501A9044CADB94E264F92B2F703A9396701F722071E2D299C6BF0A57D01C4C4074951A21823DF1BEB5D96A8A8AAD291BFF53E7FE8587FA04C1EFCCF393C28A9AAB0530E9C3E61DA6907674C281B56785D010E31E82ED9C5BECB68CE006D86B3F8B1C967F98E9FDD016ECAF144FDAC0F18A4A1E568970900DF08ECAD924C1B6984F9088FF27DE36BD07B15A45BDC55CE59


4B986341F689D342F63E0B9BD31A587245F671DC5E8EE26E4600E835429EDC4272505A415F2F0355A3B8534999DD4C144F81142BD7F97BA40F7A1E0230EB6CD778E4C11971B7E907E71C46F8EA141117777A1A2A44E75E1C9FE7894C4BF93E8C028DB3AF46A4BE169AC243E4AF6FD2CC34104CCFD5CD75E460B6E84AE3B3FED91DF47C551843E034D40201D769EA65AA51E24FC22F4C3F5A5C3B32B532EA37980F14914FFAD00F9EB71ABB32E6B4AD120282202C1F57BA3AC691CD7FD1681D836290CDDF2033F45922E02072EEFF6EA8E3C042C2B14492FB7E1AECE429C29CA63B817F3EFDB71A6EF49E970D31E66189CA49177406F17650821143FD979B9E796BA9851332205F539D412CA42B572F721B971EA64BD09C225171EF50E8D9BDBF23FE25537BE7792496F7892CAF5C08E68AA22CB5871352746E86C44FF856B86C3F08D43192D0A33BBA050A27CD0FFCAC5EBCE3AA6337C1AFCD560541D2937324FA5525967FE9C6955E06E7676945ED00010E99E6EF1511FB0B26219A0B62C85F12CDDF59C7BA41634A3C872995656529A2400FD5C5340D5D9713C30BBD45E35617E578D8BC1237601141D36746AF2A640A69BA6C5FF39A2987B066F81DEC69BA8461A12FC0A1D7C2281643533540F38F2CB22477B56BCD0575A2B42435219C77EAACF33C652CF202DF568F47DB2D252123748FC2D3F537A4CA54A2EDF95DAA66A9B101780AB45D67CA60EB7201DD019B502E666FB6E411723D94D12420977D6B556B2FEA5B863F6340450521D8141B7D43E0BD955BB05D196C06CE89DDE7F9651C76E8398C42D9C17B623556A1D09739A0B4238EA28EA7B3C7B740D2C2C122E5F6F6C09048095803E1FBD20C08BB5F8538FF0E00DDB2B21F56A3435CCE32A2A8BF152C2B89EFB6940F9F0F1DDC72C140E4E43E97E17BFD4EDFD76A51C636987F462C442C3AAC3E77629177AFEA4C08E0F7CE5E3A322500C1AA1DA02C0ADD8C266C1417A0A385DBC56C5721BB3D9CCD790D46D89AE013AEB728BC1AE65D91D429224CE44D70B04F4B3CF5403824F97A4CAFB09C1ED17B60A436FEB3B1D9668800C0942689BC959EB5E7A76C09D18656B7EDBE3037C18B75BCF5810310968A9CF32CA0E892507E437C4B587CA1FE6AD4A2690D55C61661AE7F20D77FC8DB943DD352BB18AC3B8F363D1812C87CDAF358016998E19FD463EB1B1A8BD49BAA4477031318ECB5EC1E4FED8251BD2F13995EBCE233456D10BC9F213755B0B1161D65AEAE366C7DAED9CE1A34C4847C89F70126201A9FA1A50AE71CFED280479EDD2BD5FC6DA779DE7C89DE4E57694576CEBD8B591D6A9DDD87B658917BB67D0F8AE4F4D202A86DF379C301394C2E47D2D4DEBFB34BB9D44774BDB8E4EA2AA8B8AE32473A69E35D4832AEDED171AA2A8A61804D2409CFDDC13D65F85EBEC089E042AABC
0D2BE1FA63DEE232D41A4A163CD4D5E10717F7F8E811FE2B1A3640BAB2D53F77E288521F1066FDDC90A53B67B4D8B0E43CFDE63981DACA169762477E81DA26E919FF4CD200F289A3A557F066D9A194B493D8B4642EC3DE42C7E3793D7C96077F9422DF7827ECB373BF2336A8D6AF6DEB59CEDFBDFB2137471BFEB37F8995B2855BA1EF6D0A0FB47FE9E8B3CDC85BFAE6A4DE48F10AF9F7ECB36119A13E49D98A43909438A7B410447B154A8B13B91CF34810B502FE9F100072B09905832A8D4DB919ED8DE5C6E25D9B1EE68AB0DE69600093D5D4D99652388EDF2291BCF93040E3130E83C1CC29399BAF3AC9F1F21BDA61052CEB9C1F6FEDE0C3BDAA3ED7D62C5B151AD0260900013E2F7F290AD9E319CEDFFB4C8B47B0DA2685937F773D0CF58307D71B4BD226B220BF23D09AD2A2B83351A5BA40AA8283436C6428CBA40A5E375A4731582178A1581740C0B96491BBF4AC9BF9F319981FD980994F880DBBE45698C17AEEB586E562C0DD80DB6D4DD35CFABD9318255815FB42C80730010C306DAC275A21814D0CE077C719A46CC09EAD7A3C540B19374F85EE2EC35FDF01967A977C6AE5B08E8620F1861276D1DAE6270372FC31F3486ADD6801047DC2817F140A14429E71D332F6354B5BF2929880B3B3AC2F0C14AB54AD0FEBF43D8D9FADEB545F91C5FD1B20341A6812BAD75F984279E4E2DF112BFC790B84F1AA3A1BCA95FFDACCC176965491A67C44BB1371194A3354311811EDEB2E92426AAB7FCCF516907F5199DF6A3DED8A53C651183D06E1DD0E01A2870EF1FCCE0F329A2FA68719B58E2BC83295A48ACCBA47425A6DCD86228A7268AAA0E43581195537AF6B4125334AF379E38EAC05F694486E8971CAC576153F1F5EE800FC3729A16145E8E457E9997713DC00804E688067022721500BC83332F7501931A6938BB79CEF74F2C54788818304F60D2653B00D627108823D73E27B6579E91A65FEAD34DA31BC8333E50D1654BA97D0EEB35007EF9C38C62179C4286A533560D2508B219E0B446DF600F289F8F9D9AB71BA8553113F6D004EF12896EF29A2A288EF3E2D8FCCEDE4BF193E7A6632AAD02B754AA6F1F0ADFF2D374238FE3D026FC0CFB362DF32246BFBF32FAA62D18075DA5EDA2F3B77484DFFBF030711553409417CE47CC0D8E6C1DCEC0F2338E6FA435FDBCFD1A4913A0585D8C5CC4D7B27E3748286BCEB63E87C7C8430A24FCC97F1804956D8F79B5276861D489D1F37AB22EF9BC493B59ED7D0E4F40E48868D667B3E50EF8D0BCBFAE03F0BD94222F1
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F1.1/HelveticaNeue renmfont
%RBIBeginFontSubset: HelveticaNeue-Bold
%!FontType1-1.0: HelveticaNeue-Bold 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue-Bold def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /S put
dup 34 /M put
dup 35 /R put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -1018 1 index div -481 2 index div 1437 3 index div 1141 5 -1 roll div]cvx def
/sfnts [<


140E0223222E02B0980132556F3B496F4B263346471443532F10141F26131D31261702982F50673830604C2F253C4C28274C3C251C2A30151F3A2B1AED42603E1D223D54313C4D2E15041116161A15171E14080A182A203E5738191A36513731452E1D0A0B1218241D1B2314070F1F320001000EFF5C047902F90010002BB800142BBB000B0012000800182BB8000B10B80012DC00B800092FB800002FBB0005000F000E00182B303105090117072132363511331114062321170191FE7D01854EE802BC292873655FFD3FEDA4014C015159BF2D2A01C1FE3F6461C7FFFF0045FF5C04B002F90047000404BE0000C001400000000001000000010000E563F13F5F0F3CF5011903E800000000B643F84C00000000D34D85A2FC06FE1F059D04750001000900020000000000000001000003CFFF27001D05DCFC06FE77059D00010000000000000000000000000000000601F40011038B004502D200450289001704BE000E04BE0045000000380082011601BA01F001FC000000010000000600960009006D0004000200000000001E00000200042800030001B800142B01BA0004001000162B01BF00110027001F001A0012000C0000001C2BBF0012002C0025001A0012000C0000001C2BBF00130024001F001A0012000C0000001C2B00BF000E0030002500200017000C0000001C2BBF000F0034002B00200017000C0000001C2BBF0010002A0025001A0012000C0000001C2B00BA00140004001B2BB8000D20457D691844B8000A2B00BA00010002000C2B01BA00030002000C2B01BE00030028002000190012000B00122BBE00040024001D00170011000A00122B00BE00010033002A00210017000E00122BBE0002002A0022001B0013000C00122B00BA0005000400112BB8000020457D691844B800002B00
00>] def
/CharStrings 6 dict dup begin
/.notdef 0 def
/M 1 def
/R 2 def
/S 3 def
/uni2B90 4 def
/uni2B91 5 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-1018 -481 1437 1141}def
/UniqueID 4258367 def
currentdict currentfile eexec

85AB43442EDE8C0CE6FCC69592DB40F9F27B86596DB742A59A89A9F498871C0061CF6D2304B4B664CFC4E9FFEE9F53D5A36B6FD37DFF5F35A8F43F7415746B60A1C27DDAB3272937A679F00E8D2143437407EFEAAFE473B172E38622F4D549E4D4771CB183BE832A96209815623950E0FC34DEBF9BD5AC0705F8D27052DDDE3BB5AE481644B0577596A29BBE2D9821C3C647270DEA1220D4C86FEABA058BA7FF647181102B5002EFF1EF6021086BC25BF0503288148935B937A28FCAD6AC5984EEFD79C5A74046886AF048BDCCEA8456E2194D2A873A17A45957A4F740CBC1153A51CF1665A4B545D9F25F385F6D8FE3B0A50B53E8EEEEC00FE0C70E730460E80D41E9726AC67A852D25AEBF944E3B490A53B4550D2CD0FF7680025AE90B4F4113F29441A709D85E40D30487CEC31F74F2772524D586C95F10116F4DA8E545A15B7655CC15E919B0807AECAA8E3553CE6F5E62939B8154BF9CABDEC8E67C90032323CDD0B3F7872A4A201934077A6638DA08DB5B7A67BEF64B7996969B26BBF1F4357A1FA5E261180D78FB5E5051694F18DC69CDA6ED6763E002556A23EF281406E1B47D576051B8F0C86858FCBD612A01AB05B8CFF73C5F2E5A4B4DCD4281EAD2AC2391077845ABCA269E91B717DF66781B0902148DEEAD7F724156FE885F1F96044AF94705BFDB666EFBB857FBA7E3D1AAE68D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue-Bold cguidfix
/F2.1/HelveticaNeue-Bold renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 1 1 sc
q
0 0 1643 846 rc
0 846 m
1814 846 l
1814 -155 l
0 -155 l
h
0 846 m
f
3 w
1 J
1 j
[
12
12
] 0 d
0.60000002 i
0 0 0 sc
1 0 0 -1 0 846 cm
564.90002 744.02429 m
641.09998 744.02429 l
S
0 i
CM
652.29999 101.97574 m
641.09998 106.17574 l
641.09998 97.775734 l
h
652.29999 101.97574 m
f
0 J
0 j
[] 0 d
1 0 0 -1 0 846 cm
652.29999 744.02429 m
641.09998 739.82428 l
641.09998 748.22424 l
h
652.29999 744.02429 m
S
CM
553.70001 101.97574 m
564.90002 97.775734 l
564.90002 106.17574 l
h
553.70001 101.97574 m
f
1 0 0 -1 0 846 cm
553.70001 744.02429 m
564.90002 748.22424 l
564.90002 739.82428 l
h
553.70001 744.02429 m
S
/Cs2 SC
0 sc
1 0 0 -1 752.5 101.97574 cm
/F1.1[ 30 0 0 -30 0 0]sf
-90.014999 11.080002 m
(!"#$%"&'\(&\)#*)[ 21.660000 17.220000 16.680000 9.450000 9.450000 17.220000 6.660000 8.340000 17.790000 6.660000 16.110000 16.680000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 846 cm
204.89999 744.02429 m
281.10001 744.02429 l
S
0 i
CM
292.29999 101.97574 m
281.10001 106.17574 l
281.10001 97.775734 l
h
292.29999 101.97574 m
f
0 J
0 j
1 0 0 -1 0 846 cm
292.29999 744.02429 m
281.10001 739.82428 l
281.10001 748.22424 l
h
292.29999 744.02429 m
S
CM
193.7 101.97574 m
204.89999 97.775734 l
204.89999 106.17574 l
h
193.7 101.97574 m
f
1 0 0 -1 0 846 cm
193.7 744.02429 m
204.89999 748.22424 l
204.89999 739.82428 l
h
193.7 744.02429 m
S
/Cs2 SC
0 sc
1 0 0 -1 374.5 101.97574 cm
-72.239998 11.080002 m
(+\)$\)'\(&\)#*)[ 21.120000 16.110000 9.450000 16.110000 8.340000 17.790000 6.660000 16.110000 16.680000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 846 cm
360 214.14336 m
360 521.16119 l
S
649 87.164642 m
648 650.18719 l
S
72 87.164642 m
72 650.18719 l
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 73 789.02429 cm
/F1.1[ 50 0 0 -50 0 0]sf
-37.950001 17.800003 m
(,-.)[ 12.950000 28.700000 0.000000 ] xS
1 0 0 -1 365.68188 660.1571 cm
-85.199997 17.800003 m
(/.0/1)[ 43.550000 34.250000 16.650000 43.550000 0.000000 ] xS
1 0 0 -1 650.5 789.02429 cm
-46.25 17.800003 m
(2-.)[ 30.550000 28.700000 0.000000 ] xS
5 w
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 846 cm
93.899918 127.50725 m
627.03113 126.05936 l
S
0 i
CM
641.43103 719.97974 m
627.01642 725.34064 l
627.04578 714.54065 l
h
641.43103 719.97974 m
f
0 J
0 j
1 0 0 -1 0 846 cm
641.43103 126.02025 m
627.01642 120.65938 l
627.04578 131.45934 l
h
641.43103 126.02025 m
S
CM
79.499969 718.45361 m
93.914581 713.09277 l
93.885254 723.8927 l
h
79.499969 718.45361 m
f
1 0 0 -1 0 846 cm
79.499969 127.54636 m
93.914581 132.90723 l
93.885254 122.10727 l
h
79.499969 127.54636 m
S
/Cs2 SC
0 sc
1 0 0 -1 360 746.4541 cm
/F1.1[ 30 0 0 -30 0 0]sf
-105.655 11.080002 m
(!"334#56\)$5#7)[ 21.660000 17.220000 25.590000 25.590000 16.680000 16.680000 6.660000 16.110000 16.110000 9.450000 6.660000 16.680000 0.000000 ] xS
3 w
1 J
1 j
[
12
12
] 0 d
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 846 cm
648.88428 152.33195 m
648.88428 152.33195 674.03082 163.64975 674 181.00174 c
673.98456 189.69467 667.65381 197.85419 661.33923 203.83302 c
S
0 i
CM
652.48895 635.30066 m
663.91254 638.8476 l
658.76349 645.48444 l
h
652.48895 635.30066 m
f
0 J
0 j
[] 0 d
1 0 0 -1 0 846 cm
652.48895 210.69936 m
663.91254 207.15239 l
658.76349 200.51556 l
h
652.48895 210.69936 m
S
/Cs2 SC
0 sc
1 0 0 -1 726 681.9411 cm
-63.900002 -6.8399963 m
(+\)$\)8\)9*)[ 21.120000 16.110000 9.450000 16.110000 17.790000 16.110000 15.000000 0.000000 ] xS
-49.455002 29 m
(:\(;\)$*)[ 21.660000 17.790000 17.790000 16.110000 9.450000 0.000000 ] xS
1 J
1 j
[
12
12
] 0 d
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 846 cm
375.89984 253.91447 m
648.70599 252.68497 l
S
0 i
CM
364.69995 592.03503 m
375.91876 587.88556 l
375.88092 596.28546 l
h
364.69995 592.03503 m
f
0 J
0 j
[] 0 d
1 0 0 -1 0 846 cm
364.69995 253.96495 m
375.91876 258.11444 l
375.88092 249.71452 l
h
364.69995 253.96495 m
S
/Cs2 SC
0 sc
1 0 0 -1 513.93854 620.97766 cm
-93.059998 11.080002 m
(/\)\(<.*759$*%)[ 26.130000 16.110000 17.790000 15.000000 20.550000 16.110000 17.220000 6.660000 15.000000 9.450000 16.110000 0.000000 ] xS
1 J
1 j
[
12
12
] 0 d
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 846 cm
360 319 m
632.70764 316.68542 l
S
0 i
CM
643.90723 529.40961 m
632.672 533.5144 l
632.74329 525.11475 l
h
643.90723 529.40961 m
f
0 J
0 j
[] 0 d
1 0 0 -1 0 846 cm
643.90723 316.59036 m
632.672 312.48557 l
632.74329 320.88528 l
h
643.90723 316.59036 m
S
/Cs2 SC
0 sc
1 0 0 -1 513.9024 556.17603 cm
-76.449997 11.080002 m
(/\)\(<="$5>?)[ 26.130000 16.110000 17.790000 15.000000 21.660000 17.220000 9.450000 6.660000 8.880000 0.000000 ] xS
1 J
1 j
[
12
12
] 0 d
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 846 cm
648.49054 374.00266 m
367.49997 374.58255 l
367.4845 367.08255 352.48453 367.11353 352.50003 374.61349 c
87.899963 375.15958 l
S
0 i
CM
76.699989 470.81732 m
87.90863 466.64044 l
87.891296 475.04041 l
h
76.699989 470.81732 m
f
0 J
0 j
[] 0 d
1 0 0 -1 0 846 cm
76.699989 375.18268 m
87.90863 379.35956 l
87.891296 370.95959 l
h
76.699989 375.18268 m
S
/Cs2 SC
0 sc
1 0 0 -1 285.25482 494.95013 cm
/F2.1[ 40 0 0 -40 0 0]sf
-45.060001 14.419861 m
(!"#)[ 25.960000 36.280000 0.000000 ] xS
1 J
1 j
[
12
12
] 0 d
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 846 cm
72 459.9064 m
344.10016 458.67508 l
S
0 i
CM
355.30005 387.37561 m
344.08115 391.52487 l
344.11917 383.12497 l
h
355.30005 387.37561 m
f
0 J
0 j
[] 0 d
1 0 0 -1 0 846 cm
355.30005 458.62439 m
344.08115 454.47513 l
344.11917 462.87503 l
h
355.30005 458.62439 m
S
/Cs2 SC
0 sc
1 0 0 -1 225.49702 412.24539 cm
/F1.1[ 30 0 0 -30 0 0]sf
-93.360001 11.080002 m
(/\)\(<.*@4*9$)[ 26.130000 16.110000 17.790000 15.000000 20.550000 16.110000 17.790000 16.680000 16.110000 15.000000 0.000000 ] xS
1 J
1 j
[
12
12
] 0 d
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 846 cm
360 457.29984 m
632.43707 461.00079 l
S
0 i
CM
643.63605 384.84708 m
632.49414 389.19882 l
632.38007 380.79962 l
h
643.63605 384.84708 m
f
0 J
0 j
[] 0 d
1 0 0 -1 0 846 cm
643.63605 461.15292 m
632.49414 456.80118 l
632.38007 465.20038 l
h
643.63605 461.15292 m
S
/Cs2 SC
0 sc
1 0 0 -1 509.84503 418.99945 cm
-93.360001 11.080002 m
(/\)\(<.*@4*9$)[ 26.130000 16.110000 17.790000 15.000000 20.550000 16.110000 17.790000 16.680000 16.110000 15.000000 0.000000 ] xS
1 J
1 j
[
12
12
] 0 d
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 846 cm
648.18506 546.00391 m
87.899902 547.94495 l
S
0 i
CM
76.699974 298.0163 m
87.914452 293.8551 l
87.885353 302.25507 l
h
76.699974 298.0163 m
f
0 J
0 j
[] 0 d
1 0 0 -1 0 846 cm
76.699974 547.9837 m
87.914452 552.1449 l
87.885353 543.74493 l
h
76.699974 547.9837 m
S
/Cs2 SC
0 sc
1 0 0 -1 501.5 326.88907 cm
-75.07 11.080002 m
(/\)\(<.*\(&?)[ 26.130000 16.110000 17.790000 15.000000 20.550000 16.110000 17.790000 6.660000 0.000000 ] xS
5 w
1 J
1 j
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 846 cm
93.89994 617.55377 m
627.05609 616.34503 l
S
0 i
CM
641.45605 229.68761 m
627.04382 235.05495 l
627.0683 224.25497 l
h
641.45605 229.68761 m
f
0 J
0 j
1 0 0 -1 0 846 cm
641.45605 616.31238 m
627.04382 610.94507 l
627.0683 621.74506 l
h
641.45605 616.31238 m
S
CM
79.499977 228.41356 m
93.912186 223.04622 l
93.887703 233.84619 l
h
79.499977 228.41356 m
f
1 0 0 -1 0 846 cm
79.499977 617.58643 m
93.912186 622.9538 l
93.887703 612.15381 l
h
79.499977 617.58643 m
S
/Cs2 SC
0 sc
1 0 0 -1 360 253.80936 cm
-105.655 11.080002 m
(!"334#56\)$5#7)[ 21.660000 17.220000 25.590000 25.590000 16.680000 16.680000 6.660000 16.110000 16.110000 9.450000 6.660000 16.680000 0.000000 ] xS
3 w
1 J
1 j
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 846 cm
1152.0229 220.65982 m
1151.0229 345.21664 l
S
1441.0229 93.681107 m
1440.0229 656.70361 l
S
864.02295 93.681107 m
864.02295 656.70361 l
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 865 789.02429 cm
/F1.1[ 50 0 0 -50 0 0]sf
-37.950001 17.800003 m
(,-.)[ 12.950000 28.700000 0.000000 ] xS
1 0 0 -1 1157.7048 653.64062 cm
-85.199997 17.800003 m
(/.0/1)[ 43.550000 34.250000 16.650000 43.550000 0.000000 ] xS
1 0 0 -1 1442.5 789.02429 cm
-46.25 17.800003 m
(2-.)[ 30.550000 28.700000 0.000000 ] xS
5 w
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 846 cm
885.92261 133.96616 m
1419.057 131.11696 l
S
0 i
CM
1433.4568 714.96002 m
1419.0281 720.28296 l
1419.0858 709.48309 l
h
1433.4568 714.96002 m
f
0 J
0 j
1 0 0 -1 0 846 cm
1433.4568 131.04001 m
1419.0281 125.71704 l
1419.0858 136.51688 l
h
1433.4568 131.04001 m
S
CM
871.52283 711.95691 m
885.95148 706.63391 l
885.8938 717.43378 l
h
871.52283 711.95691 m
f
1 0 0 -1 0 846 cm
871.52283 134.04311 m
885.95148 139.36607 l
885.8938 128.56622 l
h
871.52283 134.04311 m
S
/Cs2 SC
0 sc
1 0 0 -1 1152.0229 739.93762 cm
/F1.1[ 30 0 0 -30 0 0]sf
-105.655 11.080002 m
(!"334#56\)$5#7)[ 21.660000 17.220000 25.590000 25.590000 16.680000 16.680000 6.660000 16.110000 16.110000 9.450000 6.660000 16.680000 0.000000 ] xS
3 w
1 J
1 j
[
12
12
] 0 d
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 846 cm
1440.9072 158.84842 m
1440.9072 158.84842 1466.0537 170.16621 1466.0229 187.5182 c
1466.0074 196.21114 1459.6768 204.37065 1453.3622 210.34949 c
S
0 i
CM
1444.5118 628.78418 m
1455.9355 632.33118 l
1450.7865 638.96796 l
h
1444.5118 628.78418 m
f
0 J
0 j
[] 0 d
1 0 0 -1 0 846 cm
1444.5118 217.21582 m
1455.9355 213.66885 l
1450.7865 207.03203 l
h
1444.5118 217.21582 m
S
/Cs2 SC
0 sc
1 0 0 -1 1518.0229 675.42462 cm
-63.900002 -6.8399963 m
(+\)$\)8\)9*)[ 21.120000 16.110000 9.450000 16.110000 17.790000 16.110000 15.000000 0.000000 ] xS
-49.455002 29 m
(:\(;\)$*)[ 21.660000 17.790000 17.790000 16.110000 9.450000 0.000000 ] xS
1 J
1 j
[
12
12
] 0 d
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 846 cm
1167.6151 259.00891 m
1440.729 259.20145 l
S
0 i
CM
1156.4152 586.99896 m
1167.6122 582.79108 l
1167.6182 591.1911 l
h
1156.4152 586.99896 m
f
0 J
0 j
[] 0 d
1 0 0 -1 0 846 cm
1156.4152 259.00104 m
1167.6122 263.20892 l
1167.6182 254.80893 l
h
1156.4152 259.00104 m
S
/Cs2 SC
0 sc
1 0 0 -1 1305.9614 614.46124 cm
-93.059998 11.080002 m
(/\)\(<.*759$*%)[ 26.130000 16.110000 17.790000 15.000000 20.550000 16.110000 17.220000 6.660000 15.000000 9.450000 16.110000 0.000000 ] xS
1 J
1 j
[
12
12
] 0 d
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 846 cm
1151.2094 321.99365 m
1424.7301 323.00797 l
S
0 i
CM
1435.9301 522.9505 m
1424.7457 527.19202 l
1424.7146 518.79205 l
h
1435.9301 522.9505 m
f
0 J
0 j
[] 0 d
1 0 0 -1 0 846 cm
1435.9301 323.0495 m
1424.7457 318.80801 l
1424.7146 327.20795 l
h
1435.9301 323.0495 m
S
/Cs2 SC
0 sc
1 0 0 -1 1305.9254 549.65955 cm
-76.449997 11.080002 m
(/\)\(<="$5>?)[ 26.130000 16.110000 17.790000 15.000000 21.660000 17.220000 9.450000 6.660000 8.880000 0.000000 ] xS
1 J
1 j
[
12
12
] 0 d
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 846 cm
1440.486 396.00443 m
879.92291 396.04395 l
S
0 i
CM
868.72296 449.95529 m
879.92322 445.75607 l
879.92267 454.15607 l
h
868.72296 449.95529 m
f
0 J
0 j
[] 0 d
1 0 0 -1 0 846 cm
868.72296 396.04471 m
879.92322 400.24393 l
879.92267 391.84393 l
h
868.72296 396.04471 m
S
/Cs2 SC
0 sc
1 0 0 -1 1113.2778 476.70404 cm
/F2.1[ 40 0 0 -40 0 0]sf
-45.060001 14.419861 m
(!"#)[ 25.960000 36.280000 0.000000 ] xS
1 J
1 j
[
12
12
] 0 d
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 846 cm
864.02295 466.42288 m
1424.4617 466.01401 l
S
0 i
CM
1435.6616 379.99414 m
1424.4586 384.18597 l
1424.4647 375.78598 l
h
1435.6616 379.99414 m
f
0 J
0 j
[] 0 d
1 0 0 -1 0 846 cm
1435.6616 466.00586 m
1424.4586 461.81403 l
1424.4647 470.21402 l
h
1435.6616 466.00586 m
S
/Cs2 SC
0 sc
1 0 0 -1 1017.52 405.72894 cm
/F1.1[ 30 0 0 -30 0 0]sf
-93.360001 11.080002 m
(/\)\(<.*@4*9$)[ 26.130000 16.110000 17.790000 15.000000 20.550000 16.110000 17.790000 16.680000 16.110000 15.000000 0.000000 ] xS
1 J
1 j
[
12
12
] 0 d
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 846 cm
1440.2178 546.99683 m
879.92291 547.97229 l
S
0 i
CM
868.72296 298.00818 m
879.93024 293.8277 l
879.91559 302.22766 l
h
868.72296 298.00818 m
f
0 J
0 j
[] 0 d
1 0 0 -1 0 846 cm
868.72296 547.99182 m
879.93024 552.1723 l
879.91559 543.77234 l
h
868.72296 547.99182 m
S
/Cs2 SC
0 sc
1 0 0 -1 1307.5 326.88907 cm
-75.07 11.080002 m
(/\)\(<.*\(&?)[ 26.130000 16.110000 17.790000 15.000000 20.550000 16.110000 17.790000 6.660000 0.000000 ] xS
5 w
1 J
1 j
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 846 cm
885.92291 624.07025 m
1419.079 622.86151 l
S
0 i
CM
1433.479 223.17114 m
1419.0668 228.53848 l
1419.0913 217.73851 l
h
1433.479 223.17114 m
f
0 J
0 j
1 0 0 -1 0 846 cm
1433.479 622.82886 m
1419.0668 617.46155 l
1419.0913 628.26147 l
h
1433.479 622.82886 m
S
CM
871.52295 221.89709 m
885.93512 216.52975 l
885.91064 227.32973 l
h
871.52295 221.89709 m
f
1 0 0 -1 0 846 cm
871.52295 624.10291 m
885.93512 629.47028 l
885.91064 618.67029 l
h
871.52295 624.10291 m
S
/Cs2 SC
0 sc
1 0 0 -1 1152.0229 247.29289 cm
-105.655 11.080002 m
(!"334#56\)$5#7)[ 21.660000 17.220000 25.590000 25.590000 16.680000 16.680000 6.660000 16.110000 16.110000 9.450000 6.660000 16.680000 0.000000 ] xS
3 w
1 J
1 j
[
12
12
] 0 d
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 846 cm
960.90002 744.02429 m
1037.1 744.02429 l
S
0 i
CM
1048.3 101.97574 m
1037.1 106.17574 l
1037.1 97.775734 l
h
1048.3 101.97574 m
f
0 J
0 j
[] 0 d
1 0 0 -1 0 846 cm
1048.3 744.02429 m
1037.1 739.82428 l
1037.1 748.22424 l
h
1048.3 744.02429 m
S
CM
949.70001 101.97574 m
960.90002 97.775734 l
960.90002 106.17574 l
h
949.70001 101.97574 m
f
1 0 0 -1 0 846 cm
949.70001 744.02429 m
960.90002 748.22424 l
960.90002 739.82428 l
h
949.70001 744.02429 m
S
/Cs2 SC
0 sc
1 0 0 -1 1176 101.97574 cm
-117.525 11.080002 m
(+\)$\)8\)9*':\(;\)$*)[ 21.120000 16.110000 9.450000 16.110000 17.790000 16.110000 15.000000 16.110000 8.340000 21.660000 17.790000 17.790000 16.110000 9.450000 0.000000 ] xS
ep
end
%%Trailer
%%EOF
