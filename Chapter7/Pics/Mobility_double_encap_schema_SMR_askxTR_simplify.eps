%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 1729.000000 1301.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.13.3 (Build 17D47) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 1729 1301
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 1729 1301
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /M put
dup 34 /o put
dup 35 /b put
dup 36 /i put
dup 37 /l put
dup 38 /t put
dup 39 /y put
dup 40 /x put
dup 41 /T put
dup 42 /R put
dup 43 /one put
dup 44 /space put
dup 45 /two put
dup 46 /C put
dup 47 /n put
dup 48 /r put
dup 49 /p put
dup 50 /a put
dup 51 /e put
dup 52 /D put
dup 53 /A put
dup 54 /c put
dup 55 /H put
dup 56 /d put
dup 57 /v put
dup 58 /s put
dup 59 /fi put
dup 60 /h put
dup 61 /L put
dup 62 /I put
dup 63 /S put
dup 64 /P put
dup 65 /hyphen put
dup 66 /N put
dup 67 /m put
dup 68 /u put
dup 69 /g put
dup 70 /slash put
dup 71 /three put
dup 72 /f put
dup 73 /q put
dup 74 /less put
dup 75 /O put
dup 76 /comma put
dup 77 /greater put
dup 78 /k put
dup 79 /E put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<


1239B8002C2FB8002DDCB8002210B80035DC410500DA003500EA003500025D411B0009003500190035002900350039003500490035005900350069003500790035008900350099003500A9003500B9003500C90035000D5DB8001B10B80040DC00BA000D001600032BB8000D10BA0027003200032BB8002710BA003A000300032BB8003A10B8000310B80001D0B800012FBA001F0003003A111239B8003A10B8003DD0303113153633321E0215140E022322262723061E0233323E0235342627353E0135342E0223220E020733343E0233321615140E022B01222322DA181B20372818192A381F494C025501213E5836325942273F412A38213A4F2E3551361D02551021332236481625311B12050504019548031123332120332313574537563B1E1B365135405E0E02134A3031482E17223C54331F382A1939391C2C1D0F000001002EFFF9022A02020006001500B800012FB800042FBA000600040001111239303101350515053525022AFE0401FCFE5701BE44E63EE543C100000001002EFFF9022A02020006001500B800042FB800012FBA0006000100041112393031371525352515052E01FCFE0401A93C43E53EE644C10002FFFA0000029002CA0003000B002500B800042FB800052FB800092FBA0000000700032BB8000010BA00020005000411123930311B0133130301333721173301C9790277ABFEEA6150012E4E69FEE90127014DFEB301A3FD36D7D702CA00000001002BFFF002AA02DB0025006DBA001E000B00032BB8001E10411B0006001E0016001E0026001E0036001E0046001E0056001E0066001E0076001E0086001E0096001E00A6001E00B6001E00C6001E000D5D410500D5001E00E5001E00025D00BA0019001000032BB8001910BA0006002300032BB8000610303101332E0323220E0215141E0233323637230E0323222E0235343E0233321602445F08344E6438527F552C29527C53899E0E5F031E35492F405C3B1C1C3B5B404B6D01F339573A1E3B66894E4E88643996872C4C371F30516D3D386851304C0000000002004E0000029A02CA000E0019007DB8001B2FBA0001000F00032BB8000110B8001B10B80016DCB80007DC410500DA000700EA000700025D411B0009000700190007002900070039000700490007005900070069000700790007008900070099000700A9000700B9000700C90007000D5D00BA0000001000032BB8000010BA000F000100032BB8000F103031371133321E0215140E0423031133323E0235342623ADA0425A39191B2A35363010FDF559825428B2A550022A25476540425D3E241305027AFD36325F8B5AACA80000000001004E0000023E02CA000B0033BA0009000000032BB8000910B80004D000BA0004000100032BBA0000000900032BB8000010BA0008000500032BB800081030







0116005301850032014DFFEF022C0057022C0018022C001D0258002E0258002E0288FFFA02D2002B02C0004E0263004E02D2004E01030052022C004E0367005002D2004D02F800260288004E02AD004E02880025023E000202190024025100430219002402510024021900240128000C023E0024022C004000DE00450207004500DE004503550040022C0040023E00240251004302510024014D003D01F4001F013B0009022C004001F4000E0206000901F400080206000C04BE003700000048004800760088009E00C4014C02320250026C029C030A037203A403E003FA041A046404A4054405AC063C06D006F608000898090A09A80A100A5C0B0E0B600B8A0BBC0BD60C700CB80D580DF00E860EB40F580FAA0FFA101A104610B0112A11600001000000310096000900680004000200000000001E00000200042800030001B800142B01BA0002000200162B01BF0003003E0037002B001F00130000001C2B00BF0002004A0037002B001F00130000001C2B00BA00040004001B2BB8000120457D691844B8000A2BB800002B000000
00>] def
/CharStrings 49 dict dup begin
/.notdef 0 def
/space 1 def
/comma 2 def
/hyphen 3 def
/slash 4 def
/one 5 def
/two 6 def
/three 7 def
/less 8 def
/greater 9 def
/A 10 def
/C 11 def
/D 12 def
/E 13 def
/H 14 def
/I 15 def
/L 16 def
/M 17 def
/N 18 def
/O 19 def
/P 20 def
/R 21 def
/S 22 def
/T 23 def
/a 24 def
/b 25 def
/c 26 def
/d 27 def
/e 28 def
/f 29 def
/g 30 def
/h 31 def
/i 32 def
/k 33 def
/l 34 def
/m 35 def
/n 36 def
/o 37 def
/p 38 def
/q 39 def
/r 40 def
/s 41 def
/t 42 def
/u 43 def
/v 44 def
/x 45 def
/y 46 def
/fi 47 def
/uni2B91 48 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-951 -481 1987 1077}def
/UniqueID 4127891 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C94D62A069D16B42DC713A3CCB6051AA434463E2559D7E1B4AC0CAF8C8980CAC59FE7105820AA3180D546B3C4172B151F9C12D4EDF8AB4F537563E20A6195834682B37CE591441AB2FCF7A4FCDDD8687681BC7A50F1BA945769808EC904E3C1BE904BACDC0D05811D21C120C2EB53B3FF0AA4C470AF6BC66F4C1AE80B2039EE346690997A5EDA5F03B0922A7C3978B2891734517119175FA93AC964C16E046BDF0AE3E37B8B540E4C457E90FFB7AADE701ADAD90D0C116412D8BE40A16997DF807247B527326DFC2A2D7A490D32DEACD41D6D402E6A9B554FB5118F107C5475B83C41983475D032EE4DE8D80CBAAB090E4051568910977CE217B2DA78D792310B9ABB195567378909DB2C3B6CC41F86ACCFC57174A9B9E706C47459C16C85591199F0B30EE687F63F1B6F91337D3D4942E247CBD2F429BD033B6BC1F011884B1F5462C21B38A66005331855EF2A3C9E47273D2CB6BCB0253E674CAFEB4E86CABBB06F2087CCF323EBEC0EDD4677F800DAEA30A335B95AE2B03EA84B6E34DB8C6A8F916426598E24195466B88889A78D7C456FC615A8E2F1E684B0DC9BBD87A3BE84A77E7E24B8761DAE08632B142C65673FBC0B11353F79AB9199235A55E0B0517219BDEF4CCEFF77DF8FB44499EB9D0F0B68CC2049C453ACC44D5E8745B2510A4DB1FB11C0308DE69F950AA5A91D63AF75EDA37D7F0F169324A2BB8A6E50BA27F67C8E42F560365B4C3DA9349436190C41093D7434FAE71B58C8E98A800A57A9C6




901A2C756019D13185B62260217399FCD62EDE94458D843C3F51FAAA401FEFD79FCB23ACF51C9776AE708AB9BB28691B222D2ACDD17F0403CC32EDFA6C102761FDC7979B951DE64FBAD4DEF0387818EED65E5FC86933BF71694F6A8B9BAE2D2FCDF9DC664058C5D864F3CE65D81038E0FBBBBCB3EB705BEBCDD3C3ABA5FAC0FE49454EA0E12C97F5DD57E2E89E5CE6445977169E36C509D3518AF346D3C42A1B75257364A39923B8B8E1194A824BE21DF36C17573AE61F8FA48838252D2A9F6B53815CD214E31A54ED111EC24C0F5826CC013629829417E219766428B5A2008890DA8416C7BC337E7244E7A49DE8215A64E23DA348C227382DFC79DF0EA5E35507CBCA4FC5BC7E3CA934F00255E69CB5A4CEC6DAC94B42E6200FEE8A9411C033D10DE912F0D9D9836624B8343F60824D7BCAADBFDDF4A49A34C9101F71F7DED3F8953B57180975E2EEB0DDE774D493DEF13243A613D9FC6A92976C985E18C0C803352D23A6A657CD759962550D8B7230C50D43D4BFD8325D28125DC1824611E4700EB1471E5E71C45CBD44E90D4D913B3C57A96261A2A071040D31185DDB636C91CA2F63EC45C9FE497674529D56603B705903AC37E5A4559D385FB4B9B61232BE0ABB7041B2EBFA311E1FE82AE19F3BA3D0452C60DD65926E61332DE938533A8035EC753FC961E333EC7C924968CC2BC4F15BB876F26CC193FDEFA6EC5D2CAE6A8488304E03CB781E20FB0850F6F62E5F4A440BBAE42F3DDD1E5EB7BB1FB4C0FA9EAFD29CCA224FDC281EFDD224059C86AF63351B86C5196237B012F181A17BDFFEDF951578FEAAA77DECD7C8A6E607E0D3505902436F176ACA902262A57806D4BE5ED9D0437E749807362FB66379057E2268CF0C646E0EBDC6DCDF98A09AF3942C4C746B432C439B6C270B257F655972741B1367E2DA1D460765D5196D6963D8D152E25A4CBC4ADC707DC8841FA31BCA64E76891ACAB57789DF13A24A42DE07F4F06492123A19862BBD6F52467845158EF3217D9C83D8A07094AAC146F0A9F31C91BAD1DA05B6CF26153D85908DB6DA3F6E71E242A68A1E4B9E966EC6140070734D842457F7367FC6D966D23DCDE757A67F25A421ADD548CB71BAF00AC2C860BBB81263D59F4715989CA7509FED3F21F93158DD758432628908C25C77A0C4D01DEE33F16FC88881527AB954B4179D9C0D27F050834EC6D6D766173BDFB98C097831808912FCD80577208720111F41A42402DEC149717EC603ADD3630ABDB67C848FC5ED60A9EF9C6F4F5DD24258BF2349E4C866A418E7EC9F307B6AD2A96DEE50BE038C106335006835DD86ECD088ECF9635A1AB99F091521641C81A47A83CCF18C6F26D97469B2FC17EBD83E0726A75EC31649B1A80842415C4478A5500709BA75964763901E523891741470FBF45023CB375256A8A18CD92C13728C37085

1F6E9859772BE90447A722DD4362EEAB569DC3C81EDBC953E08E5ED9562C00ED589B161C0D443C7359FC6548CCC62EDBCCF88E6C69D56F6511147DCDD2323F3373CC8F7F1F02991DCF108CF7ACA0FBF1308836D27E1A2BCB5BA3E6A5F57D59A3FC13CBEC72F2EEC8CA718F554CCB25D0DC2997A0F7AAAD204A82266ADFDCCED33B96E07A05DDFB823E7DD7666DDA3CBF9964F440D856CE300D8108CF624F3708A04B199F69215950E06C039438BBD6F94B74A67053078086ADC91AA5F7F60721B0DA67E9077F307C3A5EA2AAE2E5B2C3159EC85C2550C221AD296F68FD9EE4D60E90603D5DF6441C5822EE1E36A380C2DF0ED45A3A5B1DC013B9B9ECC976CE591AE732E6B87D11E3210131B9810695C905A7D0C115ED0BBFABE15C433F0E8E49C01C548D883B7CC15F0ECB17F6D745A0F70E94AD4A2DC221E95425C20EFA48FF69E503AED87477573022D13DD2BC566C314A412192EA75E7D384F84B45D571976C46645AFA0F6D9EC46C05D4599F09FC1523744D6BF44711DA55E26B47076E9745AC737238A7843F6304CF801BD71CF5000CC7C4368A3C3842ABB9AB47F6C59EEC7FFDD69C4B142A61F0FF1EF636FA9F369C57C06C202353B736416F13EEDC75A01BDC6EB195E88D29B78155437B1B3DE84D970D70FD7C497EB2753626DE3C36104652324E217746C00FC4BD53858B0FE650228ED4EEF759B5A038D9A2562C23257181D390E52C35981BEC6043129AC718018641CF88B4C106DD35C41AFC5EDDDCD986B30DD074CFA673EFC91CE6500F39B12F759A8EA3E150467DCEB9E7004D1C9C60F6442BB7E4D9B3FDB3A9179563F3D184E97A45A2527AB126ACAA52207FB3A87AA90C0D4205CD73EFA60B37ABBADEFA2545CA440FD29BE30A9FDAF708A717FD
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F1.1/HelveticaNeue renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 1 1 sc
q
0 0 1729 1301 rc
0 1301 m
1729 1301 l
1729 0 l
0 0 l
h
0 1301 m
f
3 w
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 0 1301 cm
189 99 m
189 1098 l
S
2 w
[
16
8
2
8
] 0 d
0.69411767 0 0.10980392 sc
189 189.66667 m
189 189.66667 117 207.18047 117 234 c
117 253.83179 156.36894 271.85602 176.88387 279.90207 c
S
0 i
CM
185.90077 1017.8002 m
178.12137 1024.4785 l
175.64832 1017.7166 l
h
185.90077 1017.8002 m
f
0 J
0 j
[] 0 d
1 0 0 -1 0 1301 cm
185.90077 283.19983 m
178.12137 276.52145 l
175.64832 283.28342 l
h
185.90077 283.19983 m
S
/Cs2 SC
0 sc
1 0 0 -1 286 1071 cm
/F1.1[ 30 0 0 -30 0 0]sf
-92 -6.8399963 m
(!"#$%$&')[ 26.130000 17.220000 17.790000 6.660000 6.660000 6.660000 9.450000 0.000000 ] xS
-92 29 m
(\(\)*+,&",\(\)*-)[ 15.540000 17.220000 20.550000 16.680000 8.340000 9.450000 17.220000 8.340000 15.540000 17.220000 20.550000 0.000000 ] xS
5 w
1 J
1 j
[
20
20
] 0 d
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 1301 cm
750.89954 1206.1432 m
860.10046 1206.8568 l
S
0 i
CM
874.50018 94.049019 m
860.13574 99.543022 l
860.06519 88.743248 l
h
874.50018 94.049019 m
f
0 J
0 j
[] 0 d
1 0 0 -1 0 1301 cm
874.50018 1206.9509 m
860.13574 1201.457 l
860.06519 1212.2567 l
h
874.50018 1206.9509 m
S
CM
736.49982 94.950981 m
750.86426 89.456978 l
750.93481 100.25675 l
h
736.49982 94.950981 m
f
1 0 0 -1 0 1301 cm
736.49982 1206.0491 m
750.86426 1211.543 l
750.93481 1200.7433 l
h
736.49982 1206.0491 m
S
/Cs2 SC
0 sc
1 0 0 -1 995.5 99 cm
-90.014999 11.080002 m
(."/&0"%,1%2/3)[ 21.660000 17.220000 16.680000 9.450000 9.450000 17.220000 6.660000 8.340000 17.790000 6.660000 16.110000 16.680000 0.000000 ] xS
7 w
1 J
1 j
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 1301 cm
241.89961 1206.1461 m
377.10037 1206.8539 l
S
0 i
CM
394.70013 94.053925 m
377.13495 100.74598 l
377.06583 87.546165 l
h
394.70013 94.053925 m
f
0 J
0 j
1 0 0 -1 0 1301 cm
394.70013 1206.946 m
377.13495 1200.254 l
377.06583 1213.4539 l
h
394.70013 1206.946 m
S
CM
224.29987 94.946075 m
241.86507 88.254021 l
241.93417 101.45383 l
h
224.29987 94.946075 m
f
1 0 0 -1 0 1301 cm
224.29987 1206.054 m
241.86507 1212.746 l
241.93417 1199.5461 l
h
224.29987 1206.054 m
S
/Cs2 SC
0 sc
1 0 0 -1 498.5 99 cm
-72.239998 11.080002 m
(42&2,1%2/3)[ 21.120000 16.110000 9.450000 16.110000 8.340000 17.790000 6.660000 16.110000 16.680000 0.000000 ] xS
5 w
1 J
1 j
[
40
20
5
20
] 0 d
0.60000002 i
/Cs1 SC
0.69411767 0 0.10980392 sc
1 0 0 -1 0 1301 cm
1236.9 1206 m
1346.1 1206 l
S
0 i
CM
1360.5 95 m
1346.1 100.4 l
1346.1 89.599998 l
h
1360.5 95 m
f
0 J
0 j
[] 0 d
1 0 0 -1 0 1301 cm
1360.5 1206 m
1346.1 1200.6 l
1346.1 1211.4 l
h
1360.5 1206 m
S
CM
1222.5 95 m
1236.9 89.599998 l
1236.9 100.4 l
h
1222.5 95 m
f
1 0 0 -1 0 1301 cm
1222.5 1206 m
1236.9 1211.4 l
1236.9 1200.6 l
h
1222.5 1206 m
S
/Cs2 SC
0 sc
1 0 0 -1 1426.5 95 cm
-42.779999 11.080002 m
(56&$"/)[ 19.440000 16.110000 9.450000 6.660000 17.220000 0.000000 ] xS
3 w
1 J
1 j
[
3
9
] 0 d
0.60000002 i
/Cs1 SC
0.69411767 0 0.10980392 sc
1 0 0 -1 0 1301 cm
720 297 m
144 297 l
S
0.69411802 0 0.109804 sc
729 1051 m
153 1051 l
S
0.69411999 0 0.1098 sc
0 i
1 0 0 -1 115.5 957 cm
-65.279999 -6.8399963 m
(72/8"930)[ 21.660000 16.110000 16.680000 17.790000 17.220000 15.000000 16.110000 0.000000 ] xS
-37.5 29 m
(:&20&:)[ 15.000000 9.450000 16.110000 9.990000 9.450000 0.000000 ] xS
1 0 0 -1 124.5 217 cm
-65.279999 -6.8399963 m
(72/8"930)[ 21.660000 16.110000 16.680000 17.790000 17.220000 15.000000 16.110000 0.000000 ] xS
-50.834999 29 m
(;/$:<3:)[ 15.540000 16.680000 6.660000 15.000000 16.680000 16.110000 0.000000 ] xS
[] 0 d
0.60000002 i
0 0 0 sc
1 0 0 -1 0 1301 cm
475 96.164642 m
476 288 l
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 476 1235.0243 cm
/F1.1[ 50 0 0 -50 0 0]sf
-57.825001 17.800003 m
(\(\)*+)[ 25.900000 28.700000 34.250000 0.000000 ] xS
1 0 0 -1 197 1235.0243 cm
-101.825 17.800003 m
(=>?@A!B)[ 27.800000 12.950000 32.400000 32.400000 19.450000 43.550000 0.000000 ] xS
7 w
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 1301 cm
216.89999 159 m
447.42755 159.00003 l
S
0 i
CM
465.02756 1142 m
447.42755 1148.6 l
447.42755 1135.4 l
h
465.02756 1142 m
f
0 J
0 j
1 0 0 -1 0 1301 cm
465.02756 159.00003 m
447.42755 152.40002 l
447.42755 165.60004 l
h
465.02756 159.00003 m
S
CM
199.3 1142 m
216.89999 1135.4 l
216.89999 1148.6 l
h
199.3 1142 m
f
1 0 0 -1 0 1301 cm
199.3 159 m
216.89999 165.60001 l
216.89999 152.40001 l
h
199.3 159 m
S
/Cs2 SC
0 sc
1 0 0 -1 889 1168.889 cm
/F1.1[ 30 0 0 -30 0 0]sf
-105.655 11.080002 m
(."CCD/$62&$/E)[ 21.660000 17.220000 25.590000 25.590000 16.680000 16.680000 6.660000 16.110000 16.110000 9.450000 6.660000 16.680000 0.000000 ] xS
3 w
1 J
1 j
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 1301 cm
765 246.97746 m
765 1098 l
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 766 1084.2114 cm
/F1.1[ 50 0 0 -50 0 0]sf
-57.825001 17.800003 m
(\(\)*-)[ 25.900000 28.700000 34.250000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 1301 cm
1061 246.97746 m
1062 720 l
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 1062 1084.2114 cm
-84.699997 17.800003 m
(!*F!?)[ 43.550000 34.250000 16.650000 43.550000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 1301 cm
1341 96.164642 m
1341 1098 l
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 1342 1235.0243 cm
-57.825001 17.800003 m
(\(\)*G)[ 25.900000 28.700000 34.250000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 1301 cm
1628 96.164642 m
1629 1098 l
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 1629 1235.0243 cm
-35.599998 17.800003 m
(.B)[ 36.100000 0.000000 ] xS
7 w
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 1301 cm
503.22055 157.59424 m
1313.1001 155.0864 l
S
0 i
CM
1330.7001 1145.9681 m
1313.0797 1152.5135 l
1313.1206 1139.3136 l
h
1330.7001 1145.9681 m
f
0 J
0 j
1 0 0 -1 0 1301 cm
1330.7001 155.03189 m
1313.0797 148.48642 l
1313.1206 161.68636 l
h
1330.7001 155.03189 m
S
CM
485.62064 1143.3513 m
503.24097 1136.8058 l
503.2001 1150.0057 l
h
485.62064 1143.3513 m
f
1 0 0 -1 0 1301 cm
485.62064 157.64874 m
503.24097 164.1942 l
503.2001 150.99426 l
h
485.62064 157.64874 m
S
1 J
1 j
0.60000002 i
1368.9 155.33353 m
1600.1591 155.33508 l
S
0 i
CM
1617.759 1145.6648 m
1600.1591 1152.2649 l
1600.1591 1139.0649 l
h
1617.759 1145.6648 m
f
0 J
0 j
1 0 0 -1 0 1301 cm
1617.759 155.33521 m
1600.1591 148.73508 l
1600.1591 161.93509 l
h
1617.759 155.33521 m
S
CM
1351.3 1145.6666 m
1368.8999 1139.0665 l
1368.9 1152.2665 l
h
1351.3 1145.6666 m
f
1 0 0 -1 0 1301 cm
1351.3 155.3334 m
1368.8999 161.93352 l
1368.9 148.73352 l
h
1351.3 155.3334 m
S
1 J
1 j
[
28
28
] 0 d
0.60000002 i
216.89999 378 m
737.09998 378 l
S
0 i
CM
754.70001 923 m
737.09998 929.59998 l
737.09998 916.40002 l
h
754.70001 923 m
f
0 J
0 j
[] 0 d
1 0 0 -1 0 1301 cm
754.70001 378 m
737.09998 371.39999 l
737.09998 384.60001 l
h
754.70001 378 m
S
CM
199.3 923 m
216.89999 916.40002 l
216.89999 929.59998 l
h
199.3 923 m
f
1 0 0 -1 0 1301 cm
199.3 378 m
216.89999 384.60001 l
216.89999 371.39999 l
h
199.3 378 m
S
/Cs2 SC
0 sc
1 0 0 -1 470 943.8891 cm
/F1.1[ 30 0 0 -30 0 0]sf
-41.939999 11.080002 m
(47.@)[ 21.120000 21.660000 21.660000 0.000000 ] xS
5 w
1 J
1 j
[
20
20
] 0 d
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 1301 cm
189 450 m
755.50006 448.05002 l
755.46735 438.55008 774.46722 438.48468 774.49994 447.98462 c
1039.5229 447.07239 l
S
0 i
CM
1053.9229 853.97717 m
1039.5044 859.32758 l
1039.5416 848.52765 l
h
1053.9229 853.97717 m
f
0 J
0 j
[] 0 d
1 0 0 -1 0 1301 cm
1053.9229 447.0228 m
1039.5044 441.67239 l
1039.5416 452.47235 l
h
1053.9229 447.0228 m
S
/Cs2 SC
0 sc
1 0 0 -1 470 875.1109 cm
-90.894997 11.080002 m
(!21A*3E$:&30)[ 26.130000 16.110000 17.790000 11.670000 20.550000 16.110000 17.220000 6.660000 15.000000 9.450000 16.110000 0.000000 ] xS
1 J
1 j
[
20
20
] 0 d
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 1301 cm
1061.5792 520.98822 m
774.49994 521.75977 l
774.47443 512.25977 755.47449 512.31085 755.50006 521.81079 c
210.89992 523.27448 l
S
0 i
CM
196.49997 777.68683 m
210.91443 772.32556 l
210.88541 783.12549 l
h
196.49997 777.68683 m
f
0 J
0 j
[] 0 d
1 0 0 -1 0 1301 cm
196.49997 523.31317 m
210.91443 528.67444 l
210.88541 517.87451 l
h
196.49997 523.31317 m
S
/Cs2 SC
0 sc
1 0 0 -1 920 808.8891 cm
-75.285004 11.080002 m
(!21AB"&$H')[ 26.130000 16.110000 17.790000 11.670000 21.660000 17.220000 9.450000 6.660000 8.880000 0.000000 ] xS
1 J
1 j
[
20
20
] 0 d
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 1301 cm
189 591.33331 m
755.5 592.15295 l
755.51373 582.65295 774.51373 582.68042 774.5 592.18042 c
1052.2307 592.58221 l
1052.2444 583.08221 1071.2444 583.10974 1071.2306 592.60968 c
1319.1 592.96832 l
S
0 i
CM
1333.5 708.01086 m
1319.1078 713.4317 l
1319.0922 702.63171 l
h
1333.5 708.01086 m
f
0 J
0 j
[] 0 d
1 0 0 -1 0 1301 cm
1333.5 592.98914 m
1319.1078 587.5683 l
1319.0922 598.36829 l
h
1333.5 592.98914 m
S
/Cs2 SC
0 sc
1 0 0 -1 470 731.1109 cm
-33.060001 11.080002 m
(?!*)[ 19.440000 26.130000 0.000000 ] xS
1 J
1 j
[
20
20
] 0 d
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 1301 cm
1341 675 m
1083.8 673.1571 l
S
0 i
CM
1069.4004 627.94604 m
1083.7614 622.44299 l
1083.8387 633.24274 l
h
1069.4004 627.94604 m
f
0 J
0 j
[] 0 d
1 0 0 -1 0 1301 cm
1069.4004 673.05396 m
1083.7614 678.55701 l
1083.8387 667.75726 l
h
1069.4004 673.05396 m
S
/Cs2 SC
0 sc
1 0 0 -1 1213 632.1109 cm
-91.195 -12.699997 m
(!21A*3ID3:&)[ 26.130000 16.110000 17.790000 11.670000 20.550000 16.110000 17.790000 16.680000 16.110000 15.000000 0.000000 ] xS
/F1.1[ 20 0 0 -20 0 0]sf
-91.889999 37.139999 m
(H"0,J=*=K.L,*=K.M)[ 5.920000 11.480000 6.660000 5.560000 12.000000 11.120000 13.700000 11.120000 15.200000 14.440000 5.560000 5.560000 13.700000 11.120000 15.200000 14.440000 0.000000 ] xS
1 0 0 -1 916 578.1109 cm
/F1.1[ 30 0 0 -30 0 0]sf
-73.904999 11.080002 m
(!21A*31%')[ 26.130000 16.110000 17.790000 11.670000 20.550000 16.110000 17.790000 6.660000 0.000000 ] xS
1 J
1 j
[
20
20
] 0 d
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 1301 cm
189 812.66669 m
755.5 813.81409 l
755.51929 804.31409 774.51923 804.3526 774.5 813.8526 c
1319.1001 814.95563 l
S
0 i
CM
1333.5 486.0152 m
1319.111 491.44434 l
1319.0891 480.64438 l
h
1333.5 486.0152 m
f
0 J
0 j
[] 0 d
1 0 0 -1 0 1301 cm
1333.5 814.9848 m
1319.111 809.55566 l
1319.0891 820.35565 l
h
1333.5 814.9848 m
S
/Cs2 SC
0 sc
1 0 0 -1 470 515.1109 cm
-33.060001 11.080002 m
(?!*)[ 19.440000 26.130000 0.000000 ] xS
2 w
1 J
1 j
[
16
8
2
8
] 0 d
0.60000002 i
/Cs1 SC
0.69411802 0 0.109804 sc
1 0 0 -1 0 1301 cm
189 594 m
189 594 99 640.05066 99 702 c
99 750.37976 153.89044 790.68939 177.93718 806.02728 c
S
0 i
CM
186.17047 490.03149 m
179.79164 498.05835 l
176.08656 491.88483 l
h
186.17047 490.03149 m
f
0 J
0 j
[] 0 d
1 0 0 -1 0 1301 cm
186.17047 810.96851 m
179.79164 802.94165 l
176.08656 809.11517 l
h
186.17047 810.96851 m
S
/Cs2 SC
0 sc
1 0 0 -1 257.15884 603 cm
-54.5 -6.8399963 m
(?!*)[ 19.440000 26.130000 0.000000 ] xS
-54.5 29 m
(\)$C3"D&)[ 17.220000 6.660000 25.590000 16.110000 17.220000 16.680000 0.000000 ] xS
1 0 0 -1 1207 421.88907 cm
-80.904999 -12.699997 m
(>/9"N3,?!*)[ 7.770000 16.680000 15.000000 17.220000 15.570000 16.110000 8.340000 19.440000 26.130000 0.000000 ] xS
/F1.1[ 20 0 0 -20 0 0]sf
-80.400002 37.139999 m
(H"0,JO>4L,=*=K.M)[ 5.920000 11.480000 6.660000 5.560000 12.000000 12.220000 5.180000 14.080000 5.560000 5.560000 11.120000 13.700000 11.120000 15.200000 14.440000 0.000000 ] xS
5 w
1 J
1 j
[
20
20
] 0 d
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 1301 cm
189 959.88849 m
755.5 960.43506 l
755.50916 950.93512 774.50916 950.95343 774.5 960.45343 c
1319.1 960.97888 l
S
0 i
CM
1333.5 340.00723 m
1319.1052 345.42114 l
1319.0948 334.62112 l
h
1333.5 340.00723 m
f
0 J
0 j
[] 0 d
1 0 0 -1 0 1301 cm
1333.5 960.99274 m
1319.1052 955.57886 l
1319.0948 966.37885 l
h
1333.5 960.99274 m
S
/Cs2 SC
0 sc
1 0 0 -1 470 371.11093 cm
/F1.1[ 30 0 0 -30 0 0]sf
-73.904999 11.080002 m
(!21A*31%')[ 26.130000 16.110000 17.790000 11.670000 20.550000 16.110000 17.790000 6.660000 0.000000 ] xS
1 J
1 j
[
20
20
] 0 d
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 1301 cm
1341 891 m
774.49988 887.88556 l
774.55206 878.38568 755.55237 878.28125 755.50012 887.78113 c
210.89967 884.78705 l
S
0 i
CM
196.49989 416.29208 m
210.86998 410.81302 l
210.92935 421.61285 l
h
196.49989 416.29208 m
f
0 J
0 j
[] 0 d
1 0 0 -1 0 1301 cm
196.49989 884.70789 m
210.86998 890.18701 l
210.92935 879.38715 l
h
196.49989 884.70789 m
S
7 w
1 J
1 j
0.60000002 i
216.89932 1025.1937 m
737.10065 1028.8063 l
S
0 i
CM
754.70026 272.07153 m
737.14648 278.79358 l
737.05487 265.5939 l
h
754.70026 272.07153 m
f
0 J
0 j
1 0 0 -1 0 1301 cm
754.70026 1028.9285 m
737.14648 1022.2064 l
737.05487 1035.4061 l
h
754.70026 1028.9285 m
S
CM
199.29976 275.9285 m
216.8535 269.20642 l
216.94516 282.4061 l
h
199.29976 275.9285 m
f
1 0 0 -1 0 1301 cm
199.29976 1025.0715 m
216.8535 1031.7936 l
216.94516 1018.5939 l
h
199.29976 1025.0715 m
S
1 J
1 j
0.60000002 i
792.89972 1028.5375 m
1313.1003 1026.1292 l
S
0 i
CM
1330.7001 274.9523 m
1313.0697 281.47076 l
1313.1309 268.2709 l
h
1330.7001 274.9523 m
f
0 J
0 j
1 0 0 -1 0 1301 cm
1330.7001 1026.0477 m
1313.0697 1019.5292 l
1313.1309 1032.7291 l
h
1330.7001 1026.0477 m
S
CM
775.29987 272.38101 m
792.93024 265.86255 l
792.86914 279.06241 l
h
775.29987 272.38101 m
f
1 0 0 -1 0 1301 cm
775.29987 1028.619 m
792.93024 1035.1375 l
792.86914 1021.9376 l
h
775.29987 1028.619 m
S
1 J
1 j
0.60000002 i
1368.9 1027.3335 m
1601.0294 1027.3342 l
S
0 i
CM
1618.6295 273.66565 m
1601.0295 280.26572 l
1601.0294 267.0657 l
h
1618.6295 273.66565 m
f
0 J
0 j
1 0 0 -1 0 1301 cm
1618.6295 1027.3344 m
1601.0295 1020.7343 l
1601.0294 1033.9343 l
h
1618.6295 1027.3344 m
S
CM
1351.3 273.6666 m
1368.9 267.06656 l
1368.9 280.26654 l
h
1351.3 273.6666 m
f
1 0 0 -1 0 1301 cm
1351.3 1027.3334 m
1368.9 1033.9335 l
1368.9 1020.7335 l
h
1351.3 1027.3334 m
S
/Cs2 SC
0 sc
1 0 0 -1 916 295.88907 cm
-105.655 11.080002 m
(."CCD/$62&$/E)[ 21.660000 17.220000 25.590000 25.590000 16.680000 16.680000 6.660000 16.110000 16.110000 9.450000 6.660000 16.680000 0.000000 ] xS
2 w
1 J
1 j
[
16
8
2
8
] 0 d
0.60000002 i
/Cs1 SC
0.69411802 0 0.109804 sc
1 0 0 -1 0 1301 cm
1341 593.66669 m
1341 593.66669 1404 608.09106 1404 630 c
1404 645.72992 1371.5248 660.00732 1353.2068 666.80945 c
S
0 i
CM
1344.1212 631.07147 m
1354.37 630.78363 l
1352.0321 637.59351 l
h
1344.1212 631.07147 m
f
0 J
0 j
[] 0 d
1 0 0 -1 0 1301 cm
1344.1212 669.92853 m
1354.37 670.21637 l
1352.0321 663.40649 l
h
1344.1212 669.92853 m
S
/Cs2 SC
0 sc
1 0 0 -1 1468.5 666 cm
-51.5 -6.8399963 m
(4$:6208)[ 21.120000 6.660000 15.000000 16.110000 16.110000 9.450000 0.000000 ] xS
-51.5 29 m
(?!*)[ 19.440000 26.130000 0.000000 ] xS
5 w
1 J
1 j
[
20
20
] 0 d
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 1301 cm
1061.9006 672.99597 m
786.89948 674.85217 l
S
0 i
CM
772.49982 626.05066 m
786.93597 620.74799 l
786.86304 631.54773 l
h
772.49982 626.05066 m
f
0 J
0 j
[] 0 d
1 0 0 -1 0 1301 cm
772.49982 674.94934 m
786.93597 680.25201 l
786.86304 669.45227 l
h
772.49982 674.94934 m
S
1 J
1 j
[
20
20
] 0 d
0.60000002 i
765 747 m
1319.1001 745.71735 l
S
0 i
CM
1333.5 555.31598 m
1319.0875 560.68268 l
1319.1125 549.88269 l
h
1333.5 555.31598 m
f
0 J
0 j
[] 0 d
1 0 0 -1 0 1301 cm
1333.5 745.68402 m
1319.0875 740.31732 l
1319.1125 751.11731 l
h
1333.5 745.68402 m
S
ep
end
%%Trailer
%%EOF
