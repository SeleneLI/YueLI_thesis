%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 1693.000000 1225.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.13.3 (Build 17D47) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 1693 1225
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 1693 1225
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /M put
dup 34 /o put
dup 35 /b put
dup 36 /i put
dup 37 /l put
dup 38 /t put
dup 39 /y put
dup 40 /x put
dup 41 /T put
dup 42 /R put
dup 43 /one put
dup 44 /space put
dup 45 /two put
dup 46 /C put
dup 47 /n put
dup 48 /r put
dup 49 /p put
dup 50 /a put
dup 51 /e put
dup 52 /D put
dup 53 /H put
dup 54 /d put
dup 55 /v put
dup 56 /s put
dup 57 /fi put
dup 58 /h put
dup 59 /L put
dup 60 /I put
dup 61 /S put
dup 62 /P put
dup 63 /hyphen put
dup 64 /N put
dup 65 /m put
dup 66 /u put
dup 67 /c put
dup 68 /g put
dup 69 /slash put
dup 70 /three put
dup 71 /f put
dup 72 /q put
dup 73 /less put
dup 74 /O put
dup 75 /comma put
dup 76 /greater put
dup 77 /k put
dup 78 /E put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<






B8000CD0B8000C2F00BA000F002400032BB8000F10BA001A000600032BB8001A10BA0001001400032BB8000110B8002410B8000CDC303101213E0333321E0217230E0123222E023721362E0223220E02151E0333323601A7FED702162635212035271754540B45362A3E28120101830215375B4535594124021F3E5B3E587401341E352817172736AE33321C2F3D222F6858392848623B3B644828580001000C0000012902D20017004FBA0003000000032BB8000310B80006D0B8000010B8000DDCB8000010B80014D000B800012FBA0011000A00032BB8001110BA0015000000032BB8001510B8000010B80003D0B8001510B80005D030311311331133352335343633321617352E012322061D01231563556464221F0B1A0B0C1F0C46495701BAFE4601BA4B48221803044A0404413F4D4B0000020024FF2F01FE02110028003C00BDBA002E000C00032BB8002E10BA0001000200032BB8000110B8000210B80038D0B800382FBA000400020038111239B8000210B80015D0411B0006002E0016002E0026002E0036002E0046002E0056002E0066002E0076002E0086002E0096002E00A6002E00B6002E00C6002E000D5D410500D5002E00E5002E00025DBA0021000C002E111239B800212FB80020DCB8000110B8003EDC00BA001B002600032BB8001B10BA0007003300032BB8000710BA0029001100032BB8002910303125112315232E0123220E0215141E02333236373315140E0223222E0227231E0333323627222E0235343E0233321E0215140E0201FE5001175231435C38181D3A563A3259160211263A2A152E271B015502283D4B247C74EE2A38220E11253A292838231011243B2C01D94A2B2B334F612E355F472A2D30222B48331D091420172A3A24107E98233946232544341F20354222244839230000010040000001EC02CA001A0051BA001A000000032BB8001A10BA000E000B00032BB8000E10B8001A10B80002D0B8001A10B80018D0B800182F00B800002FB800012FB8000C2FBA0013000800032BB8001310BA001900010000111239303113113311343E0233321615113311342E0223220E02072311405513263927313855112A443317312D240A0202CAFD360124233B2C183830FEA201542A45321C0A1521180111000200450000009A02CA00030007002FBA0001000200032BB8000110B8000210B80004D0B8000110B80006D000B800052FBA0001000000032BB800011030311335231D011133119A5555026268685DFDFB020500000100450000020702CA000B0033BA000B000000032BB8000B10B80002D000B800012FB800052FB800002FBA000800010000111239BA000A000100001112393031131133353713330337230711455550B16CDCCD72EC02CAFD36C44AFEF20149BCE201A7000100450000009A02CA0003




00>] def
/CharStrings 48 dict dup begin
/.notdef 0 def
/space 1 def
/comma 2 def
/hyphen 3 def
/slash 4 def
/one 5 def
/two 6 def
/three 7 def
/less 8 def
/greater 9 def
/C 10 def
/D 11 def
/E 12 def
/H 13 def
/I 14 def
/L 15 def
/M 16 def
/N 17 def
/O 18 def
/P 19 def
/R 20 def
/S 21 def
/T 22 def
/a 23 def
/b 24 def
/c 25 def
/d 26 def
/e 27 def
/f 28 def
/g 29 def
/h 30 def
/i 31 def
/k 32 def
/l 33 def
/m 34 def
/n 35 def
/o 36 def
/p 37 def
/q 38 def
/r 39 def
/s 40 def
/t 41 def
/u 42 def
/v 43 def
/x 44 def
/y 45 def
/fi 46 def
/uni2B91 47 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-951 -481 1987 1077}def
/UniqueID 4127891 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C94D7F983BE6FE3E13C0C2348013BC3E7E2985F18B997402B9FAE91ED5203EED5F0D5C9F424722E1276D2F9D997ED14433AAC52404B9FBBB89AA808449C30588AF14CB2970B97D4027109433BFAEF40E6E80882DC6116364F0D47DF0FD4ECF0959B2E3C7C37A6CF359EDCD13D3BDB946210456F7BF109681270A0661FC3DCBFE21BA6D52EC354F4AF59B38D4BC852966C12FD04B403F86F93684146A1235CE31625DC52D86CBCD106B0D67089E30F88661F29D1F848C8365C511935C7EFDFA478ED82DD9CCDD963E7F83B040613966836E9DB8662B656300189F28D24146573CDD1DA2F5D5FCD38A4FA50756360A75A23616DDBEAFC65C7CA922B27B92764B8EC7B3E7A46C37AD5207F53AD9D3445566DCE6525E7B1B4740956765D0B206D8D84D45F7342DD4E3557F548B74FFAF8A162870C53EB5EA55A61A5DAB759F7E152BAE7F871B921BC4A1DCB7FF05CE6B081AF631781E42F9B0F39309343FAE835C3F3A7BDAE5175D53E570DF44A4F09641E05B5ED59C28D1F1012983F3A5F4DDC3B9940F32E5949911D26D4FAD1A94475F1085D41FE9C6EDF70F49A6883E249ED6FAA96950236AFFE90F1CF4377F9F713FB8CA79609B409953245C1A966C320291DEEEFB720FEB21DD6DE1662013E9FCA263FF9EF420C2D5DE8C60E1C39F567DE52DA955156FA030E688D1ACD91AF9D026E1991D5AC4C5D5A09FD09C9A8B4504A8224098F06B489A1F528C25C95F45F6BB8A2EF082B8F046C3D0B9F429E8CECD9D8118A

7A3767E0A9A164201930B2D5C553176007C6DA65D0693621AF0FDD7678E6F3D6526CFBD3AF701A2C210B9761192B862BC1CC9A585C61850EE245D472E4BC01B3945ABCEA3F93C9E58D75F21DC09710B57927C86C3066F67422B48ECDBAE3EF049A520C57790471E45FC0C9D4B88F891474F7AE52482474542549F5F350408CAF5A581EBFE10DA06074A84ECDD8D465663B7B5037286AAEFCA092DB34E7BA91C43B29869A85CD214AA264F9A8B72C6346F92BA0AA8E82AA6A1E8BFC3F45076514E1BE47F29F9D15A02075CB3B1C83C899956510F6E81646155B88E4B81B2A82E993D83B8965494D80FA5B31E00D365C206E728AE671D4F4542D2AD547CE0DAF38D0F66B9229AF3CC2002F02CE9E9AF83BE583B9A1A314BCF861A1FD08AFAD2CBB554FA5E00F947E1076AE49E4369F81189E792C5937CA15ABE2297B4F82AC02751CFEBCE13E50299CBD5AEA6A775972B44C4E2C9A37A7C8D445A8D0C71348905B55F4861A6981EB27FD2DF109D31A084598B584EDF64C2F4D1F58CE2410208784A1D6F6116C50FFFC819A14701BB5398F0141C3A2D4A6B8C86D7674800C1BD535F4132E767495CD9079FE5A9BA26492D9B136E644B77B9FBF21E8D41A0712ABA809C2F306D9FA8BD27C576B4BC3D7E615EAB5E6F2369E12B38215C256EEF1C6B0798ECF25E499532B30E0186994C8570A8A1FBCED8F4391A089DFEED2BA2D107B0E8D4659955609E1615377E545EDB333F8650913D3CE8B1DAE2196132FFB3FD2581F1EEF88764EE29E9042DC4DA54E71F2A6EB4AA6F2F5CDEE0C1055CCF8E38D10214E2F2998DAC5B278F5756EB13E9DA61D53E97AC76C999651AFAD44923286979634F3541109BD01574ED4FE814015AA551E2661F7CD77A4E401A36EB40F8569D469F15FA24910604161F185ED0FE4753DC0DD7582BCB148455362B17C0378E97DDDD46431A7605FE12F0BC118259C84672D1DE5855F2BDEB55745DB34F5F9C2C6E13F2C1AC0956AAB4681299B160B4CFDB7E2EBA198C2AAC467A8EBEE75FE2B64AF9B9A00D8853BB4255701839805557884454343057456501E02EB4131F5A08535E86FCA044AFCCE9282636BB52966B3706A4052533B80B874FA643B912629E59B72B98AAFD8F898416401B7018BBF8D074A46D23948AB57C4A0247A10CBA79050E18448DD9D4345DE5400F06883AEDE9F3A442B32A40EE7D2D16BD931AC23B6838E529B9BC79FE5ECD07FCD396EC53ECBB15AA5D54F78DA0FF31BEA598434D74FA0A3B8C8230103B0C0844576077655C4E98826A7E45F41478439BA46AE566DD0A4FD611DE31A18DC3D312060161DF966238FCA79D13B5E5FDC2A51E393EB0094072EB023BBD3928664836ED3785BCDACAD3B6257365C618D654603EA19190F2DA3C68B05829FA62E8C0D2B27CFC8E770B2101D5FC8F05F81E1F9FE544A
47EC6024C181C7C6704AD9DE1EA7464DBC8F713EEBBDC6E67C5A4E4F79152AF472BF4DC8CE84A254C02C952C66F62908A0136578433DC01553A944009797BF94F2A832D7622C32B9CFABC9DFC75B749A746A129061912074EBE5B0E35570B4D0D62648ADA759E912180CE78D2C2F7739A5D06B1F209A25A834FC155BDE062BD81FE248C3870D46B2AE569EBF359BD4BBE40D9AB74D442FC0206D47A8A211023F140CEA2095A21EE616BB94E1A6B0BAFC3FE1BF58C45E5D5CAB17A046BE76CE28C6322181B8039F27531FC28D3C40211B0C5EC032579689F0F7B80A67A0785A241EB087D2832EFC07554E80DF4C226408714CD62C86A745F8591E30435BA7AFF6AF1A0A34A0C3922AEB4464F5299E000C0E8620FAF39688FEDA4CB7F5C52E7A701C00B4991C44C747FC5EB84DF88EBD4BDD3424C6940AFBDFB53753F563FEC65457F4D089D157B7DA29A72F1EDB7414C29A29B43A752A0B4A233A4E3D8735CE33A9BAB15A9B2DBA55E484ACDEBEC8812FC8C1C5722EAAFF999F14773FADABB7CFD4EA41E69A866FD5D00FE002829B80FF3960AE4ACE741582E5B47C01783EC27ADB3888A91300AE3842AF0AA37FB2539B04432A555EDC29A5F5D688B30AA193B279B3220B37D02E288DACE8E814464CADECBEEFCE50EA780D25715AD15CA25CE7B8E17FEB854B72B9F02923FC1EC94E9A9EF9E3136D5C078CF18D192C385EAF56AEBD717BE68C11897321EF5328F18BBB9A74001EF2BB77C2DA6750239003A8ADD19E39F91C50FACC6973D1195173CEA353CB83F163461ED70CFA250F3BFA9762604D874E6297D95868B6E2F779426388BFF7AAF4CE976BA19A5FF58149B23F6E84BB37861D833555F85A76C780C4443B6CE692D52D2E88F3F13EC22BD1EE916B4939B60A9F73B0B288A65C9E9F82757AC4701B9B8A7F2B3363F4F71329720030A26BBB8B0BD6200444F2915CB35C32F34FA87584B396131FF0F8F88332F318E9D117CEDED4141484DEB67EF568A357E3B5EF5FB33BBDEA4CE1192509850ABBF6EDBCAC84B011EC98E499FF8850F6756519E5AED119B9FDF8B87FC403A04CECF07C9B911CA5C9A379732409344C3A20C8516458E0967BD9B7CFDC21A61BFEF9922AE25C4CEBCE5736A6DD7D9E801D78BFAFC3E18AC5F783272555238017DC85BF5E7DFBADAA14EC2438B1444D43471A7B3ED207A40A62232CCDF30DF378CD0B3D377C27C653282933118504B9AF51DB36F42133F594AB23C57F20638BEE5867B3D6D6475A8FDF9C2775B5CE99C3E026144A4DB0C5648B22461E8F6A380EB36A2673B89410AF469C4568F3EFD549661AD401CAEA5D83D853F9C54BE501AE2D5F8442744DA41E7BB2ABA2981C997991F013BC23F8452EAA1A4FA41140EEE768513D86EB97FBA2A08F300E72143916AD95D9DBDE21FA7FD8D07A7C1070FCBEEC28BC
3C34AA185CF9FC20B7699DFE2641CB837A77F963E3AB73E87170B36D0223B449B59BE9300DA95EAD6D9BDAD0F35E8927FCEF6ADB3E52983AE98B12E83D2787BE7B2D4D19AAC1251B40C1758983FDB3CA1E38AD09B5BB4F0B0728643EF7F891488FBA9C8F4CDB676F0100065CC7A20186ED3204FB0917F427C40AC7EE9854C46376843950C14CEAF6D3F8197E2114AF956D1E515ADB82E1D162BBF9B21026C1D0D88B28EAEB5E4864879396E7263BCF64C6216131DA1A410E0C7B1E0CFBB3FBCAED9140986A7C19661EC0E09DFB2B7A6E2551B01982442A8F1C4F6EBC316A84AD75F50ADD290A0178F5454690AC7DB7C130E144CD0933B1B7750D4C5B1E33B6BA002D7B07D7C3B9B6A3FF657340BCE2C849F8BFD1FDDA9578E163A30FEE5EB8C44BCDC056B23DBDFF54C50B9A4D066A0E50D7FE83D9361D012149F7D8D7D090BD0D18CEEA2CEEE11BB2741268CBB09ED5526A665A43567F7EB566E3EE03773F9A9ED06A01A9D753CAE421BBEAAB56D095843EFCDEFEED2935AA71BD7A081C6873F964BD4E6A4C7C80D54F5C524874D01997EE60F882E1BA7D8FFA7DC245AE7B7CD72AD574BD8E99EBD1F575A2332F8AEFF61BC52F91E9A679753B54ABC7FEA4206611834AA4B9230466BD5A994CE40F3B1C2FADC1DACB7FB6C312D4CA55B522C0337440A7800BB914B408A5593082277CE92C33747B1297851C19DA2181269504D7514DB53E12296029A3C5EA7343F686B3B010720ABBF2B563876EA9002B3A64963B04D587E332AC54CF76249E395C5AEEE00ABBFCC5F65152045F23542F36D79CB086337442B4AEF61CBCC1FD4A39729202D23C7A274958240B3AC89932455107D79E63120D9DBCAEDB8A58DB9C6CEC843EAA08CC0FD9997CE9218BA205209F750B1A0265A8F770E5EECF5FE1AAC0007D550FB5F14BD1F44586CA41FBB99CF539D5A1197BDD970CAAC0E118B62926BCEB66C183619F62C273D400882372EC608C13B06739E42C4F2917B9FEB9F021CBA2948FC26F54C1275EC5CA35563CB3E5A3CB1597DE9046C30670910807F278EB6EFBCEE20EBB3BBF15DDA77C410554CB08B1EBFC3C9DA9ADC17CBABC1A5C9508EECDF761A8C06DC1C9574D4265519BF9F1E695955A749BCCABBDACE8386255D011587803E1BDA82B9D6EF7621FB4D15F3F6722D7ECEA648477556C22F7430A3F2703867C947DA96816372DA695528B57CF6A9745E6D98B8AF09100165C0764A5F47FD34AFC764583A6C1E88936A0BE0D979F2A06E5214D0B3824721DC8A767F1C363B32B9BD6273922905610E5EA04DEA8CDA87D8D3C2A5272CE0F92F7B39222EB6C63326B9442AC0152A792C41FD7DFD2BF1C852C238BF64E3A9BD2F6457D0406721E70F095ED07C3690C93ABD0E343D7471DB31141F9856DDB4551501439111DDA3939421F4C5E59E43EFE5AA49009
5F98DE414A6730081325460F3B00BC76A843AC2EEFDE94F1C056145021FCB38903C0C2BBE64550996D03EEE474124363DDBB9E138C6D8FB571A147BDCB004B62D697ACA7BC1D1E2BB3D47FBB81AFE44336FC9DCFA0676BF6B57C7D5C20487113DE6501670BA298607E54263982525FC43161781392DAA58AB7D15D3F01CDDF85A5BB7A28A13086C4FC32A0A5182565F7EFFE6F046FEA84768189B086745AA63217DF418BD33143D1AF47C439706516E32C54E2C7945D8B69CF3769F5BD8F546459497004F431D58166E0BD50BB883547EA555E9EF023952548D8A739588A718FAB83E9A18A90EA9F3A549EB7CBF1C234C5802DA6ED22C9BD46AA074E5EBB01C97CFE69A1BA73EAA9FE97F801C13CB071F24257BCFA8EE91D5CFC709FD4CD0F9175048F3FC4080D56B44E6E926D33DB06E3984D686D552DA0B22E8C088880F125BA3A4B537669E485D981DE800542E81337BB49A11D86D9E127126C537EA705C905C8C77753EAA4D46EAC8DA64663EF367979F68E78B0F5F2CDD96F754573D8B49A89AAA89B35C56945A76D07BD5867C6E82AE280A8926436E7D68500EBCE5BBF3D3324951C749D655588B97B44316F0D0D67495B40639472E5B5668C09ABC3D114E79B4D165105112BC4D1F68BE5463BACED577398ECDCC8FCFAB25FFA7EFE084ED1BBA5933FBA76FA5998E5980C5D75047A960CC3237146CE4295BEC82111FD2A0F6CC780015924765D275C9C7EE936A61928A0506439814EA11B03842E53FDD10692CA8F81EAAAF21B2FC2B11F265DC95E179036B13BC845BA5F461FF27FCF3E69AD8B8EB688DA3F0D16047810FC48D01199219092F77BE621C943B9A101CDAC45573FE7D3F22D5C1849FB8A3C178FB569C525F03679CACA0CD99614872186A4E512A7EF25F46EC715DFD094F0223AF4B930EC6796F003D3B916FF8242321B1C574CBD040E887AAE886272844CD81E49AE1A97C38C2D94FC55F76C1733B54BB6926D9BF3BCE2F3BF2407D95FE5639429374B064A73E13756520A628BCA1E39C64E05B4E777BA7D9C94031C30E04D574925058E16CD8464FB0E3183E5EB79F479075B2E94ACE5B66091515DA0BE3012E6108357E23C559F06EDCD15FE96ABE9B2AF29188C91BC7D76A0C1977FC637BD2FD820423299BAD7BFFCB39DE2D2CC5246A4BB1E91382BAFB169FAC0E0BE2F042ED36CCF86EC750B347B491EB38D2ADEF7CF0006C18FBAFE74CFAE847B0B0365E1CB230C40188C7C39341E3CF7F828A8DD363DB5BD439BBCBB930EE68262FD10BE1E64F088E58067A58B788C010D7ABE6DD28670B957266FD3070884D6E01E12DD50E798D0482FA35F64F0DE3B0B3C900D7BE476FEB800F514A2905ACD11441F4BFB5A17FBFAC583625699BC269C56A31163642F5490D10C4CEB15E911E18929A2D02C6A08AFF6E3DD4974F27AEF585B

8C88684F7E839D02EBB8613578D476863B5A17DDB00534AA1457C6A571E04A36BA5B51E7A7F042178042AF64542F9343BD43A214DFEC1CD2778365DB68E5B7A99415D1889EE703AB91281B4908A72770201DBD3245DA96225F717A4F33CBD39CFDB8BBCEB2B169A4844A6FBAFFB905A555C1C7DF32D3DD1249706AD231654E38C4A281B91DF0F27EA1FC0EA805F0E60AA1E2CFA86C1D07BA1A3653C907A7FA8A037A8B3CA210014A9879E8BF8B04FBE3978785F001A9483996EA680D9FEDCB61F6E61E8990BEF5167CC4C7B0846DAB503FEA54D7A684BFA35C35FD10BB61A11389D47498BE2E1118F11DE8B82A5E34F89F6E9E0EA686D653BEA669A4C20A7B46FDCB6116409EFECA9FC0E3D6F526385D9564F1781BE1027004A9D62B559310BBF5C9936EA683E7727DD16594C6C0428F94F4E17CFAD086C37E9BE801465DD27C283831B11BE4427EB888F8A5EC2E13BE6E9E690F5DFB3A78882EC66077806C06D11A87C20FB1360FA88EC274635CC4B6AEB386FDF3C38F09F066D1EBF4A3914084F0FE06C32FEC472E496CE3FC8379CA5743248D35083B918F80405AC86259DAF25C0978750097466F18ED722EC43A7B57D718F2AED3575DEF785D8950DF12A8F05E37FF7F8D1D1E71F211FAC527EFD2FEE45B5972D7EBB51F7C6B76991DE9E1E863BC6A0FE3AA19A7DE9487511512BC9CED5C5EAECA741B03436BB8A77D25963EF8F4A600B8B09C84DA214E49E5579739C7FDDB98E2356E1C027C439E102A3E06AF5CD0D2D9676116FE9B7DCCDEEB4F18C8212D676886395FB6
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F1.1/HelveticaNeue renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 1 1 sc
q
0 0 1693 1225 rc
0 1225 m
1693 1225 l
1693 0 l
0 0 l
h
0 1225 m
f
3 w
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 0 1225 cm
153 72 m
153 1071 l
S
2 w
[
16
8
2
8
] 0 d
0.69411767 0 0.10980392 sc
153 162.66667 m
153 162.66667 81 180.18047 81 207 c
81 226.83179 120.36895 244.85603 140.88387 252.90207 c
S
0 i
CM
149.90077 968.80017 m
142.12137 975.47852 l
139.64832 968.71661 l
h
149.90077 968.80017 m
f
0 J
0 j
[] 0 d
1 0 0 -1 0 1225 cm
149.90077 256.19983 m
142.12137 249.52145 l
139.64832 256.28342 l
h
149.90077 256.19983 m
S
/Cs2 SC
0 sc
1 0 0 -1 244.5 1022 cm
/F1.1[ 30 0 0 -30 0 0]sf
-86.5 -6.8399963 m
(!"#$%$&')[ 26.130000 17.220000 17.790000 6.660000 6.660000 6.660000 9.450000 0.000000 ] xS
-86.5 29 m
(\(\)*)[ 15.540000 17.220000 0.000000 ] xS
/F1.1[ 20 0 0 -20 0 0]sf
-33.189999 29 m
(+)s
/F1.1[ 30 0 0 -30 0 0]sf
-22.07 29 m
(,&",\(\)*)[ 8.340000 9.450000 17.220000 8.340000 15.540000 17.220000 0.000000 ] xS
/F1.1[ 20 0 0 -20 0 0]sf
74.589996 29 m
(-)s
5 w
1 J
1 j
[
20
20
] 0 d
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 1225 cm
968.89954 1134.1432 m
1078.1005 1134.8568 l
S
0 i
CM
1092.5001 90.049019 m
1078.1357 95.543022 l
1078.0652 84.743248 l
h
1092.5001 90.049019 m
f
0 J
0 j
[] 0 d
1 0 0 -1 0 1225 cm
1092.5001 1134.9509 m
1078.1357 1129.457 l
1078.0652 1140.2567 l
h
1092.5001 1134.9509 m
S
CM
954.49982 90.950981 m
968.86426 85.456978 l
968.93481 96.256752 l
h
954.49982 90.950981 m
f
1 0 0 -1 0 1225 cm
954.49982 1134.0491 m
968.86426 1139.543 l
968.93481 1128.7433 l
h
954.49982 1134.0491 m
S
/Cs2 SC
0 sc
1 0 0 -1 1213.5 95 cm
/F1.1[ 30 0 0 -30 0 0]sf
-90.014999 11.080002 m
(."/&0"%,1%2/3)[ 21.660000 17.220000 16.680000 9.450000 9.450000 17.220000 6.660000 8.340000 17.790000 6.660000 16.110000 16.680000 0.000000 ] xS
7 w
1 J
1 j
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 1225 cm
333.89963 1134.1461 m
469.10037 1134.8539 l
S
0 i
CM
486.70013 90.053925 m
469.13495 96.745979 l
469.06583 83.546165 l
h
486.70013 90.053925 m
f
0 J
0 j
1 0 0 -1 0 1225 cm
486.70013 1134.946 m
469.13495 1128.254 l
469.06583 1141.4539 l
h
486.70013 1134.946 m
S
CM
316.29987 90.946075 m
333.86505 84.254021 l
333.93417 97.453835 l
h
316.29987 90.946075 m
f
1 0 0 -1 0 1225 cm
316.29987 1134.054 m
333.86505 1140.746 l
333.93417 1127.5461 l
h
316.29987 1134.054 m
S
/Cs2 SC
0 sc
1 0 0 -1 590.5 95 cm
-72.239998 11.080002 m
(42&2,1%2/3)[ 21.120000 16.110000 9.450000 16.110000 8.340000 17.790000 6.660000 16.110000 16.680000 0.000000 ] xS
3 w
1 J
1 j
[
3
9
] 0 d
0.60000002 i
/Cs1 SC
0.69411767 0 0.10980392 sc
1 0 0 -1 0 1225 cm
684 270 m
108 270 l
S
0.69411802 0 0.109804 sc
693 1024 m
117 1024 l
S
0.69411999 0 0.1098 sc
0 i
1 0 0 -1 79.5 908 cm
-65.279999 -6.8399963 m
(52/6"730)[ 21.660000 16.110000 16.680000 17.790000 17.220000 15.000000 16.110000 0.000000 ] xS
-37.5 29 m
(8&20&8)[ 15.000000 9.450000 16.110000 9.990000 9.450000 0.000000 ] xS
1 0 0 -1 88.5 168 cm
-65.279999 -6.8399963 m
(52/6"730)[ 21.660000 16.110000 16.680000 17.790000 17.220000 15.000000 16.110000 0.000000 ] xS
-50.834999 29 m
(9/$8:38)[ 15.540000 16.680000 6.660000 15.000000 16.680000 16.110000 0.000000 ] xS
[] 0 d
0.60000002 i
0 0 0 sc
1 0 0 -1 0 1225 cm
439 69.164642 m
440 261 l
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 440 1186.0243 cm
/F1.1[ 50 0 0 -50 0 0]sf
-57.825001 17.800003 m
(\(\)*+)[ 25.900000 28.700000 34.250000 0.000000 ] xS
1 0 0 -1 161 1186.0243 cm
-101.825 17.800003 m
(;<=>?!@)[ 27.800000 12.950000 32.400000 32.400000 19.450000 43.550000 0.000000 ] xS
7 w
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 1225 cm
180.89999 132 m
411.42755 132.00003 l
S
0 i
CM
429.02756 1093 m
411.42755 1099.6 l
411.42755 1086.4 l
h
429.02756 1093 m
f
0 J
0 j
1 0 0 -1 0 1225 cm
429.02756 132.00003 m
411.42755 125.40003 l
411.42755 138.60004 l
h
429.02756 132.00003 m
S
CM
163.3 1093 m
180.89999 1086.4 l
180.89999 1099.6 l
h
163.3 1093 m
f
1 0 0 -1 0 1225 cm
163.3 132 m
180.89999 138.60001 l
180.89999 125.4 l
h
163.3 132 m
S
/Cs2 SC
0 sc
1 0 0 -1 853 1119.889 cm
/F1.1[ 30 0 0 -30 0 0]sf
-105.655 11.080002 m
(."AAB/$C2&$/D)[ 21.660000 17.220000 25.590000 25.590000 16.680000 16.680000 6.660000 16.110000 16.110000 9.450000 6.660000 16.680000 0.000000 ] xS
3 w
1 J
1 j
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 1225 cm
729 219.97746 m
729 1071 l
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 730 1035.2114 cm
/F1.1[ 50 0 0 -50 0 0]sf
-57.825001 17.800003 m
(\(\)*-)[ 25.900000 28.700000 34.250000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 1225 cm
1025 219.97746 m
1026 693 l
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 1026 1035.2114 cm
-84.699997 17.800003 m
(!*E!=)[ 43.550000 34.250000 16.650000 43.550000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 1225 cm
1305 69.164642 m
1305 1071 l
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 1306 1186.0243 cm
-57.825001 17.800003 m
(\(\)*F)[ 25.900000 28.700000 34.250000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 1225 cm
1592 69.164642 m
1593 1071 l
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 1593 1186.0243 cm
-35.599998 17.800003 m
(.@)[ 36.100000 0.000000 ] xS
7 w
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 1225 cm
467.22055 130.59424 m
1277.1001 128.0864 l
S
0 i
CM
1294.7001 1096.9681 m
1277.0797 1103.5135 l
1277.1206 1090.3136 l
h
1294.7001 1096.9681 m
f
0 J
0 j
1 0 0 -1 0 1225 cm
1294.7001 128.03189 m
1277.0797 121.48643 l
1277.1206 134.68636 l
h
1294.7001 128.03189 m
S
CM
449.62064 1094.3513 m
467.24097 1087.8058 l
467.2001 1101.0057 l
h
449.62064 1094.3513 m
f
1 0 0 -1 0 1225 cm
449.62064 130.64874 m
467.24097 137.1942 l
467.2001 123.99427 l
h
449.62064 130.64874 m
S
1 J
1 j
0.60000002 i
1332.9 128.33353 m
1564.1591 128.33508 l
S
0 i
CM
1581.759 1096.6648 m
1564.1591 1103.2649 l
1564.1591 1090.0649 l
h
1581.759 1096.6648 m
f
0 J
0 j
1 0 0 -1 0 1225 cm
1581.759 128.33521 m
1564.1591 121.73508 l
1564.1591 134.93509 l
h
1581.759 128.33521 m
S
CM
1315.3 1096.6666 m
1332.8999 1090.0665 l
1332.9 1103.2665 l
h
1315.3 1096.6666 m
f
1 0 0 -1 0 1225 cm
1315.3 128.3334 m
1332.8999 134.93352 l
1332.9 121.73352 l
h
1315.3 128.3334 m
S
1 J
1 j
[
28
28
] 0 d
0.60000002 i
180.89999 351 m
701.09998 351 l
S
0 i
CM
718.70001 874 m
701.09998 880.59998 l
701.09998 867.40002 l
h
718.70001 874 m
f
0 J
0 j
[] 0 d
1 0 0 -1 0 1225 cm
718.70001 351 m
701.09998 344.39999 l
701.09998 357.60001 l
h
718.70001 351 m
S
CM
163.3 874 m
180.89999 867.40002 l
180.89999 880.59998 l
h
163.3 874 m
f
1 0 0 -1 0 1225 cm
163.3 351 m
180.89999 357.60001 l
180.89999 344.39999 l
h
163.3 351 m
S
/Cs2 SC
0 sc
1 0 0 -1 434 894.8891 cm
/F1.1[ 30 0 0 -30 0 0]sf
-41.939999 11.080002 m
(45.>)[ 21.120000 21.660000 21.660000 0.000000 ] xS
5 w
1 J
1 j
[
20
20
] 0 d
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 1225 cm
153 423 m
719.50006 421.05002 l
719.46735 411.55008 738.46722 411.48468 738.49994 420.98462 c
1003.523 420.07239 l
S
0 i
CM
1017.9229 804.97717 m
1003.5044 810.32758 l
1003.5416 799.52765 l
h
1017.9229 804.97717 m
f
0 J
0 j
[] 0 d
1 0 0 -1 0 1225 cm
1017.9229 420.02283 m
1003.5044 414.67242 l
1003.5416 425.47235 l
h
1017.9229 420.02283 m
S
/Cs2 SC
0 sc
1 0 0 -1 434 826.1109 cm
-90.894997 11.080002 m
(!21?*3D$8&30)[ 26.130000 16.110000 17.790000 11.670000 20.550000 16.110000 17.220000 6.660000 15.000000 9.450000 16.110000 0.000000 ] xS
1 J
1 j
[
20
20
] 0 d
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 1225 cm
1025.5792 493.98819 m
738.49994 494.75974 l
738.47443 485.25977 719.47449 485.31085 719.50006 494.81082 c
174.89992 496.27448 l
S
0 i
CM
160.49997 728.68683 m
174.91443 723.32556 l
174.88541 734.12549 l
h
160.49997 728.68683 m
f
0 J
0 j
[] 0 d
1 0 0 -1 0 1225 cm
160.49997 496.31317 m
174.91443 501.67447 l
174.88541 490.87448 l
h
160.49997 496.31317 m
S
/Cs2 SC
0 sc
1 0 0 -1 884 759.8891 cm
-75.285004 11.080002 m
(!21?@"&$G')[ 26.130000 16.110000 17.790000 11.670000 21.660000 17.220000 9.450000 6.660000 8.880000 0.000000 ] xS
1 J
1 j
[
20
20
] 0 d
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 1225 cm
153 564.33331 m
719.5 565.15289 l
719.51373 555.65295 738.51373 555.68042 738.5 565.18042 c
1016.2307 565.58221 l
1016.2444 556.08221 1035.2444 556.10968 1035.2306 565.60968 c
1283.1 565.96832 l
S
0 i
CM
1297.5 659.01086 m
1283.1078 664.4317 l
1283.0922 653.63171 l
h
1297.5 659.01086 m
f
0 J
0 j
[] 0 d
1 0 0 -1 0 1225 cm
1297.5 565.98914 m
1283.1078 560.5683 l
1283.0922 571.36829 l
h
1297.5 565.98914 m
S
/Cs2 SC
0 sc
1 0 0 -1 434 682.1109 cm
-33.060001 11.080002 m
(=!*)[ 19.440000 26.130000 0.000000 ] xS
1 J
1 j
[
20
20
] 0 d
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 1225 cm
1305 648 m
1047.8 646.1571 l
S
0 i
CM
1033.4004 578.94604 m
1047.7614 573.44299 l
1047.8387 584.24274 l
h
1033.4004 578.94604 m
f
0 J
0 j
[] 0 d
1 0 0 -1 0 1225 cm
1033.4004 646.05396 m
1047.7614 651.55701 l
1047.8387 640.75726 l
h
1033.4004 646.05396 m
S
/Cs2 SC
0 sc
1 0 0 -1 1177 583.1109 cm
-91.195 -12.699997 m
(!21?*3HB38&)[ 26.130000 16.110000 17.790000 11.670000 20.550000 16.110000 17.790000 16.680000 16.110000 15.000000 0.000000 ] xS
/F1.1[ 20 0 0 -20 0 0]sf
-91.889999 37.139999 m
(G"0,I;*;J.K,*;J.L)[ 5.920000 11.480000 6.660000 5.560000 12.000000 11.120000 13.700000 11.120000 15.200000 14.440000 5.560000 5.560000 13.700000 11.120000 15.200000 14.440000 0.000000 ] xS
1 0 0 -1 880 529.1109 cm
/F1.1[ 30 0 0 -30 0 0]sf
-73.904999 11.080002 m
(!21?*31%')[ 26.130000 16.110000 17.790000 11.670000 20.550000 16.110000 17.790000 6.660000 0.000000 ] xS
1 J
1 j
[
20
20
] 0 d
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 1225 cm
153 785.66669 m
719.5 786.81409 l
719.51929 777.31409 738.51923 777.3526 738.5 786.8526 c
1283.1001 787.95563 l
S
0 i
CM
1297.5 437.01517 m
1283.111 442.44434 l
1283.0891 431.64435 l
h
1297.5 437.01517 m
f
0 J
0 j
[] 0 d
1 0 0 -1 0 1225 cm
1297.5 787.9848 m
1283.111 782.55566 l
1283.0891 793.35565 l
h
1297.5 787.9848 m
S
/Cs2 SC
0 sc
1 0 0 -1 434 466.11093 cm
-33.060001 11.080002 m
(=!*)[ 19.440000 26.130000 0.000000 ] xS
2 w
1 J
1 j
[
16
8
2
8
] 0 d
0.60000002 i
/Cs1 SC
0.69411802 0 0.109804 sc
1 0 0 -1 0 1225 cm
153 567 m
153 567 63 613.05066 63 675 c
63 723.37976 117.89045 763.68939 141.93718 779.02728 c
S
0 i
CM
150.17047 441.03149 m
143.79164 449.05835 l
140.08656 442.88483 l
h
150.17047 441.03149 m
f
0 J
0 j
[] 0 d
1 0 0 -1 0 1225 cm
150.17047 783.96851 m
143.79164 775.94165 l
140.08656 782.11517 l
h
150.17047 783.96851 m
S
/Cs2 SC
0 sc
1 0 0 -1 221.15883 554 cm
-54.5 -6.8399963 m
(=!*)[ 19.440000 26.130000 0.000000 ] xS
-54.5 29 m
(\)$A3"B&)[ 17.220000 6.660000 25.590000 16.110000 17.220000 16.680000 0.000000 ] xS
1 0 0 -1 1100 372.88907 cm
-186.77499 -12.699997 m
(=!*?$/7"M36,!21?*3HB38&)[ 19.440000 26.130000 20.550000 11.670000 6.660000 16.680000 15.000000 17.220000 15.570000 16.110000 17.790000 8.340000 26.130000 16.110000 17.790000 11.670000 20.550000 16.110000 17.790000 16.680000 16.110000 15.000000 0.000000 ] xS
/F1.1[ 20 0 0 -20 0 0]sf
-80.400002 37.139999 m
(G"0,IN<4K,;*;J.L)[ 5.920000 11.480000 6.660000 5.560000 12.000000 12.220000 5.180000 14.080000 5.560000 5.560000 11.120000 13.700000 11.120000 15.200000 14.440000 0.000000 ] xS
5 w
1 J
1 j
[
20
20
] 0 d
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 1225 cm
153 932.88849 m
719.5 933.43512 l
719.50916 923.93512 738.50916 923.95343 738.5 933.45343 c
1283.1 933.97888 l
S
0 i
CM
1297.5 291.00723 m
1283.1052 296.42111 l
1283.0948 285.62112 l
h
1297.5 291.00723 m
f
0 J
0 j
[] 0 d
1 0 0 -1 0 1225 cm
1297.5 933.9928 m
1283.1052 928.57886 l
1283.0948 939.37891 l
h
1297.5 933.9928 m
S
/Cs2 SC
0 sc
1 0 0 -1 434 322.11093 cm
/F1.1[ 30 0 0 -30 0 0]sf
-73.904999 11.080002 m
(!21?*31%')[ 26.130000 16.110000 17.790000 11.670000 20.550000 16.110000 17.790000 6.660000 0.000000 ] xS
1 J
1 j
[
20
20
] 0 d
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 1225 cm
1305 864 m
738.49988 860.88556 l
738.55206 851.38568 719.55237 851.28125 719.50012 860.78113 c
174.89967 857.78705 l
S
0 i
CM
160.49989 367.29208 m
174.86998 361.81302 l
174.92935 372.61285 l
h
160.49989 367.29208 m
f
0 J
0 j
[] 0 d
1 0 0 -1 0 1225 cm
160.49989 857.70789 m
174.86998 863.18701 l
174.92935 852.38715 l
h
160.49989 857.70789 m
S
7 w
1 J
1 j
0.60000002 i
180.89932 998.19373 m
701.10065 1001.8063 l
S
0 i
CM
718.70026 223.07153 m
701.14648 229.79359 l
701.05487 216.5939 l
h
718.70026 223.07153 m
f
0 J
0 j
1 0 0 -1 0 1225 cm
718.70026 1001.9285 m
701.14648 995.20642 l
701.05487 1008.4061 l
h
718.70026 1001.9285 m
S
CM
163.29976 226.9285 m
180.8535 220.20644 l
180.94516 233.40611 l
h
163.29976 226.9285 m
f
1 0 0 -1 0 1225 cm
163.29976 998.07153 m
180.8535 1004.7936 l
180.94516 991.59387 l
h
163.29976 998.07153 m
S
1 J
1 j
0.60000002 i
756.89972 1001.5375 m
1277.1003 999.12915 l
S
0 i
CM
1294.7001 225.95232 m
1277.0697 232.47076 l
1277.1309 219.2709 l
h
1294.7001 225.95232 m
f
0 J
0 j
1 0 0 -1 0 1225 cm
1294.7001 999.04767 m
1277.0697 992.52924 l
1277.1309 1005.7291 l
h
1294.7001 999.04767 m
S
CM
739.29987 223.381 m
756.93024 216.86255 l
756.86914 230.06241 l
h
739.29987 223.381 m
f
1 0 0 -1 0 1225 cm
739.29987 1001.619 m
756.93024 1008.1375 l
756.86914 994.93756 l
h
739.29987 1001.619 m
S
1 J
1 j
0.60000002 i
1332.9 1000.3334 m
1565.0294 1000.3343 l
S
0 i
CM
1582.6295 224.66565 m
1565.0295 231.26572 l
1565.0294 218.06572 l
h
1582.6295 224.66565 m
f
0 J
0 j
1 0 0 -1 0 1225 cm
1582.6295 1000.3344 m
1565.0295 993.73431 l
1565.0294 1006.9343 l
h
1582.6295 1000.3344 m
S
CM
1315.3 224.66661 m
1332.9 218.06654 l
1332.9 231.26654 l
h
1315.3 224.66661 m
f
1 0 0 -1 0 1225 cm
1315.3 1000.3334 m
1332.9 1006.9335 l
1332.9 993.73346 l
h
1315.3 1000.3334 m
S
/Cs2 SC
0 sc
1 0 0 -1 880 246.88908 cm
-105.655 11.080002 m
(."AAB/$C2&$/D)[ 21.660000 17.220000 25.590000 25.590000 16.680000 16.680000 6.660000 16.110000 16.110000 9.450000 6.660000 16.680000 0.000000 ] xS
2 w
1 J
1 j
[
16
8
2
8
] 0 d
0.60000002 i
/Cs1 SC
0.69411802 0 0.109804 sc
1 0 0 -1 0 1225 cm
1305 566.66669 m
1305 566.66669 1368 581.09106 1368 603 c
1368 618.72992 1335.5248 633.00732 1317.2068 639.80945 c
S
0 i
CM
1308.1212 582.07147 m
1318.37 581.78363 l
1316.0321 588.59351 l
h
1308.1212 582.07147 m
f
0 J
0 j
[] 0 d
1 0 0 -1 0 1225 cm
1308.1212 642.92853 m
1318.37 643.21637 l
1316.0321 636.40649 l
h
1308.1212 642.92853 m
S
/Cs2 SC
0 sc
1 0 0 -1 1432.5 617 cm
-51.5 -6.8399963 m
(4$8C206)[ 21.120000 6.660000 15.000000 16.110000 16.110000 9.450000 0.000000 ] xS
-51.5 29 m
(=!*)[ 19.440000 26.130000 0.000000 ] xS
5 w
1 J
1 j
[
20
20
] 0 d
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 1225 cm
1025.9006 645.99597 m
750.89948 647.85217 l
S
0 i
CM
736.49982 577.05066 m
750.93597 571.74799 l
750.86304 582.54773 l
h
736.49982 577.05066 m
f
0 J
0 j
[] 0 d
1 0 0 -1 0 1225 cm
736.49982 647.94934 m
750.93597 653.25201 l
750.86304 642.45227 l
h
736.49982 647.94934 m
S
1 J
1 j
[
20
20
] 0 d
0.60000002 i
729 720 m
1283.1001 718.71735 l
S
0 i
CM
1297.5 506.31601 m
1283.0875 511.68265 l
1283.1125 500.88269 l
h
1297.5 506.31601 m
f
0 J
0 j
[] 0 d
1 0 0 -1 0 1225 cm
1297.5 718.68402 m
1283.0875 713.31732 l
1283.1125 724.11731 l
h
1297.5 718.68402 m
S
ep
end
%%Trailer
%%EOF
