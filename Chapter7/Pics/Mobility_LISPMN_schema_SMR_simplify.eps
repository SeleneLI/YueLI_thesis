%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 1711.000000 1040.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.13.3 (Build 17D47) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 1711 1040
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 1711 1040
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /M put
dup 34 /o put
dup 35 /b put
dup 36 /i put
dup 37 /l put
dup 38 /t put
dup 39 /y put
dup 40 /x put
dup 41 /T put
dup 42 /R put
dup 43 /one put
dup 44 /space put
dup 45 /two put
dup 46 /C put
dup 47 /n put
dup 48 /r put
dup 49 /p put
dup 50 /a put
dup 51 /e put
dup 52 /D put
dup 53 /A put
dup 54 /c put
dup 55 /H put
dup 56 /d put
dup 57 /v put
dup 58 /s put
dup 59 /fi put
dup 60 /h put
dup 61 /u put
dup 62 /L put
dup 63 /I put
dup 64 /S put
dup 65 /P put
dup 66 /hyphen put
dup 67 /N put
dup 68 /m put
dup 69 /g put
dup 70 /slash put
dup 71 /three put
dup 72 /f put
dup 73 /k put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<







411B0006000000160000002600000036000000460000005600000066000000760000008600000096000000A6000000B6000000C60000000D5D410500D5000000E5000000025DB8002910B8001EDCB8000ADC410500DA000A00EA000A00025D411B0009000A0019000A0029000A0039000A0049000A0059000A0069000A0079000A0089000A0099000A00A9000A00B9000A00C9000A000D5D00BA000F001900032BB8000F10BA0023000500032BB8002310303113343E0233321E0215140E0223222E0227141E0233323E0235342E0223220E027E192C3B21213B2C19192C3B21213B2C195A20405E3D3E5D402020405D3E3D5E402001022F49321A1A32492F2F49311A1A31492F39624929294962393963492A2A4963000000020043FF3B022D02110018002C00ADB8002E2FBA0018000000032BB8001810B80002D0B8001810B80004D0B800042FB8002E10B8000EDCB8001810B80016D0B800162FB8000E10B80019DC410500DA001900EA001900025D411B0009001900190019002900190039001900490019005900190069001900790019008900190099001900A9001900B9001900C90019000D5DB8001810B80023D0B800232F00B800012FBA0013002800032BB8001310BA001E000900032BB8001E10303113113311331E0333323E0235342E0223220607233505140E0223222E0235343E0233321E024355020E292E2F133B593B1D1E3B593C365A1502013B10243B2C2C3E271211263C2B293D27130205FD36010A171F12082A49623737624B2C272B46FE2648382221364726244637222036450000000001003D0000014D0213000E0027BA0003000100032BB8000310B8000DD0B8000D2F00B800012FBA0009000800032BB8000910303113113335343E02333526060723353D55142C4833455A1F020205FDFBE6324D361C5A023C3F6D000001001FFFF501D60211003A00ABBA0000000100032BBA0020001F00032BB8002010BA0031001F0020111239B800312F410500DA003100EA003100025D411B0009003100190031002900310039003100490031005900310069003100790031008900310099003100A9003100B9003100C90031000D5DB8000BDCB8000010B8002ADCB80015DCB8000B10B8003CDC00BA0036000600032BB8003610BA0025001A00032BB8002510B8000610B80000DCB8002510B8001FDC303137231E0333323E0235342E02272E0335343E0233321E0217332E0323220E0215141E0415140E0223222E02745502243C4E2B274F3F271D2F3D201E3C301F142027131529221602550322394A2C22453723324B584B3218252C141A312718A3304329120F263E2F2532211407070D131D1614190F06091421192F3F250F1123382732381F11152221181F10060A1727000100090000011D02A00017005BBA0001000200


00>] def
/CharStrings 43 dict dup begin
/.notdef 0 def
/space 1 def
/hyphen 2 def
/slash 3 def
/one 4 def
/two 5 def
/three 6 def
/A 7 def
/C 8 def
/D 9 def
/H 10 def
/I 11 def
/L 12 def
/M 13 def
/N 14 def
/P 15 def
/R 16 def
/S 17 def
/T 18 def
/a 19 def
/b 20 def
/c 21 def
/d 22 def
/e 23 def
/f 24 def
/g 25 def
/h 26 def
/i 27 def
/k 28 def
/l 29 def
/m 30 def
/n 31 def
/o 32 def
/p 33 def
/r 34 def
/s 35 def
/t 36 def
/u 37 def
/v 38 def
/x 39 def
/y 40 def
/fi 41 def
/uni2B91 42 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-951 -481 1987 1077}def
/UniqueID 4127891 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C94DCC1A72EBAA9FD2DD8062C0D7B70D35F8191632F50C1AD56FF8964A29AFFEE955E14B6D64F7DE926B93765D7F4DC14C23F78ED6B500671DECE4E428071F8A03CF5A8A1A9EDE30738CD6C9D22C0B9B5BE797EB61BA0D16F9F080D522CD85A283987447B5E87F6C19059AAE5E8D04B309B1E50384B99DE7E6FDC36316E4D5CE270B4DE6F472261D2F6352102AD13982595737CF0660B194C08F74DC7733171D49B44388493CD3A2EA781A1E35AD689B818C262457C9E130EABB2DC46217ABA981B8AE35E49A81509C1686651170699C1ED7AC949CC9E4A42F69483013E133FC183D6B02635AEFB3FA5EB7E2662EF4825500372DB3F5BE720CDBFE842B237EFFD4D216E5CD487BE90C744D1DB63E7B6ADDEBC6FB6B123D452FD059334C319FE3C3BCDCD65EA0910B9BBFF550EDF401451CA2376B543CA5A4DE6DE54582451D104EA8D6BCBE6606061017D577D4E91719DFBA4FA168EC68C01C4718952B900D7DA23B6AE664C2BC7ED434C8D14A047F331B00B28232EDEB9059D9032BA50A18AABDE8E2656EB7A5DFC2D221D626549F866604195A1BA415DE8655AF448A25EB185BDAE861D80329D82F95AE167A80CBC5CF2C83E52254EFA14126DCD7D61592DBD8E797141A75F0BDA1D53DDD27D822963C4071F95F544C258D4D08E63B09F837DFF0050EF1134C77A5040EFC2D48FAEB5B7D11A96B1DECFBE63FD53B3BBD1A9CA69F7C404511A4FF7726654210C0CE50F4762C1E5616473D1B56552008A3BED14A0
8826BACD3C81F0FFFB23D62F1355D41C9ED0F85FB94B80826BEDC7EAF96DCE50181AC65B45EF4B71F1CAF80DF3D6EC1E1E7D373472D7BD1BE4D01C924B3EC405D3CEF9A5576912C88D44BA181F814C567F557A17D7B785E1DDDB2BD03080C058BB7954D518123C546B89367DC2F61D81D43F2CAF9717067452035C8355DA07C61549DA4B5C39F88A41A899F2AD1521A56FAB7D990E9BA3B6461C4DF6394400886FAD182B60560A5FD6355D621F4083BA0E44E52DDFDBCF5C7D673259247F00B525D6B5B58AFA054DD4AD4E2A253641C403F7BCF4AE1CE3BC40564922F4057D81B86E7A7AE1834CCB3AB8CCDB22F14B4CFD8F1F74FE77E9496B5BD03640BE3B33A276A6E119BA2465A64BBCD75B9DE9C35FA8BEB51FD2D1BE8CDFE1E3BC813A08EB34EA1BAFBB404507512F052D12D3F82BAB5FCD2D438BC1E22D559A84A815467F4296419DF9ABE4D34B3330B11F1752250EA0D9B9575436D451CA20376A69CCF9C601252EEEC00A52B9974C736BED93E92732545E1F46B61315D6E6DB6D7D360B3BF71C034187938F85A5FFE1F48F7EF782FFB607883ED6BF85546D482DA3F2FE74EBA274CDE2A9A0133F734F0382CA65ACE2BCE890B35ED0351A02A92E52FAD0FCB509C4CD21B3EB5524B692E345D822675C1CF3FF8A66B5499E37DAB11BC6CBB03135C806E7AF2F8B65D9B0007400580F6FE40580D54366F758AAE39F7F42E51039092E17BDFC41E020247F876B2C365EA99A2FD7B7557480619E0F7D0E45842F958D3378689722CD88555641F066CF5F49A1FF0F48DCAA791857728B327F9987C06D2B58AE2A69AB4F9A592926906826C8DE0F15BE1AA9D64E441056218579A0E4D189B879CE74D2C84734FB0B7F332C0B949E1594D6FA29D077EC3BEE3B879E8C1122F61C9D1E7E89C8959C0F8A9907CC4EDA185F0131B2AFB944BAADCE7AB22BCA9DA6A92E73B65D4794910BB217FC71FFB66251D8EC07232271F4852912C968D98F74276E35C7AD64CA308FDC68BA7CE3DB23AAFE9831CE796E09CAF52298BF05F127BAB3905E90E0E364365F9F6BE0CA1D71AFB6931FDC376AB76CD9250E9658B080E35C63B5024490D46FA5BB6598C8ADD30EAD0509130822F4FB7D3DCC7EC24CBB5E6A515031F20FCA942B98D906D1FC265AF63C886423E864A3B31E769F679A7824BC310E3E2A83787FE27A1FDF7011776A3BD2F600072390DCADEFA9B97180C80214346724ED97F71109672EF0D2C1695D41AF06EA75AD4519B1249BFE410E597BDB09186BBE79F919B899341F87D9418704F4A9F50285993459592D4AD12A75E8F8AE8A5CF9C94D08DF3880C2F955047C88BA9E488CE2AA736740FE2A997EA5303BE044686991B1148E3BF849007CEAE39485C49DC61E35B81A7CE20FBBC2FF04684223B94884694527B943CC5403D1F2A3148B4A96BD683405

F5FF356A17CB4663C0C373627E19E4A9AD92A99F77C02E384E6E831C23A4C9BA62D612D5B2EDD3A1C8009D0CCE795141146FB6FFD6D806A152F63EC73EE165F33330D120471CD4C1C346EE808C85FC0F32ED89732490B726C1D2EA9F5D985F0870587AA7880BF4B928F8CBD34B7DAF70405AB355E7BFA596400BA136C415EEE8893E47210AA7A42C4CE7059D347A95B2FE61DCDC498FE7D00E369F946C00E4B39726FB2A60B37543BA7044721528F1FD8850894E2CABCAE6F4D8B4EC398AF7CBEC2B0AE674473F3907722E68F8D3723FE1284FDFCCDFFC78D37066FFC3C67D4AED3953D0A0F6B22827DA185CE206A4B98B69313B88DF9F0B3FE769328F38A9F1B8AD484C3A17A32996C1EDF9060859E29587CA57086412224918E65F2455C6E3E37C8C86A34AD469B3C34698D75838570F44B70240BE10D06E4F6FEB425EBD7C840CC3D32B15768A22CCC4F18E188F186496F0917C61407D4081E000E08B6539675E1EBD45939217E28802CBD603AA683F19B4C2E7A66F4AA6309EC49D92A2B488D30BA1B1F4C2EBEA8C7E24A75C3D8F3D0AB44387491E7C7580AB60911B917E9027711A69FFC0670A9F0D0ACB4212C7953B2B5543E780BBFCC6E8D6D756D85C3D9F477DD393C1632FF52AEB5477326205F3BE91ADE2F67D027FFAF3F19765440B042E745BC6B89888C79944578097CAB0CEBF8CB35A7448842C93141BA785ABA89C8B5B212CA9A544D22BBCB4C72E30813CA11E2A05674086228F122B5EFCE48F00FBF828BAB0720379013CE17567DBFEE709660795273344C7E913A8E0109FBFBE1C554420A174AA8ACD86FE6A68331D050735BF0E7621873E371E9978B9BC0D5233E0C3621015620946CF5B9E20211FF8CDA3867618E65468B0007147DA6BCE2B9694253688475890848090B572EE1009ABD5E69F992A973348E9AE9A7442B7286457F80486588DB797B1F0FDF461C11F475C21FE419D71D1B5FEDFB59703FCB3E7AB41FDA80553A8F898B8F8419C67C34BBED74229F2194CD38C8B6786A5E7B9F962F1A4D045AE1EB5C5BCCE1256D68343DE662C5733CD8BD827BE321D6DFA3E48DFFC020771A97C43715AC4B906AFCE7214B6F891CE22C208E284325A390A8ECBA009F43981C29D73A89955F97EEC15283F224307E6C6E6D6E25AEBFB40697AC87C573A66DBB79462697CA7BA6FE5221681AB35E8A59A8936A55D40B3F831004AE72C979E8C680983C042DF3E5845A65298EE9BCAEC7D10C06245DB6CF010C1BFED353E062684848ACA184AF5BDA47996BABF844ED7F300B7088E19408239B024C765B8F4436AFD027E6431A1C7FF7993D5F6D2A02ACF4F8209B85FE32D56C1743E14C8EE386D6FA205427EBF557CA1BCB911AF7207A33645ED5FB87FD567F9247F400A50CB51723B9E0758C677FF7CD624658BF11975FAAB7188CE993A
31FDE0BC0E973DE386299D5015593A65BC21739743AE2B09DEF0FCA60C54B51DD90C4E8D4B24F6E51DBC81B6DF046D8D7688F99CE30FD9ABCB46E12717712F5F2E7C44D393B6F5669B6F453DD157D9F0CBEB981D0D70373AF081F66BD15C5D3652EA368F3A273BCDF6724B3AD815B15A88DB60BD3F597BAC7E84A92FEEFF84E9EC685C064C8487228D8A883EB5AFA58AD5BF3314906D62AE8AA31125DE96B4119B95C16BFBF36B04439FC5305A2F0B36AD16E2F193F39D46C135267031F1D73EED306AAAAF623C06C327461FF368D1AF076D8B8A45BCC02A0B9DFEC183222702007299FC3D671F1D2CF761259C6BE70A3B14EBBEE724239D61F399EB569124F007E966877E4655757203B82DEB2B59DFCE716F3FF4DF8E6356B5D30A8AAD72DB68CB1D0C36DC471067C5AA10355FAA6360F4BAEA67BE2BF5BE2A2FB54A49930194BAB90DB8F38582F7DFCC2BA303D9F58445E5E0772E2C1C16E16EADE7ACD13A7A5F319E7ABE09746F80A9F51C8E2C39E7EBA3318FEB82FBD1DD5B58A3DC083205B97EFE52E488E7EF7135D5024F7FB7997879B879309FC50BDF4B553D5B468C8B46A007F779C3B3225CF7C92940C0DA9542C0FA428EA3DBD6DC37BEF4E1FBB17C0BD31A87434D65F687595017D5F3ABB89BFD7C474A3C13EF7DB53197D038E074C8E474EFC4A3F0B142B17F0594F49E105074FA41D301FF4E14684DCAF27A07AF4F32463439A5775AF81165EF49199BCEAFE1F07CF86C613F006EFBF2AEF6FAEBEBF1A723328D1EBF8A5A4444946D68AE169F3960FF8F4DA1801AA9150674C2493261A7C2AD48B0B4D184CD5740FDB1B64214169817618016ED2E74D8521CA26F55F3258E67A3CD7D00A14D273BBB9D253973A0A4B0BA413A9018625AC5542AEDABF18D093D268827DB157E042BFCECF904CDC40B0966F2185820400C7AA0E5D9294BF530A8EA45725C8CFDAD36C4AC695C2B9F65C1F95A1E0C356836160E7A4C7991FA60458D3BF581EDA4C7B98FF1EBA818D59FEDD9CBC7279AC4F2C881385D0A648F2BC4AB2A4BD77F2367014C27CB4A3C9362844BA754E006DC7EBDEA751147F3C28901C9408981353657E58622CCBB5436AC163F8E817C8C45D7C6252D2550079B2C1B74064210BCF3C3E0072943A34471358133EB8F100F055311882EC56B7AF474CED884CD43A1DB812A0BD8152CE9EE59EBD5FBE6B31DCF2BDB025A840B6EAC722F82668CE4CB15A35762E1D818059129C13AE9AF045B3B57EBC8C11F6B995F67B9D491F35B14A0ECD9082E965825B6AFE8A142351C15EEFED817408B001EF1A9F8F4F790DC0A5BCA51E0CA6CB1AD926000DA7AB59946F56B1452F60F8CA537E7A94FCFEC76E135BC9D3A832A7F52408A71D30B784227570AE02F5D12D8ECB04DF6AFC3357150ED4F1C4FA7A30261625EB3D136B2FA39A53DF61E9A
852E26E8CCA2DB4900E95CFD44541913838F22D6006372E6D5D51620E8041933DA6479319C739830567FF9359185A5D719CA51D6E23DE3166A8FE2E8C61D2625B8698B6B3BEE12470723AEF2138F5680D6DBB433F3F606D683B9CA9243A35CA094C599DBA4366D6DF5F74DB6DFE136E883289C72909FEEA4E280B2B2440E13E25C55AC95201A89F4519D01EBC593B82C406B9BBF809067999A715C040001F699D9CE1F33A7EA0718831BAD1FAF582392F7CB18345BF73356761F52581343C6AEB45483C12BD886F67D3ACD5B808FA09A2FC8116877F4B8271DD65AD9D9ADC1D8C599992CCA01F03083E3ED4CBA51E875B573E423BA937C69B57A3D34091D5D0FF2799C5E08E674D5D8AB0E3C18ABCF6B8D02BC2A93D569EC8C3931FC41A89AFE7D6DBCDE7CBA76704D7C21D7A4294C9BF077ED7C31F8E0B21DA353EA4F20C5AEE79D2A19252516BFEA70CFE2FBA244D6D873A7473C14CC8E2EF12BD4B9A12C084320F2DECE1798046407EC809313E0FC650E65E86978D9AD59EB95DFC4CC1A83E548410D4158AE962B1AF8447142443B5BE4DCC79E41E7526076633F4046372197A8A5DFC0121B7F494887DC1ED57FFE376B280E996F561173ECA16A505A0A3106FCBB85969F579F0832F699753A3C4ED62B7C300A296077F09A6EA8AF9A15E2489E04F1393FCAE57629D7F4473929B91A50D81907CB38808238B97CFC1CF3A9D6DA2F7BCD306CE3B689EA9B63F0F2393F55EFE03E3E6F6BC06F0D18AF6D6331AEE6B495D3A0CDF7D90A8A7720B3F8CE8D64971BCA8BE6CBC9375F2AAB30A787813DC3653FDED49CE2AE1A3E077D8B5883E208340AA50E59714633B8AE973B37A11E0240034F88E638BB23E91826C6B2D07D0169BDAB7EE7EE2E4D7C02F9FD4E09FCA0AA66F04A988E2CC176E3F3F491080A7CC7EB4B9E73015CD55743C9ACD9CDCC077AC001AED282A5D3472F923E72F209CE81A7DBB017164AB35628CEF3607501F4DFAEE32B0F5B6988DB4059B8069F0E77B2AFC4F99A56F44041AF06D4A207A0CDFC102FC7BAE30EA7AAB5D191F0E3FD3CEF800260F0B09E82227A137B6D1176FB2344963A2502CD0D35BE9489C7D7EE3418717F5426D6B193E767A8A00A67647E2DD597DF43F05FA2472299844356F07E2A7A0F5A50BBDC030CE2B8E3B46A51D746EDC432A4F06D19633EFA504C4E5666B35E245D01E95583761A6C620C431E79D4DA46789E7276FFB76BB19B4982F84D53FC566BFEBC4F07C77054381B0A28AEE11120034FF7A8F7784FF769F3689DA10F98E3B78FA00BBE50512C3DCEC750B44FD32CFDDE4164138FD83251DE26CDA3A3CAECBE0650E3D8D491955CEE6BDFFB1EC6B8BAA295D947DC4002F1204AFF33DA8CB6E76E99DACE85666BC8A245FC55F82F01755576B7B7DFC1D425D290CC59AFED2DD00C22B018D698501F99
802B837E6FF30C27D7E751B5B76CB926D33667819AAC44A418E91F39C935A5BB67B476304A89B27E76F22352ABDB0E0D106F6546DB15006235B7D02F30A79EBD2B543CE425C138D60A2E8C48322656064DA6871FFD3AABD57EDDD10A168C3700B7D881E1A81E5715C912E0764078BA4AF971AA23544CD526289A7B05155C30317B69C7C136A0EBAFADB9DC3036D6B4519C74723AAB12D214E00E0AB836097AF3349C8180AFFA062A7B4BC90C87B81AF872965EF7ECBDCAD617465312E249AD0789584653CC3E29178B2C8289967AA354C36CF80DFB7A69B3E5347CD444A1338DA89FF1FA04ABEF0B1279F530FE995DD5B9CD4253F4EAE9D737616604F40D0F4799B15E93E8F0D094C12CDBDB9743E70AC596CF88178DE09285C0361856A307A7180579D069D832920BEDF859BE4C81DFEF27CA7C402890949A6AEB09E18A420A921B741C8A99438DCA961F5C2E166CE8D1F63BD24686434FB4D1E59980EB8D4CF79566849C73740EDCF6BCF5230577B8B501BC1E18BCECF2DCBB69B54EAEB4F91580C3F6571E25B398C021782A79328C8C4D9E1CA08756D94DE601EF978174C152EDFC4834B1A07EC9ADB2F273E903BC958542136846E47B5FE1A6FCA5BA2DEB94E249711B1DF0464644D1D7D3EFA685AD8A37C24C1502AAF2BCDDC9CAA79AAFFC7DF823256BD9C97B76F4C6069BCB3A6DA0542D24381E48CAD4D9D6F9D347327341F73443B2C7C9E14039E1064412B7797EA4475E446EBC473AF0165687B208239EC99360B09D42CDA292EFDDE94E65460D671E882D5A2A8DB0D03E6849A87EAF52D652EA0B08F6413039B1B769F96F52279284EB281F4130E71B30B481362DF4BB5F215E1139EDD45B547FE66982E4AF4FC379903474FA085D6746A67F4FD243F7B543F958F73A2B9C9170A8E1E3FE6EFEB1D61AC4F5ACE7CF01169013915FC47FAD764AB78CEE7D09316EB7426B96C4F9FC8AB497B8EDCD67CE75E9F887DA270425C1A49AF30E2C97EA793B3FE41AD578B7A7F4D6E70FF6D8E8F51B12FE4939552EAF999ADA8DDCF037B6EE23697A8EED7B9CB5D1FAFF3141ECFC116EEE42A4D6E3BC6B0CC9269CB2061856DF90FCA54DCBE8C5CAACCC5503CF2F160CA42B90D08751A15DC3B14CBAD2F6A5856FD05299DDFAA573597BCD623BC82C52D970949F7FEB310726C792932985B495701940FA9A68474E65A025D8877D772FC3EAD0730108EB723F42FA6807793D1B7983A2AF9DCC8EE37FF2525CA0DC2D96355EE9564B7D315430
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F1.1/HelveticaNeue renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 1 1 sc
q
0 0 1711 1040 rc
0 1040 m
1711 1040 l
1711 0 l
0 0 l
h
0 1040 m
f
3 w
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 0 1040 cm
171 108 m
171 846 l
S
2 w
[
16
8
2
8
] 0 d
0.69411767 0 0.10980392 sc
171 178.17021 m
171 178.17021 108 188.09146 108 207 c
108 220.57205 140.45752 234.19347 158.77826 240.80109 c
S
0 i
CM
167.87227 796.13934 m
159.92136 802.61261 l
157.62547 795.78845 l
h
167.87227 796.13934 m
f
0 J
0 j
[] 0 d
1 0 0 -1 0 1040 cm
167.87227 243.86063 m
159.92136 237.38737 l
157.62547 244.21152 l
h
167.87227 243.86063 m
S
/Cs2 SC
0 sc
1 0 0 -1 268 801 cm
/F1.1[ 30 0 0 -30 0 0]sf
-92 -6.8399963 m
(!"#$%$&')[ 26.130000 17.220000 17.790000 6.660000 6.660000 6.660000 9.450000 0.000000 ] xS
-92 29 m
(\(\)*+,&",\(\)*-)[ 15.540000 17.220000 20.550000 16.680000 8.340000 9.450000 17.220000 8.340000 15.540000 17.220000 20.550000 0.000000 ] xS
5 w
1 J
1 j
[
20
20
] 0 d
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 1040 cm
786.89954 945.14313 m
896.10046 945.85687 l
S
0 i
CM
910.50018 94.049019 m
896.13574 99.543022 l
896.06519 88.743248 l
h
910.50018 94.049019 m
f
0 J
0 j
[] 0 d
1 0 0 -1 0 1040 cm
910.50018 945.95099 m
896.13574 940.45697 l
896.06519 951.25677 l
h
910.50018 945.95099 m
S
CM
772.49982 94.950981 m
786.86426 89.456978 l
786.93481 100.25675 l
h
772.49982 94.950981 m
f
1 0 0 -1 0 1040 cm
772.49982 945.04901 m
786.86426 950.54303 l
786.93481 939.74323 l
h
772.49982 945.04901 m
S
/Cs2 SC
0 sc
1 0 0 -1 1031.5 99 cm
-90.014999 11.080002 m
(."/&0"%,1%2/3)[ 21.660000 17.220000 16.680000 9.450000 9.450000 17.220000 6.660000 8.340000 17.790000 6.660000 16.110000 16.680000 0.000000 ] xS
7 w
1 J
1 j
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 1040 cm
277.89963 945.14606 m
413.10037 945.85394 l
S
0 i
CM
430.70013 94.053925 m
413.13495 100.74598 l
413.06583 87.546165 l
h
430.70013 94.053925 m
f
0 J
0 j
1 0 0 -1 0 1040 cm
430.70013 945.94604 m
413.13495 939.25403 l
413.06583 952.45386 l
h
430.70013 945.94604 m
S
CM
260.29987 94.946075 m
277.86505 88.254021 l
277.93417 101.45383 l
h
260.29987 94.946075 m
f
1 0 0 -1 0 1040 cm
260.29987 945.05396 m
277.86505 951.74597 l
277.93417 938.54614 l
h
260.29987 945.05396 m
S
/Cs2 SC
0 sc
1 0 0 -1 534.5 99 cm
-72.239998 11.080002 m
(42&2,1%2/3)[ 21.120000 16.110000 9.450000 16.110000 8.340000 17.790000 6.660000 16.110000 16.680000 0.000000 ] xS
5 w
1 J
1 j
[
40
20
5
20
] 0 d
0.60000002 i
/Cs1 SC
0.69411767 0 0.10980392 sc
1 0 0 -1 0 1040 cm
1272.9 945 m
1382.1 945 l
S
0 i
CM
1396.5 95 m
1382.1 100.4 l
1382.1 89.599998 l
h
1396.5 95 m
f
0 J
0 j
[] 0 d
1 0 0 -1 0 1040 cm
1396.5 945 m
1382.1 939.59998 l
1382.1 950.40002 l
h
1396.5 945 m
S
CM
1258.5 95 m
1272.9 89.599998 l
1272.9 100.4 l
h
1258.5 95 m
f
1 0 0 -1 0 1040 cm
1258.5 945 m
1272.9 950.40002 l
1272.9 939.59998 l
h
1258.5 945 m
S
/Cs2 SC
0 sc
1 0 0 -1 1462.5 95 cm
-42.779999 11.080002 m
(56&$"/)[ 19.440000 16.110000 9.450000 6.660000 17.220000 0.000000 ] xS
3 w
1 J
1 j
[
3
9
] 0 d
0.60000002 i
/Cs1 SC
0.69411767 0 0.10980392 sc
1 0 0 -1 0 1040 cm
702 306 m
126 306 l
S
0.69411802 0 0.109804 sc
702 817.5 m
126 817.5 l
S
0.69411999 0 0.1098 sc
0 i
1 0 0 -1 97.5 687 cm
-65.279999 -6.8399963 m
(72/8"930)[ 21.660000 16.110000 16.680000 17.790000 17.220000 15.000000 16.110000 0.000000 ] xS
-37.5 29 m
(:&20&:)[ 15.000000 9.450000 16.110000 9.990000 9.450000 0.000000 ] xS
1 0 0 -1 97.5 189.5 cm
-65.279999 -6.8399963 m
(72/8"930)[ 21.660000 16.110000 16.680000 17.790000 17.220000 15.000000 16.110000 0.000000 ] xS
-50.834999 29 m
(;/$:<3:)[ 15.540000 16.680000 6.660000 15.000000 16.680000 16.110000 0.000000 ] xS
[] 0 d
0.60000002 i
0 0 0 sc
1 0 0 -1 0 1040 cm
457 105.16464 m
458 297 l
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 458 965.02429 cm
/F1.1[ 50 0 0 -50 0 0]sf
-88.900002 17.800003 m
(*"=&30+)[ 34.250000 28.700000 27.800000 15.750000 26.850000 16.650000 0.000000 ] xS
1 0 0 -1 179 965.02429 cm
-101.825 17.800003 m
(>?@AB!C)[ 27.800000 12.950000 32.400000 32.400000 19.450000 43.550000 0.000000 ] xS
7 w
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 1040 cm
198.8997 170.87143 m
429.43661 169.80911 l
S
0 i
CM
447.03641 870.27197 m
429.40619 876.79083 l
429.46701 863.59094 l
h
447.03641 870.27197 m
f
0 J
0 j
1 0 0 -1 0 1040 cm
447.03641 169.72801 m
429.40619 163.20918 l
429.46701 176.40904 l
h
447.03641 169.72801 m
S
CM
181.2999 869.04749 m
198.93011 862.52863 l
198.86929 875.72852 l
h
181.2999 869.04749 m
f
1 0 0 -1 0 1040 cm
181.2999 170.95255 m
198.93011 177.47137 l
198.86929 164.2715 l
h
181.2999 170.95255 m
S
/Cs2 SC
0 sc
1 0 0 -1 871 898.8891 cm
/F1.1[ 30 0 0 -30 0 0]sf
-105.655 11.080002 m
(."DD=/$62&$/E)[ 21.660000 17.220000 25.590000 25.590000 16.680000 16.680000 6.660000 16.110000 16.110000 9.450000 6.660000 16.680000 0.000000 ] xS
3 w
1 J
1 j
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 1040 cm
756 261 m
756 846 l
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 748 814.21143 cm
/F1.1[ 50 0 0 -50 0 0]sf
-88.900002 17.800003 m
(*"=&30-)[ 34.250000 28.700000 27.800000 15.750000 26.850000 16.650000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 1040 cm
1043 255.97746 m
1044 711 l
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 1044 814.21143 cm
-84.699997 17.800003 m
(!*F!@)[ 43.550000 34.250000 16.650000 43.550000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 1040 cm
1323 105.16464 m
1323 846 l
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 1324 965.02429 cm
-57.825001 17.800003 m
(\(\)*G)[ 25.900000 28.700000 34.250000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 1040 cm
1610 105.16464 m
1619 846 l
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 1611 965.02429 cm
-35.599998 17.800003 m
(.C)[ 36.100000 0.000000 ] xS
7 w
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 1040 cm
485.242 170.75049 m
1295.1012 163.10547 l
S
0 i
CM
1312.7004 877.06067 m
1295.0389 883.49426 l
1295.1636 870.2948 l
h
1312.7004 877.06067 m
f
0 J
0 j
1 0 0 -1 0 1040 cm
1312.7004 162.93933 m
1295.0389 156.50577 l
1295.1636 169.70517 l
h
1312.7004 162.93933 m
S
CM
467.64279 869.08337 m
485.30432 862.64978 l
485.17972 875.84924 l
h
467.64279 869.08337 m
f
1 0 0 -1 0 1040 cm
467.64279 170.91663 m
485.30432 177.35019 l
485.17972 164.15079 l
h
467.64279 170.91663 m
S
1 J
1 j
0.60000002 i
1350.9 162.84314 m
1582.8008 162.85175 l
S
0 i
CM
1600.4009 877.14758 m
1582.801 883.74823 l
1582.8005 870.54828 l
h
1600.4009 877.14758 m
f
0 J
0 j
1 0 0 -1 0 1040 cm
1600.4009 162.85239 m
1582.801 156.25174 l
1582.8005 169.45174 l
h
1600.4009 162.85239 m
S
CM
1333.3 877.15753 m
1350.8998 870.55688 l
1350.9003 883.75684 l
h
1333.3 877.15753 m
f
1 0 0 -1 0 1040 cm
1333.3 162.84248 m
1350.8998 169.44315 l
1350.9003 156.24313 l
h
1333.3 162.84248 m
S
1 J
1 j
[
28
28
] 0 d
0.60000002 i
198.89922 386.79031 m
728.10077 382.8129 l
S
0 i
CM
745.70032 657.3194 m
728.05121 663.78693 l
728.15039 650.58728 l
h
745.70032 657.3194 m
f
0 J
0 j
[] 0 d
1 0 0 -1 0 1040 cm
745.70032 382.68063 m
728.05121 376.2131 l
728.15039 389.41272 l
h
745.70032 382.68063 m
S
CM
181.29971 653.07739 m
198.94882 646.60986 l
198.84961 659.80951 l
h
181.29971 653.07739 m
f
1 0 0 -1 0 1040 cm
181.29971 386.92258 m
198.94882 393.39014 l
198.84961 380.19049 l
h
181.29971 386.92258 m
S
/Cs2 SC
0 sc
1 0 0 -1 452 673.8891 cm
/F1.1[ 30 0 0 -30 0 0]sf
-41.939999 11.080002 m
(47.A)[ 21.120000 21.660000 21.660000 0.000000 ] xS
5 w
1 J
1 j
[
20
20
] 0 d
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 1040 cm
171 460.33334 m
746.5 460.17163 l
746.49731 450.67163 765.49731 450.66629 765.5 460.16629 c
1021.5486 460.09433 l
S
0 i
CM
1035.9486 579.90973 m
1021.5471 585.30566 l
1021.5501 574.50568 l
h
1035.9486 579.90973 m
f
0 J
0 j
[] 0 d
1 0 0 -1 0 1040 cm
1035.9486 460.0903 m
1021.5471 454.69434 l
1021.5501 465.49432 l
h
1035.9486 460.0903 m
S
/Cs2 SC
0 sc
1 0 0 -1 470 605.1109 cm
-90.894997 11.080002 m
(!21B*3E$:&30)[ 26.130000 16.110000 17.790000 11.670000 20.550000 16.110000 17.220000 6.660000 15.000000 9.450000 16.110000 0.000000 ] xS
1 J
1 j
[
20
20
] 0 d
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 1040 cm
1043.6029 530.29596 m
765.5 530.94525 l
765.47778 521.44531 746.47784 521.48969 746.5 530.98962 c
192.89993 532.28223 l
S
0 i
CM
178.49998 507.68417 m
192.91255 502.31781 l
192.88733 513.1178 l
h
178.49998 507.68417 m
f
0 J
0 j
[] 0 d
1 0 0 -1 0 1040 cm
178.49998 532.3158 m
192.91255 537.68219 l
192.88733 526.8822 l
h
178.49998 532.3158 m
S
/Cs2 SC
0 sc
1 0 0 -1 911 533.1109 cm
-75.285004 11.080002 m
(!21BC"&$H')[ 26.130000 16.110000 17.790000 11.670000 21.660000 17.220000 9.450000 6.660000 8.880000 0.000000 ] xS
1 0 0 -1 466 452.11093 cm
-33.060001 11.080002 m
(@!*)[ 19.440000 26.130000 0.000000 ] xS
1 J
1 j
[
20
20
] 0 d
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 1040 cm
1323 667.78577 m
1065.8087 669.52954 l
S
0 i
CM
1051.4091 370.37283 m
1065.8453 365.07059 l
1065.7721 375.87036 l
h
1051.4091 370.37283 m
f
0 J
0 j
[] 0 d
1 0 0 -1 0 1040 cm
1051.4091 669.62714 m
1065.8453 674.92938 l
1065.7721 664.12964 l
h
1051.4091 669.62714 m
S
/Cs2 SC
0 sc
1 0 0 -1 1195 394.88907 cm
-80.904999 11.080002 m
(?/9"I3,@!*)[ 7.770000 16.680000 15.000000 17.220000 15.570000 16.110000 8.340000 19.440000 26.130000 0.000000 ] xS
1 J
1 j
[
20
20
] 0 d
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 1040 cm
171 734.45044 m
746.50012 731.31305 l
746.44836 721.81317 765.44806 721.70959 765.49988 731.20947 c
1301.1003 728.28961 l
S
0 i
CM
1315.5001 311.78891 m
1301.0709 317.11032 l
1301.1298 306.31049 l
h
1315.5001 311.78891 m
f
0 J
0 j
[] 0 d
1 0 0 -1 0 1040 cm
1315.5001 728.21112 m
1301.0709 722.88971 l
1301.1298 733.68951 l
h
1315.5001 728.21112 m
S
/Cs2 SC
0 sc
1 0 0 -1 466 331.88907 cm
-73.904999 11.080002 m
(!21B*31%')[ 26.130000 16.110000 17.790000 11.670000 20.550000 16.110000 17.790000 6.660000 0.000000 ] xS
1 J
1 j
[
20
20
] 0 d
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 1040 cm
171 612.45453 m
746.5 611.3335 l
746.48151 601.8335 765.48151 601.79651 765.5 611.29651 c
1034.2797 610.77295 l
1034.2612 601.27295 1053.2611 601.23596 1053.2797 610.7359 c
1301.1001 610.25317 l
S
0 i
CM
1315.5 429.77487 m
1301.0895 435.14679 l
1301.1106 424.34683 l
h
1315.5 429.77487 m
f
0 J
0 j
[] 0 d
1 0 0 -1 0 1040 cm
1315.5 610.22516 m
1301.0895 604.85321 l
1301.1106 615.6532 l
h
1315.5 610.22516 m
S
7 w
1 J
1 j
0.60000002 i
198.89999 799.11548 m
728.10004 798.59619 l
S
0 i
CM
745.70001 241.42108 m
728.09357 248.0038 l
728.10651 234.8038 l
h
745.70001 241.42108 m
f
0 J
0 j
1 0 0 -1 0 1040 cm
745.70001 798.57892 m
728.09357 791.99622 l
728.10651 805.19617 l
h
745.70001 798.57892 m
S
CM
181.29999 240.86725 m
198.90646 234.28452 l
198.89351 247.48451 l
h
181.29999 240.86725 m
f
1 0 0 -1 0 1040 cm
181.29999 799.13275 m
198.90646 805.71545 l
198.89351 792.5155 l
h
181.29999 799.13275 m
S
1 J
1 j
0.60000002 i
783.89862 798.065 m
1295.1013 793.03223 l
S
0 i
CM
1312.7004 247.14102 m
1295.0364 253.56744 l
1295.1664 240.36807 l
h
1312.7004 247.14102 m
f
0 J
0 j
1 0 0 -1 0 1040 cm
1312.7004 792.85901 m
1295.0364 786.43256 l
1295.1664 799.6319 l
h
1312.7004 792.85901 m
S
CM
766.2995 241.7617 m
783.96362 235.33528 l
783.83368 248.53465 l
h
766.2995 241.7617 m
f
1 0 0 -1 0 1040 cm
766.2995 798.23828 m
783.96362 804.66473 l
783.83368 791.46533 l
h
766.2995 798.23828 m
S
1 J
1 j
0.60000002 i
1350.9 793.74365 m
1590.4652 793.74426 l
S
0 i
CM
1608.0652 246.25569 m
1590.4652 252.85573 l
1590.4652 239.65573 l
h
1608.0652 246.25569 m
f
0 J
0 j
1 0 0 -1 0 1040 cm
1608.0652 793.74432 m
1590.4652 787.14429 l
1590.4652 800.3443 l
h
1608.0652 793.74432 m
S
CM
1333.3 246.25641 m
1350.9 239.65636 l
1350.9 252.85635 l
h
1333.3 246.25641 m
f
1 0 0 -1 0 1040 cm
1333.3 793.74359 m
1350.9 800.34363 l
1350.9 787.14362 l
h
1333.3 793.74359 m
S
/Cs2 SC
0 sc
1 0 0 -1 934 268.88907 cm
-105.655 11.080002 m
(."DD=/$62&$/E)[ 21.660000 17.220000 25.590000 25.590000 16.680000 16.680000 6.660000 16.110000 16.110000 9.450000 6.660000 16.680000 0.000000 ] xS
5 w
1 J
1 j
[
20
20
] 0 d
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 1040 cm
1043.9092 669.6546 m
765.5 669.99548 l
765.48834 660.49548 746.4884 660.5188 746.5 670.0188 c
192.89998 670.69659 l
S
0 i
CM
178.5 369.28577 m
192.9066 363.90341 l
192.89337 374.7034 l
h
178.5 369.28577 m
f
0 J
0 j
[] 0 d
1 0 0 -1 0 1040 cm
178.5 670.71423 m
192.9066 676.09662 l
192.89337 665.29657 l
h
178.5 670.71423 m
S
ep
end
%%Trailer
%%EOF
