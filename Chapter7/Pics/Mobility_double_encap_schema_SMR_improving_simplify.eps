%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 1720.000000 1301.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.13.3 (Build 17D47) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 1720 1301
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 1720 1301
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /M put
dup 34 /o put
dup 35 /b put
dup 36 /i put
dup 37 /l put
dup 38 /t put
dup 39 /y put
dup 40 /x put
dup 41 /T put
dup 42 /R put
dup 43 /one put
dup 44 /space put
dup 45 /two put
dup 46 /C put
dup 47 /n put
dup 48 /r put
dup 49 /p put
dup 50 /a put
dup 51 /e put
dup 52 /D put
dup 53 /A put
dup 54 /c put
dup 55 /H put
dup 56 /d put
dup 57 /v put
dup 58 /s put
dup 59 /fi put
dup 60 /h put
dup 61 /L put
dup 62 /I put
dup 63 /S put
dup 64 /P put
dup 65 /hyphen put
dup 66 /N put
dup 67 /m put
dup 68 /u put
dup 69 /g put
dup 70 /slash put
dup 71 /three put
dup 72 /f put
dup 73 /q put
dup 74 /O put
dup 75 /k put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<





5D411B0009001900190019002900190039001900490019005900190069001900790019008900190099001900A9001900B9001900C90019000D5DB8001810B80023D0B800232F00B800002FBA001E000900032BB8001E10BA0013002800032BB8001310303113113335331E0333323E0235342E0223220607231101140E0223222E0235343E0233321E024355020E292E2F133B593B1D1E3B593C365A1502013B10243B2C2C3E271211263C2B293D271302CAFD3645171F12082A49623737624B2C272B010BFE3D264838222136472624463722203645000000010024FFF501FA021100230079BA001C000B00032BB8001C10411B0006001C0016001C0026001C0036001C0046001C0056001C0066001C0076001C0086001C0096001C00A6001C00B6001C00C6001C000D5D410500D5001C00E5001C00025D00BA0017001000032BB8001710BA0006002100032BB8000610B80000DCB8001010B80014DC303101332E0323220E0215141E0233323637230E0123222E0235343E02333216019F5805263B4D2C3D5C3D1E1F3D5B3B63730E5708473F283A241110253E2E3640015F2E432C152B4B653A3A61462668603C4220354424274938223600000000020024FFF5020E02CA0013002C00BBB8002D2FBA0015001600032BB8001510B8002D10B80022D0B800222FB80000DC411B0006000000160000002600000036000000460000005600000066000000760000008600000096000000A6000000B6000000C60000000D5D410500D5000000E5000000025DB8001610B8000AD0B8000A2FB8001610B80018D0B800182FB8001610B8002AD0B8002A2FBA002B00220015111239B8001610B8002CD000B800152FBA000F002700032BB8000F10BA001D000500032BB8001D10303137343E0233321E0215140E0223222E0205112311232E0323220E0215141E023332363733157E10243C2B2C3E271211263C2B293D2713019055020E292E2E143B593B1D1E3B593C365A1502FE264838222136472624463722203645DA02CAFEF6171F13082B49623737624A2C262B46000000020024FFF502030211000A0026005BBA0014001F00032BB8001410BA0015000000032BB8001510B8001410B80001D0B8000010B8000CD0B8000C2F00BA000F002400032BB8000F10BA001A000600032BB8001A10BA0001001400032BB8000110B8002410B8000CDC303101213E0333321E0217230E0123222E023721362E0223220E02151E0333323601A7FED702162635212035271754540B45362A3E28120101830215375B4535594124021F3E5B3E587401341E352817172736AE33321C2F3D222F6858392848623B3B644828580001000C0000012902D20017004FBA0003000000032BB8000310B80006D0B8000010B8000DDCB8000010B80014D000B800012FBA0011000A




2B01BF0003003E0037002B001F00130000001C2B00BF0002004A0037002B001F00130000001C2B00BA00040004001B2BB8000120457D691844B8000A2BB800002B000000
00>] def
/CharStrings 45 dict dup begin
/.notdef 0 def
/space 1 def
/hyphen 2 def
/slash 3 def
/one 4 def
/two 5 def
/three 6 def
/A 7 def
/C 8 def
/D 9 def
/H 10 def
/I 11 def
/L 12 def
/M 13 def
/N 14 def
/O 15 def
/P 16 def
/R 17 def
/S 18 def
/T 19 def
/a 20 def
/b 21 def
/c 22 def
/d 23 def
/e 24 def
/f 25 def
/g 26 def
/h 27 def
/i 28 def
/k 29 def
/l 30 def
/m 31 def
/n 32 def
/o 33 def
/p 34 def
/q 35 def
/r 36 def
/s 37 def
/t 38 def
/u 39 def
/v 40 def
/x 41 def
/y 42 def
/fi 43 def
/uni2B91 44 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-951 -481 1987 1077}def
/UniqueID 4127891 def
currentdict currentfile eexec




82C149C9E5EA53656FD257A111000E0B42B2C17B8D71BD0C085FD02B4B9F78449FA2F139C580529C2617CBD10736E6859EF72C1AD9779E0A097B58D02B39E19B9F6ACFEFFCEB2CBB5B7166CA818723AAF2E368CA0889BB12DEE7B806CA92943389B65E27F70F35CE0BA6BFF4E025638E851687EE4F73A38D0FE5C6991D4A837BC929D51B5A2FBF9A9DCE23A17CD2F9179B4B812423F72330354355981FAAA0C4284717C54A596F899ABFDC8DF4E0175287ED69CE879BA7672EC0764F3382DBB5CEAFD75A3126BE588321F23E597FBED3A7D1F9B87829DDE97DA54130DF09C1F23CC88FCF37D947D4BA9E2DD08911F0956240D7EDDA33D1D81EADC3AF4D09AEC11965EB0698DA95B9FA307CAA4ABB291055DEDFD55B05F2DA21D08EF275CA34B67CDA8C5093080F05C6E98599AEBB5A7922D9DD159F4AD959E45B3EA81D54E058E484B73817E2FB8238407EBECD8E47BAB9F0D1DFABF440DAAAA153F18D713D86911F291506CC8F6AF3E31F8D82DEC19EF6B77FE473BBD77BAEB6C32AE2B4D99DE7B3DFDA6BEF6B2C8D1AFE3419C6F740EDBF11E375CB90D464C6D5C0374A531A648AC2FE6134166EB1B741BF8EAD9B14F0180A032691B482087AB69016534EEC9B6184A19EA831005C8253796C3CC0C645BFF7991540A6B7290589A67FDCEF8F02D53AA665D62C1EC03108BFABBD09E8148A9B4EFBEE291E897EAF17AEA4F93E06268829129A976A90AB2700ED22931CF50255674D5085FE59FCCB8B2DA9E93887C8C49C43473A1A4E0E70760E4E3B435AF072C2E2E4FB32FACF7B7890CDC0D075D8D5474F2C296FEEE91ACB2C0DCC29A80E6FF6A46BAFF0B6B602A255B8B434298B8AF6655EF26DB2F8567E27D8BE870C347BDE712CB9877A33133FA3BB3B52EA8FE17596003D60259EB60455A4C5A3C7F7453DF23235377FDCBB0E2409FA3BD6B737B3ADE54532A98863D93ACA1FDC30A84E98959456FAD501C2FBBBDD2B514499BBC193A08F9EF2476F9A5F3588A25CB30044940EB4E781075D3EA79445C57752A105DEC9C4E78FA82AD8B75C26E05C94CE63A80018ABF57690679B552CD9F57A24F56E7D2D0ED12E2651B78C6F0BB10C5F25B4752E4C83A489D3139FC87EF83B32E278F9F102CB7201E3B58CA1C356A70472659533B4FD7A28A1513653FE7DEF57D836477900E2A876309750C32E69A85F1CAE624C239E435B1A6993AD75969518AB5D57446E20C7E9C50DCC6A719638AB5045D26638BACEB28601E46D5C00BE72C5ECB9F7BBC6024333535DA53E874F45024E85FE5C22C71A7416517ED5FEC68D55FA02EF228521677DC10A0CCAD34E95B465C5636BEE618A7C49FBCAF9C9100811F953D28D4058BC14CCC62DDF8E9FCBBC7C355CA7DAF566668C00750915394387676A73974D0DE4437DE15326D44A69263EE7E17F81BA364608268960


CCB379BBEE43E18991BD0B240E99A01F42D24F8D7FBE7B71675424360628FE926B29A2DECD59F54CA19F9561B7C27D916EC06C44EF10BB21533F6A7192CAD4E11D028BBA5CF211451B87AB4FAAD5AAAE35AE1741D1E271009C775C5F74090EE65E9EB04859149C2BA5B4488E789C066760387F1DB6D329E42B2E6BE3C30382529001C9CB37A59A819E0326AC420C56C23C39E6C463499052D15F744433B4252AFCC298FEEA71D4B252340C6FE22DD6CB524FA293055E031BBC412371559BE604F9D2E991E7C176D14E262A1BAD17E66155668A311B3912E474A1D8FA32A494F8B2888A40E6A18A895B539A82AF3D0334B1450F34E35A30FCB94FFBC59B1427D6F7063EE01FD73FEE235EFA92D601A73D74A52D2F02535C44B9713B2CD253B669DE00D76644A70604B44AB0A722CEBF091D195DA380A9E99F0242BC97ABCC1DE51306E04A0366CBE2F07F5673F6C85CC9A2DC2CEB99D6F61824E63A2420A285F198A27F99D2E079930C16D927D924F79574B8F04E72F84CB1CD4F638D62C82A2656207184116A09
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F1.1/HelveticaNeue renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 1 1 sc
q
0 0 1720 1301 rc
0 1301 m
1720 1301 l
1720 0 l
0 0 l
h
0 1301 m
f
3 w
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 0 1301 cm
180 99 m
180 1098 l
S
2 w
[
16
8
2
8
] 0 d
0.69411767 0 0.10980392 sc
180 189.66667 m
180 189.66667 108 207.18047 108 234 c
108 253.83179 147.36894 271.85602 167.88387 279.90207 c
S
0 i
CM
176.90077 1017.8002 m
169.12137 1024.4785 l
166.64832 1017.7166 l
h
176.90077 1017.8002 m
f
0 J
0 j
[] 0 d
1 0 0 -1 0 1301 cm
176.90077 283.19983 m
169.12137 276.52145 l
166.64832 283.28342 l
h
176.90077 283.19983 m
S
/Cs2 SC
0 sc
1 0 0 -1 277 1071 cm
/F1.1[ 30 0 0 -30 0 0]sf
-92 -6.8399963 m
(!"#$%$&')[ 26.130000 17.220000 17.790000 6.660000 6.660000 6.660000 9.450000 0.000000 ] xS
-92 29 m
(\(\)*+,&",\(\)*-)[ 15.540000 17.220000 20.550000 16.680000 8.340000 9.450000 17.220000 8.340000 15.540000 17.220000 20.550000 0.000000 ] xS
5 w
1 J
1 j
[
20
20
] 0 d
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 1301 cm
741.89954 1206.1432 m
851.10046 1206.8568 l
S
0 i
CM
865.50018 94.049019 m
851.13574 99.543022 l
851.06519 88.743248 l
h
865.50018 94.049019 m
f
0 J
0 j
[] 0 d
1 0 0 -1 0 1301 cm
865.50018 1206.9509 m
851.13574 1201.457 l
851.06519 1212.2567 l
h
865.50018 1206.9509 m
S
CM
727.49982 94.950981 m
741.86426 89.456978 l
741.93481 100.25675 l
h
727.49982 94.950981 m
f
1 0 0 -1 0 1301 cm
727.49982 1206.0491 m
741.86426 1211.543 l
741.93481 1200.7433 l
h
727.49982 1206.0491 m
S
/Cs2 SC
0 sc
1 0 0 -1 986.5 99 cm
-90.014999 11.080002 m
(."/&0"%,1%2/3)[ 21.660000 17.220000 16.680000 9.450000 9.450000 17.220000 6.660000 8.340000 17.790000 6.660000 16.110000 16.680000 0.000000 ] xS
7 w
1 J
1 j
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 1301 cm
232.89961 1206.1461 m
368.10037 1206.8539 l
S
0 i
CM
385.70013 94.053925 m
368.13495 100.74598 l
368.06583 87.546165 l
h
385.70013 94.053925 m
f
0 J
0 j
1 0 0 -1 0 1301 cm
385.70013 1206.946 m
368.13495 1200.254 l
368.06583 1213.4539 l
h
385.70013 1206.946 m
S
CM
215.29987 94.946075 m
232.86507 88.254021 l
232.93417 101.45383 l
h
215.29987 94.946075 m
f
1 0 0 -1 0 1301 cm
215.29987 1206.054 m
232.86507 1212.746 l
232.93417 1199.5461 l
h
215.29987 1206.054 m
S
/Cs2 SC
0 sc
1 0 0 -1 489.5 99 cm
-72.239998 11.080002 m
(42&2,1%2/3)[ 21.120000 16.110000 9.450000 16.110000 8.340000 17.790000 6.660000 16.110000 16.680000 0.000000 ] xS
5 w
1 J
1 j
[
40
20
5
20
] 0 d
0.60000002 i
/Cs1 SC
0.69411767 0 0.10980392 sc
1 0 0 -1 0 1301 cm
1227.9 1206 m
1337.1 1206 l
S
0 i
CM
1351.5 95 m
1337.1 100.4 l
1337.1 89.599998 l
h
1351.5 95 m
f
0 J
0 j
[] 0 d
1 0 0 -1 0 1301 cm
1351.5 1206 m
1337.1 1200.6 l
1337.1 1211.4 l
h
1351.5 1206 m
S
CM
1213.5 95 m
1227.9 89.599998 l
1227.9 100.4 l
h
1213.5 95 m
f
1 0 0 -1 0 1301 cm
1213.5 1206 m
1227.9 1211.4 l
1227.9 1200.6 l
h
1213.5 1206 m
S
/Cs2 SC
0 sc
1 0 0 -1 1417.5 95 cm
-42.779999 11.080002 m
(56&$"/)[ 19.440000 16.110000 9.450000 6.660000 17.220000 0.000000 ] xS
3 w
1 J
1 j
[
3
9
] 0 d
0.60000002 i
/Cs1 SC
0.69411767 0 0.10980392 sc
1 0 0 -1 0 1301 cm
711 297 m
135 297 l
S
0.69411802 0 0.109804 sc
720 1051 m
144 1051 l
S
0.69411999 0 0.1098 sc
0 i
1 0 0 -1 106.5 957 cm
-65.279999 -6.8399963 m
(72/8"930)[ 21.660000 16.110000 16.680000 17.790000 17.220000 15.000000 16.110000 0.000000 ] xS
-37.5 29 m
(:&20&:)[ 15.000000 9.450000 16.110000 9.990000 9.450000 0.000000 ] xS
1 0 0 -1 115.5 217 cm
-65.279999 -6.8399963 m
(72/8"930)[ 21.660000 16.110000 16.680000 17.790000 17.220000 15.000000 16.110000 0.000000 ] xS
-50.834999 29 m
(;/$:<3:)[ 15.540000 16.680000 6.660000 15.000000 16.680000 16.110000 0.000000 ] xS
[] 0 d
0.60000002 i
0 0 0 sc
1 0 0 -1 0 1301 cm
466 96.164642 m
467 288 l
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 467 1235.0243 cm
/F1.1[ 50 0 0 -50 0 0]sf
-57.825001 17.800003 m
(\(\)*+)[ 25.900000 28.700000 34.250000 0.000000 ] xS
1 0 0 -1 188 1235.0243 cm
-101.825 17.800003 m
(=>?@A!B)[ 27.800000 12.950000 32.400000 32.400000 19.450000 43.550000 0.000000 ] xS
7 w
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 1301 cm
207.8997 161.87143 m
438.43661 160.80911 l
S
0 i
CM
456.03641 1140.272 m
438.40619 1146.7908 l
438.46701 1133.5909 l
h
456.03641 1140.272 m
f
0 J
0 j
1 0 0 -1 0 1301 cm
456.03641 160.72801 m
438.40619 154.20918 l
438.46701 167.40904 l
h
456.03641 160.72801 m
S
CM
190.2999 1139.0475 m
207.93011 1132.5287 l
207.86929 1145.7285 l
h
190.2999 1139.0475 m
f
1 0 0 -1 0 1301 cm
190.2999 161.95255 m
207.93011 168.47137 l
207.86929 155.2715 l
h
190.2999 161.95255 m
S
/Cs2 SC
0 sc
1 0 0 -1 880 1168.889 cm
/F1.1[ 30 0 0 -30 0 0]sf
-105.655 11.080002 m
(."CCD/$62&$/E)[ 21.660000 17.220000 25.590000 25.590000 16.680000 16.680000 6.660000 16.110000 16.110000 9.450000 6.660000 16.680000 0.000000 ] xS
3 w
1 J
1 j
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 1301 cm
756 246.97746 m
756 1098 l
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 757 1084.2114 cm
/F1.1[ 50 0 0 -50 0 0]sf
-57.825001 17.800003 m
(\(\)*-)[ 25.900000 28.700000 34.250000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 1301 cm
1052 246.97746 m
1053 891 l
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 1053 1084.2114 cm
-84.699997 17.800003 m
(!*F!?)[ 43.550000 34.250000 16.650000 43.550000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 1301 cm
1332 96.164642 m
1332 1098 l
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 1333 1235.0243 cm
-57.825001 17.800003 m
(\(\)*G)[ 25.900000 28.700000 34.250000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 1301 cm
1619 96.164642 m
1620 1098 l
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 1620 1235.0243 cm
-35.599998 17.800003 m
(.B)[ 36.100000 0.000000 ] xS
7 w
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 1301 cm
494.2428 161.85226 m
1304.1005 157.16159 l
S
0 i
CM
1321.7002 1143.9403 m
1304.0623 1150.4384 l
1304.1387 1137.2385 l
h
1321.7002 1143.9403 m
f
0 J
0 j
1 0 0 -1 0 1301 cm
1321.7002 157.05966 m
1304.0623 150.56171 l
1304.1387 163.76149 l
h
1321.7002 157.05966 m
S
CM
476.6431 1139.0458 m
494.28101 1132.5479 l
494.20456 1145.7477 l
h
476.6431 1139.0458 m
f
1 0 0 -1 0 1301 cm
476.6431 161.95419 m
494.28101 168.45215 l
494.20456 155.25237 l
h
476.6431 161.95419 m
S
1 J
1 j
0.60000002 i
1359.9 155.33353 m
1591.1591 155.33508 l
S
0 i
CM
1608.759 1145.6648 m
1591.1591 1152.2649 l
1591.1591 1139.0649 l
h
1608.759 1145.6648 m
f
0 J
0 j
1 0 0 -1 0 1301 cm
1608.759 155.33521 m
1591.1591 148.73508 l
1591.1591 161.93509 l
h
1608.759 155.33521 m
S
CM
1342.3 1145.6666 m
1359.8999 1139.0665 l
1359.9 1152.2665 l
h
1342.3 1145.6666 m
f
1 0 0 -1 0 1301 cm
1342.3 155.3334 m
1359.8999 161.93352 l
1359.9 148.73352 l
h
1342.3 155.3334 m
S
1 J
1 j
[
28
28
] 0 d
0.60000002 i
207.89999 378 m
728.09998 378 l
S
0 i
CM
745.70001 923 m
728.09998 929.59998 l
728.09998 916.40002 l
h
745.70001 923 m
f
0 J
0 j
[] 0 d
1 0 0 -1 0 1301 cm
745.70001 378 m
728.09998 371.39999 l
728.09998 384.60001 l
h
745.70001 378 m
S
CM
190.3 923 m
207.89999 916.40002 l
207.89999 929.59998 l
h
190.3 923 m
f
1 0 0 -1 0 1301 cm
190.3 378 m
207.89999 384.60001 l
207.89999 371.39999 l
h
190.3 378 m
S
/Cs2 SC
0 sc
1 0 0 -1 461 943.8891 cm
/F1.1[ 30 0 0 -30 0 0]sf
-41.939999 11.080002 m
(47.@)[ 21.120000 21.660000 21.660000 0.000000 ] xS
5 w
1 J
1 j
[
20
20
] 0 d
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 1301 cm
180 451.33334 m
734.10052 447.48541 l
S
0 i
CM
748.50018 853.61456 m
734.06305 858.91449 l
734.138 848.11475 l
h
748.50018 853.61456 m
f
0 J
0 j
[] 0 d
1 0 0 -1 0 1301 cm
748.50018 447.38541 m
734.06305 442.08554 l
734.138 452.88528 l
h
748.50018 447.38541 m
S
/Cs2 SC
0 sc
1 0 0 -1 461 875.1109 cm
-90.894997 11.080002 m
(!21A*3E$:&30)[ 26.130000 16.110000 17.790000 11.670000 20.550000 16.110000 17.220000 6.660000 15.000000 9.450000 16.110000 0.000000 ] xS
1 J
1 j
[
20
20
] 0 d
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 1301 cm
756 520.66669 m
201.89977 523.23193 l
S
0 i
CM
187.49992 777.70142 m
201.92476 772.3681 l
201.87477 783.16797 l
h
187.49992 777.70142 m
f
0 J
0 j
[] 0 d
1 0 0 -1 0 1301 cm
187.49992 523.29858 m
201.92476 528.6319 l
201.87477 517.83203 l
h
187.49992 523.29858 m
S
/Cs2 SC
0 sc
1 0 0 -1 902 803.1109 cm
-75.285004 11.080002 m
(!21AB"&$H')[ 26.130000 16.110000 17.790000 11.670000 21.660000 17.220000 9.450000 6.660000 8.880000 0.000000 ] xS
1 J
1 j
[
20
20
] 0 d
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 1301 cm
180 591.33331 m
734.10022 593.89862 l
S
0 i
CM
748.50006 707.03473 m
734.12524 712.50134 l
734.07526 701.70142 l
h
748.50006 707.03473 m
f
0 J
0 j
[] 0 d
1 0 0 -1 0 1301 cm
748.50006 593.96527 m
734.12524 588.49866 l
734.07526 599.29858 l
h
748.50006 593.96527 m
S
/Cs2 SC
0 sc
1 0 0 -1 461 731.1109 cm
-33.060001 11.080002 m
(?!*)[ 19.440000 26.130000 0.000000 ] xS
1 J
1 j
[
20
20
] 0 d
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 1301 cm
1332 667.33331 m
1074.5483 665.18768 l
S
0 i
CM
1060.1488 635.93231 m
1074.5033 630.41248 l
1074.5934 641.2121 l
h
1060.1488 635.93231 m
f
0 J
0 j
[] 0 d
1 0 0 -1 0 1301 cm
1060.1488 665.06769 m
1074.5033 670.58752 l
1074.5934 659.7879 l
h
1060.1488 665.06769 m
S
/Cs2 SC
0 sc
1 0 0 -1 1192.5 641.1109 cm
-91.195 -0.69999695 m
(!21A*3ID3:&)[ 26.130000 16.110000 17.790000 11.670000 20.550000 16.110000 17.790000 16.680000 16.110000 15.000000 0.000000 ] xS
/F1.1[ 20 0 0 -20 0 0]sf
-101.75 25.139999 m
(ID30',*=J.,"H,=*=J.)[ 11.860000 11.120000 10.740000 6.660000 10.000000 5.560000 13.700000 11.120000 15.200000 14.440000 5.560000 11.480000 5.920000 5.560000 11.120000 13.700000 11.120000 15.200000 0.000000 ] xS
1 0 0 -1 907 569.1109 cm
/F1.1[ 30 0 0 -30 0 0]sf
-73.904999 11.080002 m
(!21A*31%')[ 26.130000 16.110000 17.790000 11.670000 20.550000 16.110000 17.790000 6.660000 0.000000 ] xS
1 J
1 j
[
20
20
] 0 d
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 1301 cm
1332 857 m
1074.8472 857.00439 l
S
0 i
CM
1060.4473 443.99539 m
1074.8473 438.59564 l
1074.8472 449.39563 l
h
1060.4473 443.99539 m
f
0 J
0 j
[] 0 d
1 0 0 -1 0 1301 cm
1060.4473 857.00464 m
1074.8473 862.40436 l
1074.8472 851.60437 l
h
1060.4473 857.00464 m
S
/Cs2 SC
0 sc
1 0 0 -1 1199 470.11093 cm
-80.904999 11.080002 m
(>/9"K3,?!*)[ 7.770000 16.680000 15.000000 17.220000 15.570000 16.110000 8.340000 19.440000 26.130000 0.000000 ] xS
1 J
1 j
[
20
20
] 0 d
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 1301 cm
180 947 m
734.10016 945.07599 l
S
0 i
CM
748.50006 355.97397 m
734.08136 361.32394 l
734.1189 350.52402 l
h
748.50006 355.97397 m
f
0 J
0 j
[] 0 d
1 0 0 -1 0 1301 cm
748.50006 945.026 m
734.08136 939.67603 l
734.1189 950.47601 l
h
748.50006 945.026 m
S
/Cs2 SC
0 sc
1 0 0 -1 461 380.11093 cm
-73.904999 11.080002 m
(!21A*31%')[ 26.130000 16.110000 17.790000 11.670000 20.550000 16.110000 17.790000 6.660000 0.000000 ] xS
1 J
1 j
[
20
20
] 0 d
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 1301 cm
756 594 m
1043.0378 593.33557 l
1043.0157 583.83557 1062.0157 583.79163 1062.0377 593.29156 c
1310.1001 592.71735 l
S
0 i
CM
1324.5 708.31598 m
1310.0875 713.68262 l
1310.1125 702.88263 l
h
1324.5 708.31598 m
f
0 J
0 j
[] 0 d
1 0 0 -1 0 1301 cm
1324.5 592.68402 m
1310.0875 587.31738 l
1310.1125 598.11737 l
h
1324.5 592.68402 m
S
1 J
1 j
[
20
20
] 0 d
0.60000002 i
756 856.91302 m
201.89993 858.30719 l
S
0 i
CM
187.49997 442.65659 m
201.91351 437.29282 l
201.88634 448.09277 l
h
187.49997 442.65659 m
f
0 J
0 j
[] 0 d
1 0 0 -1 0 1301 cm
187.49997 858.34344 m
201.91351 863.70715 l
201.88634 852.90723 l
h
187.49997 858.34344 m
S
1 J
1 j
[
20
20
] 0 d
0.60000002 i
756 943 m
1310.1 943 l
S
0 i
CM
1324.5 358 m
1310.1 363.39999 l
1310.1 352.60001 l
h
1324.5 358 m
f
0 J
0 j
[] 0 d
1 0 0 -1 0 1301 cm
1324.5 943 m
1310.1 937.59998 l
1310.1 948.40002 l
h
1324.5 943 m
S
1 J
1 j
[
20
20
] 0 d
0.60000002 i
756 448.66666 m
1030.4092 445.27631 l
S
0 i
CM
1044.8081 855.90161 m
1030.3424 861.12329 l
1030.4758 850.3241 l
h
1044.8081 855.90161 m
f
0 J
0 j
[] 0 d
1 0 0 -1 0 1301 cm
1044.8081 445.09839 m
1030.3424 439.87671 l
1030.4758 450.67587 l
h
1044.8081 445.09839 m
S
1 J
1 j
[
20
20
] 0 d
0.60000002 i
1052.4224 518.99933 m
777.89966 520.54346 l
S
0 i
CM
763.49988 780.37555 m
777.93005 775.05658 l
777.86926 785.85645 l
h
763.49988 780.37555 m
f
0 J
0 j
[] 0 d
1 0 0 -1 0 1301 cm
763.49988 520.62445 m
777.93005 525.94342 l
777.86926 515.14355 l
h
763.49988 520.62445 m
S
7 w
1 J
1 j
0.60000002 i
207.89932 1025.1937 m
728.10065 1028.8063 l
S
0 i
CM
745.70026 272.07153 m
728.14648 278.79358 l
728.05487 265.5939 l
h
745.70026 272.07153 m
f
0 J
0 j
1 0 0 -1 0 1301 cm
745.70026 1028.9285 m
728.14648 1022.2064 l
728.05487 1035.4061 l
h
745.70026 1028.9285 m
S
CM
190.29976 275.9285 m
207.8535 269.20642 l
207.94516 282.4061 l
h
190.29976 275.9285 m
f
1 0 0 -1 0 1301 cm
190.29976 1025.0715 m
207.8535 1031.7936 l
207.94516 1018.5939 l
h
190.29976 1025.0715 m
S
1 J
1 j
0.60000002 i
783.89972 1028.5375 m
1304.1003 1026.1292 l
S
0 i
CM
1321.7001 274.9523 m
1304.0697 281.47076 l
1304.1309 268.2709 l
h
1321.7001 274.9523 m
f
0 J
0 j
1 0 0 -1 0 1301 cm
1321.7001 1026.0477 m
1304.0697 1019.5292 l
1304.1309 1032.7291 l
h
1321.7001 1026.0477 m
S
CM
766.29987 272.38101 m
783.93024 265.86255 l
783.86914 279.06241 l
h
766.29987 272.38101 m
f
1 0 0 -1 0 1301 cm
766.29987 1028.619 m
783.93024 1035.1375 l
783.86914 1021.9376 l
h
766.29987 1028.619 m
S
1 J
1 j
0.60000002 i
1359.9 1027.3335 m
1592.0294 1027.3342 l
S
0 i
CM
1609.6295 273.66565 m
1592.0295 280.26572 l
1592.0294 267.0657 l
h
1609.6295 273.66565 m
f
0 J
0 j
1 0 0 -1 0 1301 cm
1609.6295 1027.3344 m
1592.0295 1020.7343 l
1592.0294 1033.9343 l
h
1609.6295 1027.3344 m
S
CM
1342.3 273.6666 m
1359.9 267.06656 l
1359.9 280.26654 l
h
1342.3 273.6666 m
f
1 0 0 -1 0 1301 cm
1342.3 1027.3334 m
1359.9 1033.9335 l
1359.9 1020.7335 l
h
1342.3 1027.3334 m
S
/Cs2 SC
0 sc
1 0 0 -1 907 295.88907 cm
-105.655 11.080002 m
(."CCD/$62&$/E)[ 21.660000 17.220000 25.590000 25.590000 16.680000 16.680000 6.660000 16.110000 16.110000 9.450000 6.660000 16.680000 0.000000 ] xS
2 w
1 J
1 j
[
16
8
2
8
] 0 d
0.60000002 i
/Cs1 SC
0.69411802 0 0.109804 sc
1 0 0 -1 0 1301 cm
1332 603 m
1332 603 1395 614.89038 1395 630 c
1395 640.76562 1363.0177 649.55853 1344.6278 653.72461 c
S
0 i
CM
1335.2318 645.33429 m
1345.3616 643.75098 l
1343.9049 650.80206 l
h
1335.2318 645.33429 m
f
0 J
0 j
[] 0 d
1 0 0 -1 0 1301 cm
1335.2318 655.66571 m
1345.3616 657.24902 l
1343.9049 650.19794 l
h
1335.2318 655.66571 m
S
/Cs2 SC
0 sc
1 0 0 -1 1468.5 666 cm
-60.5 -6.8399963 m
(@D&,?!*)[ 19.440000 16.680000 9.450000 8.340000 19.440000 26.130000 0.000000 ] xS
-60.5 29 m
($/,626<3)[ 6.660000 16.680000 8.340000 16.110000 16.110000 16.110000 16.680000 0.000000 ] xS
5 w
1 J
1 j
[
20
20
] 0 d
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 1301 cm
1052.6522 667.00208 m
777.8999 667.92633 l
S
0 i
CM
763.49994 633.02521 m
777.91803 627.67371 l
777.88171 638.47363 l
h
763.49994 633.02521 m
f
0 J
0 j
[] 0 d
1 0 0 -1 0 1301 cm
763.49994 667.97479 m
777.91803 673.32629 l
777.88171 662.52637 l
h
763.49994 667.97479 m
S
1 J
1 j
[
20
20
] 0 d
0.60000002 i
756 761 m
1043.2981 761 l
1043.2981 751.5 1062.2981 751.5 1062.2981 761 c
1310.1 761 l
S
0 i
CM
1324.5 540 m
1310.1 545.39996 l
1310.1 534.59998 l
h
1324.5 540 m
f
0 J
0 j
[] 0 d
1 0 0 -1 0 1301 cm
1324.5 761 m
1310.1 755.60004 l
1310.1 766.40002 l
h
1324.5 761 m
S
1 J
1 j
[
20
20
] 0 d
0.60000002 i
1052.9493 858.36084 m
777.89972 857.01984 l
S
0 i
CM
763.49994 444.05038 m
777.87341 438.58023 l
777.92609 449.38013 l
h
763.49994 444.05038 m
f
0 J
0 j
[] 0 d
1 0 0 -1 0 1301 cm
763.49994 856.94958 m
777.87341 862.41974 l
777.92609 851.61987 l
h
763.49994 856.94958 m
S
ep
end
%%Trailer
%%EOF
