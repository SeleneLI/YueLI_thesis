%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 2027.000000 675.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.13.3 (Build 17D47) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 2027 675
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 2027 675
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /L put
dup 34 /i put
dup 35 /s put
dup 36 /p put
dup 37 /O put
dup 38 /v put
dup 39 /e put
dup 40 /r put
dup 41 /I put
dup 42 /six put
dup 43 /m put
dup 44 /l put
dup 45 /four put
dup 46 /M put
dup 47 /a put
dup 48 /T put
dup 49 /b put
dup 50 /B put
dup 51 /c put
dup 52 /H put
dup 53 /d put
dup 54 /n put
dup 55 /g put
dup 56 /S put
dup 57 /o put
dup 58 /k put
dup 59 /t put
dup 60 /three put
dup 61 /P put
dup 62 /N put
dup 63 /f put
dup 64 /y put
dup 65 /R put
dup 66 /q put
dup 67 /u put
dup 68 /C put
dup 69 /E put
dup 70 /A put
dup 71 /D put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<










0CAA0CF20D920E2A0EC00EEE0F920FE41034105410BE10F40001000000290096000900680004000200000000001E00000200042800030001B800142B01BA0002000200162B01BF0003003E0037002B001F00130000001C2B00BF0002004A0037002B001F00130000001C2B00BA00040004001B2BB8000120457D691844B8000A2BB800002B000000
00>] def
/CharStrings 41 dict dup begin
/.notdef 0 def
/three 1 def
/four 2 def
/six 3 def
/A 4 def
/B 5 def
/C 6 def
/D 7 def
/E 8 def
/H 9 def
/I 10 def
/L 11 def
/M 12 def
/N 13 def
/O 14 def
/P 15 def
/R 16 def
/S 17 def
/T 18 def
/a 19 def
/b 20 def
/c 21 def
/d 22 def
/e 23 def
/f 24 def
/g 25 def
/i 26 def
/k 27 def
/l 28 def
/m 29 def
/n 30 def
/o 31 def
/p 32 def
/q 33 def
/r 34 def
/s 35 def
/t 36 def
/u 37 def
/v 38 def
/y 39 def
/uni2B91 40 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-951 -481 1987 1077}def
/UniqueID 4127891 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C94DE5E409528374E9E7E673E1353F43ED87BF92F553B34192352D69445B049DF4AB09101D67806CE36628C53D0EAC58B4F9F1D4A36AB015D6D9F65DB18C339D44154B041802ACBB99D9C9C286B37D7E9662DE5CC5A11F792804CE46DF0CD8B935DF691FB3D9596FCECC0D21970A7D083EAA505D5F54D76A40E096E49B293854E30D34143F4BD8A50F9D367B9CFB75ABA5BE90CA0916824ADE9BC40A297CC392C133596CC58833B20809C8A3DD22DCF4A436469315CFD915014AC089C6149E39F9F8E2069FDECC48C4B6355C32C2F667DD2D90CC6CACE8640B7A1456F2C2C1378976E380EA0AD49D36EDBD291836A14D2AE69EAAC91AC93B80D62F99C8EE540DDA487CFF31282F24C4D9CDAE93AB1F79E72AD97967436A8097EC78D4E6309283357500691DDD97AFFF90D955108BD3586E9494786A107E4203CF8A4D26D8C558C8144CF937C2B25C59C60B13110083D4F5952AFD31703CBC2E29D0C9B46D95232B5F19547D150143CCA49A71571FE1046C6A240879AEE32DA82E60FECA7C987835682D84B44BD5AA8AFD122DE48F797FCA96DBD65685DC6EEF36B94E76C505E6B3065B279DF169FB90FD85ADAD698AADBF7BD067C0306E27D84E09E7A86EC73D8263662BF59FD3E5D047E9CB935093AB1FA887B9058AABECF84C8F957A41AFB2BCFDE1A88BAB7580C2ED6D24B24BE627870D9D15DECA2957FD4E2E4D423784C98AB2520C559F043EFDFBC41B19B1CC4E18397A4BCB4CFCD9C57AE68A57745429594


443138917E484427C9485E577768EC4768BFC19C13EFDBE2B36E973F969ED588CC51235FE62B4C51BC0B3BBE95AE54B5429470754E96D0EEE7DE96A6C8B1063DFC97E04A26A0BD665EACFCEB64157FEBD9488174AD2F1EDA62475418B525E010DBB12053AE6D126A14F929AEA9630293849DF891292FFEE3CE114268D10538265399E56481671494C76A486347C7F5EEDBF2A4C9C2625F9131447410975AA6EF78B9A36FC35467F28825366BC0D6AD70274176CC165CAAF24D5F082EF0BDD955028915684DBC253662229B7217A257B9FBB19378C61F21EAF77DDD459668368BE6237845F078106D3C2FBE2B7BC48C691AE1B8D7959D9CEF7651058108BFF48071F4E0BB6FBD51A13EF27AD597A6B7EE237E065EBC12048CCB5EF0E3510D065C4D89E85C32868B7AFF6B6341C5B22B0B1660E9B71A47633D488DC9A748CC5ED656B25CABAF6F23062DD635687DB2359A8113FA142D947BEC49FD543C840A85FCDB56F4F99760ACB81509562256A1C89A28DEFFDD58E751038B5D4B3B479BCA62E2001307DB185067F17E6505F98E3FDC9CE6AB78F52103D0CE37D0449D55B1138573D73821E83A20A968890A6C7E48D914D68E5FBE2126E419E6B90BFD06D52C0B05BAD56B794F4EF044B06EC7EC9CB91761B2DB31884D5F5744A90048BD59765722739A6176E265E9D11A2DBF5647603595E03BF998D47FC3D3E7862D14DDE298D90785DC74149CF3F0C23AB1933C7BF279449CFA2DA505FA74F490BDE24663DBB0070FE2B3F4F5767771D5A573920061BC37E76BF37A8952C44A160C654C96A71F1E934208556384F8F2069D1F951C76962EF6F358F4728FF6779FC754D14CBB132BC4031984F9BEC53C75645CB5596D0E62ADC16C90AEB694FC73949EE46982A571E8126D229020E921255A084B3C81BF21AC3BDFB36F27C56A31997844F14B8123FD376ADA1FC99C5AAA583937BC5F35E98EDB6ADA9DC1AC13634B5CCFB01EEA93DB9F2A64B1CEC84F6C9ED9F15C17C09FB04395F6DDB33EC891F8E45955412D008A4B736CAFEFBA23BC4B460ED469AB654791D5BA7A59EED9B545796D41E67DEFAEB9DA22BF1DD9FAB5EF6DDF4A5CBFD180BCD9A3C606D9E031C55290FE2EB0FB3B23240E92C393F569E412BEE91EE5DF9E7CB58CD6EF9CEFBC7B74AD83EA0BD3FC26D7934099128E44CEFC11530723D7F2D9959D80E2F4123A63B1354908D58F13D23DF9C38DCB1A42FD235D3C1ED1FA3A4EEA399ED01A6D625D4CB446016A991CBCD0B49DF20634435EA9D63C6E3F2F4B3993643CFDDE5545CC7BA9DE244B11E0DF28AC63C79AA0295D765F13BE34AEC43AE4BCEBCDC9FFBDAFB5486137F8FC441E5332328092C82C5C14300B526F8A4853F6DF5BDCA36D6031F02DD9407E34D40BE4141CC505024765A7B5B826BCE60D14C47689EAAD6528DE2F9992
2DEDAA0AA2B2F0BA6E21BB52E1CDCB7E1E9D5989EBD3D22728DD5B5A4189A9C7C7AED4AB3D84DE02310BDEA58841D7F06BBEA9A2170A8444611E77F592B7031951C4F7F62A8CD2F4F5A363A3A9077A9EE660D5606FFAA40E16B4F90F7D75F4F6110A977DA885DDFE66067B4171ED5BE016EE8FC6408BFBB959FAA3FFA16ECCC26663FDF7954B0D246B584D6B21E457AC205EC6DDDF497CD2EBA8469B8AD402AABE213FD425BAE6B946B839B64A44B3BAA20301A157F29D09D02750B11DB2C34A7C19D4135927A08C9E126023C12AEAD600BA68CC2D502121D31EF1725027A91169EFB26B3954664E7DEE1C0B6632B150ED3FAB07E7EF22ACF6C6B46188B646FC9F77676E267B22AB0C79C53986DF38A790185063E80517146D6579A895BE74613DFAEA09EDF29BEFCCD6A7017C2A022A99FFB6A810E884BDC7288557A24BCDF98D10E0179D90F1F3B1A283760DA7C1B962DA32AE5B088BD146DB7004F08D93FC0AD41E3D722F53934765B05552B90838A17D035E481B1D5C408CDD9C2E15B4673EB388476797D156923B6AA62A1E214C8D3D37833A2C204FD1302B004EE046D3164F835E7E9886CEC04EEE6C1672EFCDED3CC513506B6415CEAAF0AEF2D702F791041DEE97A18A2DD324F7DBFFA0149DA1A497D2BB6D8F80A95C0A3A99B4638F8149B8052AADB2CB750C56BDE3CFF1C911F19145E6D62A1BA70303E0D54EAB03888AEC9D6664C82FF953FEC8C04D6706E6F6D105A0C12371B13CF64605E8631751AB0462BFE7777CAAD08BF3D4D63AB90E98F1A2138B1466A28CF4859342B9601DF509EF16A0CCD10CF61F0DE88CD46FF2820F0D266356CE41F80FFF73D90B5D77798123533BF6E1379ADA9EA7EB0779AFBC182AC4FAE72F3E0F4321471E01BEFAD00519E830DC1668EFCBE940948F85C81DEEAC612260F55BDDF6D052EBB8C80C0600BE2A66BB499453F5BCED3A54E90A7162DA4F18910E1DB69838759312C50E3FB040993824013A36D44C354425083BE3EF7C29BBD4AE9A4743F26117DD69FC0D3CA2079BDFB12EE6113C4029F29EEF613CE7EFFEBFF445D406B7509E54A55971FF20BC584859B59D29307C7B23F775ECAC878CFA426796E831391A41C3B44070ECA44176503BCDD6612C8A10C0EB637587F193D1402B8653350D09660C50EEC2F1D315102061F9F1839D52511DF447FD1D2E8FA72B6EB053103D732C7DAAAD9322D1241D99D0991CE51437388FC2D52E6B39D83F867893ED2C9907AEC608D924A41DF96452E1B557F11AE1FA63F9015A3E5A9FE58F03B8107A62E5043867681D25CC669DACBD8E661CADAE0B60DE0166D234F6C67A26C6A01D5ED1A8D59304DF75B27881E02EE8CA45C7EDC51E25F210CDF48328D8D7BB8152B7071477D4592F3A1B2350E388F570290E2D6D274F28CFE7B23AC204B1282F12EA48CA1911

B0FCFC750981E9405F6A7829134BE62830D9DAB463C0F03CD4C90A38B786F1E9F5F0E494B36C80E03B5EF0CFBA7A0EB709DF8D44AEDA0F819A521B526EB53959BAF784E9FCCF0994F66BABA824CAA07F3EFD4EB2EA2EB4B4865C65B653A88BA58ACC9078C1E8FE8B12C30CC9D6B44A4EA1FB6B742574DD0D0DC8A768CE9A0FBC24AEC81EC67BF1079AAF924243C9A8253984131B6F33F587F3BA002B39648728B2D255BAC88D5E3A773CD0E7A64FA4870896FFEF5C1BB9A98D02AD8854B71F4C1D45AF72BE9FA77D3B702334489DF6E05EB471F1E7CDEF0FC5A758AA8AD6CC0C499AD11401DB591F1E67919062F7147F5D1F376B7F4E451444DF8555A12963D5DD99FD310892E15D0CA1E673033C2EBFBE63DD4C5C67EA4B4A32E7507C1197FFE3190D8006D5DD6BEDD2B57E4B3CE4BDB7EC157B7BC9212ED4A8A3BB39593665ECF0247511A4F4AE85E09A233F12A3D9FAF56A041D88ED3CAB9A93837E39B1DF23B0722BCFC38E78C64B32A384B5BCA337B7CF31EC4399AA237713AC155ADAD4747532006680E21459C449942E9BD16A49721043BC5A16977D95CD3B8D16969FD63C3FBDAF60C5C117FDBCB71CA0BA650C0140FB058C836DEBE31B2D98FBA6C9067618D035EFF9042196A5C5AFE8C5B4C2E9386E141CD1FCA8CC8CB2E75FDF419ABB19BA0E76E167E04F250F778C272288FEDA505D33FB71014DD5AE3034E5A0D9940B3C871494ACF5278DB8A95DB048C9FA2F1F36085C21DFDDC444ADBB60CA2E28CD305543E55217090CA14D5A4CA4C46B34DEF82C145AC901B445FA38E95C71C2E3486B239DAE6AFCB55A91DEB924CF96FFCE7973ADC00253C6C74CDC357239E1674DE32382E050ED38661CC8D3CA90282DCB4506AB19D94676B05FE8463489981E547B1CBAC25F9339A60B125F9819834547C5C076CB91B763466B3A5F00D01F8796C9B0E29415E739DC7A1E309A41C4347DEA067DF90BDE98A387E4499C3BF2D59EB6972B43B768F32FCF78E29C29C17D2CA28548A0B4D5AE3425D0BD112158ECC1AE009FDB0EE10F4509769050360F3DEAF0F20F5AB8FF4C7FE26313B0466DF21585919CE5DB630E2E4AA3148EA168B711CAA26C257C2B77EC8814F754031D897598F3A46C612FFDE6A05DCE0D6D57465B9B1334C27FE867664F40C13DD4AA76AF0B874138D2303D465D38D031B109734FC24C1EBFA60083578967B1C614C9BC56D91AC832A993C2C73BACECAD5B9F2C8BBE3305311F5D4D812D503F26C107EF319D1D681AE59D93D8C49E606280126F5FFB2EFF501D7A6EAC338D544310BD6993351A170256EE6ED8175D9DA028D4036594A12FB780B236680345BECD65C8A2DD964C9001E98D18A632E1D3E1292F1ED151957EF8D895BA144F1FD0C0A9F80E87385CDDA4433BFDE75BA4AB29CB3F14839C7577273F96ACDE812E2667
5F4497ECB5DF755BDED96AF9D329F583832B071FA21BA3E0D81826E88C34119F331EEE245A2BE5C663CDA8416891195FB694F83FCF1383DFE80F1E14255DBAC1C7DC06F8690247256BA9ABC3096E3884B61080E19FB859B63CFBBFC10191DFA2D671607AF5A603615B56BCB5FD973503DCAAFD49AAE7ED4024C7D88436077E8EBBCE9BFCFCC988A26C6E12E5D33718ACD1BFD318E53801BA94C5BCA00FC47409D35FF65856D08596CBBCCF51AA2AD6AE92FFB58822A7934A314376673F13C16994129D17C84D3B41ADD25086F0EACBBF3EBECF65578770B1C4C1EF96E74EE65D4AC85E83D94F146EAB4426FFB7E5993AC08F3A2BE0EFC6A413BF5ADC148989C590B9425FCCEFC4B9022DA5A5E1B95E68E75C9FB1F7E84A9B7D67F4AB286064BEA97A790B4326BCE809635E7AD3
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F1.1/HelveticaNeue renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs3 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 1 1 sc
q
0 0 2027 675 rc
0 675 m
2027 675 l
2027 -156 l
0 -156 l
h
0 675 m
f
792 127 m
1001 127 l
1001 72 l
792 72 l
h
792 127 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 0 675 cm
792 548 m
1001 548 l
1001 603 l
792 603 l
h
792 548 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 896.5 99.5 cm
/F1.1[ 20 0 0 -20 0 0]sf
-78.360001 7.2200012 m
(!"#$%&'\(\)$&*\)+$,)[ 11.120000 4.440000 10.000000 11.860000 15.200000 10.000000 10.740000 6.660000 5.180000 11.860000 10.000000 11.120000 5.180000 17.060000 11.860000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
1033 127 m
1242 127 l
1242 72 l
1033 72 l
h
1033 127 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 0 675 cm
1033 548 m
1242 548 l
1242 603 l
1033 603 l
h
1033 548 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 1137.5 99.5 cm
-78.360001 7.2200012 m
(!"#$%&'\(\)$&-\)+$,)[ 11.120000 4.440000 10.000000 11.860000 15.200000 10.000000 10.740000 6.660000 5.180000 11.860000 10.000000 11.120000 5.180000 17.060000 11.860000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
1033 271 m
1242 271 l
1242 216 l
1033 216 l
h
1033 271 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 0 675 cm
1033 404 m
1242 404 l
1242 459 l
1033 459 l
h
1033 404 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 1137.5 243.5 cm
-59.09 7.2200012 m
(!"#$%&'\(\)$&-)[ 11.120000 4.440000 10.000000 11.860000 15.200000 10.000000 10.740000 6.660000 5.180000 11.860000 10.000000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
792 271 m
1001 271 l
1001 216 l
792 216 l
h
792 271 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 0 675 cm
792 404 m
1001 404 l
1001 459 l
792 459 l
h
792 404 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 896.5 243.5 cm
-59.09 7.2200012 m
(!"#$%&'\(\)$&*)[ 11.120000 4.440000 10.000000 11.860000 15.200000 10.000000 10.740000 6.660000 5.180000 11.860000 10.000000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
918 415 m
1127 415 l
1127 360 l
918 360 l
h
918 415 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 0 675 cm
918 260 m
1127 260 l
1127 315 l
918 315 l
h
918 260 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 1022.5 387.5 cm
-48.529999 7.2200012 m
(!"#$%&'\(\)$)[ 11.120000 4.440000 10.000000 11.860000 15.200000 10.000000 10.740000 6.660000 5.180000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 675 cm
896.5 548 m
896.5 468.89999 l
S
0 J
0 j
0 i
896.5 460.89999 m
893.5 468.89999 l
899.5 468.89999 l
h
896.5 460.89999 m
S
1 J
1 j
0.60000002 i
1137.5 548 m
1137.5 468.89999 l
S
0 J
0 j
0 i
1137.5 460.89999 m
1134.5 468.89999 l
1140.5 468.89999 l
h
1137.5 460.89999 m
S
1 J
1 j
0.60000002 i
920.5625 404 m
991.91827 322.4505 l
S
0 J
0 j
0 i
997.18634 316.4299 m
989.66058 320.47501 l
994.17603 324.42603 l
h
997.18634 316.4299 m
S
1 J
1 j
0.60000002 i
1115.5382 404 m
1050.6398 322.73584 l
S
0 J
0 j
0 i
1045.6475 316.48465 m
1048.2955 324.60794 l
1052.9839 320.86374 l
h
1045.6475 316.48465 m
S
1 1 1 sc
CM
1269 415 m
1478 415 l
1478 360 l
1269 360 l
h
1269 415 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 0 675 cm
1269 260 m
1478 260 l
1478 315 l
1269 315 l
h
1269 260 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 1373.5 387.5 cm
-43.529999 7.2200012 m
(./$0/1,')[ 17.420000 10.740000 11.860000 9.260000 10.740000 11.860000 4.440000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
1269 271 m
1478 271 l
1478 216 l
1269 216 l
h
1269 271 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 0 675 cm
1269 404 m
1478 404 l
1478 459 l
1269 459 l
h
1269 404 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 1373.5 243.5 cm
-68.339996 7.2200012 m
(2/#"3./$0/1,')[ 13.700000 10.740000 10.000000 4.440000 10.740000 17.420000 10.740000 11.860000 9.260000 10.740000 11.860000 4.440000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 675 cm
1373.5 404 m
1373.5 324.89999 l
S
0 J
0 j
0 i
1373.5 316.89999 m
1370.5 324.89999 l
1376.5 324.89999 l
h
1373.5 316.89999 m
S
1 1 1 sc
CM
63 127 m
272 127 l
272 72 l
63 72 l
h
63 127 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 0 675 cm
63 548 m
272 548 l
272 603 l
63 603 l
h
63 548 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 167.5 99.5 cm
-51.299999 7.2200012 m
(!"#$4'/5'\()[ 11.120000 4.440000 10.000000 11.860000 14.440000 10.740000 10.740000 11.860000 10.740000 0.000000 ] xS
/Cs3 SC
0.80000001 0.80000001 0.80000001 sc
CM
333 271 m
542 271 l
542 216 l
333 216 l
h
333 271 m
f
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 675 cm
333 404 m
542 404 l
542 459 l
333 459 l
h
333 404 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 437.5 243.5 cm
-32.59 7.2200012 m
(4'/5'\()[ 14.440000 10.740000 10.740000 11.860000 10.740000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
594 127 m
758 127 l
758 72 l
594 72 l
h
594 127 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 0 675 cm
594 548 m
758 548 l
758 603 l
594 603 l
h
594 548 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 676 99.5 cm
-70.760002 -4.5599976 m
(./$$"67893:';)[ 17.420000 10.740000 11.860000 11.860000 4.440000 11.120000 11.480000 12.960000 11.480000 10.740000 10.380000 10.740000 0.000000 ] xS
-52.040001 19 m
(.#74'/5'\()[ 17.420000 10.000000 11.480000 14.440000 10.740000 10.740000 11.860000 10.740000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 675 cm
219.0625 548 m
377.20221 463.65881 l
S
0 J
0 j
0 i
384.26102 459.8941 m
375.79044 461.01178 l
378.61398 466.30588 l
h
384.26102 459.8941 m
S
1 J
1 j
0.60000002 i
630.45312 548 m
491.52191 464.117 l
S
0 J
0 j
0 i
484.6734 459.98206 m
489.97131 466.68521 l
493.07251 461.5488 l
h
484.6734 459.98206 m
S
/Cs3 SC
0.80000001 0.80000001 0.80000001 sc
CM
630 415 m
839 415 l
839 360 l
630 360 l
h
630 415 m
f
1 J
1 j
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 675 cm
630 260 m
839 260 l
839 315 l
630 315 l
h
630 260 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 734.5 387.5 cm
-67.790001 7.2200012 m
(\)$&-!<=\(9;939,)[ 5.180000 11.860000 10.000000 11.120000 11.120000 11.120000 12.960000 6.300000 11.480000 6.300000 11.480000 10.740000 11.480000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 675 cm
839 287.5 m
908.09998 287.5 l
S
0 i
CM
916.09998 387.5 m
908.09998 390.5 l
908.09998 384.5 l
h
916.09998 387.5 m
f
0 J
0 j
1 0 0 -1 0 675 cm
916.09998 287.5 m
908.09998 284.5 l
908.09998 290.5 l
h
916.09998 287.5 m
S
1 J
1 j
0.60000002 i
1127 287.5 m
1259.1 287.5 l
S
0 i
CM
1267.1 387.5 m
1259.1 390.5 l
1259.1 384.5 l
h
1267.1 387.5 m
f
0 J
0 j
1 0 0 -1 0 675 cm
1267.1 287.5 m
1259.1 284.5 l
1259.1 290.5 l
h
1267.1 287.5 m
S
1 1 1 sc
CM
1746 477 m
1955 477 l
1955 422 l
1746 422 l
h
1746 477 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 0 675 cm
1746 198 m
1955 198 l
1955 253 l
1746 253 l
h
1746 198 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 1850.5 449.5 cm
-65.75 7.2200012 m
(./$>9;"?@.#7)[ 17.420000 10.740000 11.860000 14.440000 11.480000 6.300000 4.440000 5.920000 10.000000 17.420000 10.000000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
1746 360 m
1955 360 l
1955 305 l
1746 305 l
h
1746 360 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 0 675 cm
1746 315 m
1955 315 l
1955 370 l
1746 370 l
h
1746 315 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 1850.5 332.5 cm
-76.489998 7.2200012 m
(./$A'7"#;'\(.#7)[ 17.420000 10.740000 11.860000 13.700000 10.740000 11.480000 4.440000 10.000000 6.300000 10.740000 6.660000 17.420000 10.000000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
1746 243 m
1955 243 l
1955 188 l
1746 188 l
h
1746 243 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 0 675 cm
1746 432 m
1955 432 l
1955 487 l
1746 487 l
h
1746 432 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 1850.5 215.5 cm
-76.690002 7.2200012 m
(./$A'BC'#;.#7)[ 17.420000 10.740000 11.860000 13.700000 10.740000 11.860000 11.120000 10.740000 10.000000 6.300000 17.420000 10.000000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
1746 127 m
1955 127 l
1955 72 l
1746 72 l
h
1746 127 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 0 675 cm
1746 548 m
1955 548 l
1955 603 l
1746 603 l
h
1746 548 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 1850.5 99.5 cm
-64.830002 7.2200012 m
(./$A'$,@.#7)[ 17.420000 10.740000 11.860000 13.700000 10.740000 11.860000 4.440000 10.000000 17.420000 10.000000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
1458 558 m
1667 558 l
1667 503 l
1458 503 l
h
1458 558 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 0 675 cm
1458 117 m
1667 117 l
1667 172 l
1458 172 l
h
1458 117 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 1562.5 530.5 cm
-70.940002 7.2200012 m
(!"#$D96;\(9,.#7)[ 11.120000 4.440000 10.000000 11.860000 14.440000 11.480000 11.120000 6.300000 6.300000 11.480000 4.440000 17.420000 10.000000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
315 127 m
558 127 l
558 72 l
315 72 l
h
315 127 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 0 675 cm
315 548 m
558 548 l
558 603 l
315 603 l
h
315 548 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 436.5 99.5 cm
-112.43 -4.5599976 m
(!"#$E63/$#C,/;'5D96;\(9,)[ 11.120000 4.440000 10.000000 11.860000 12.220000 11.120000 10.740000 10.740000 11.860000 10.000000 11.120000 4.440000 10.740000 6.300000 10.740000 11.860000 14.440000 11.480000 11.120000 6.300000 6.300000 11.480000 0.000000 ] xS
-52.040001 19 m
(.#74'/5'\()[ 17.420000 10.000000 11.480000 14.440000 10.740000 10.740000 11.860000 10.740000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 675 cm
436.69098 548 m
437.24026 468.89975 l
S
0 J
0 j
0 i
437.29584 460.89996 m
434.24036 468.87894 l
440.2402 468.92059 l
h
437.29584 460.89996 m
S
1 1 1 sc
CM
414 559 m
623 559 l
623 504 l
414 504 l
h
414 559 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 0 675 cm
414 116 m
623 116 l
623 171 l
414 171 l
h
414 116 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 518.5 531.5 cm
-90.559998 7.2200012 m
(!"#$E;\(\);\(F$$,"3/;"96)[ 11.120000 4.440000 10.000000 11.860000 12.220000 6.300000 6.660000 5.180000 6.300000 6.660000 12.960000 11.860000 11.860000 4.440000 4.440000 10.740000 10.740000 6.300000 4.440000 11.480000 0.000000 ] xS
/Cs3 SC
0.80000001 0.80000001 0.80000001 sc
CM
54 559 m
263 559 l
263 504 l
54 504 l
h
54 559 m
f
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 675 cm
54 116 m
263 116 l
263 171 l
54 171 l
h
54 116 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 158.5 531.5 cm
-50.189999 7.2200012 m
(F$$,"3/;"96)[ 12.960000 11.860000 11.860000 4.440000 4.440000 10.740000 10.740000 6.300000 4.440000 11.480000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 675 cm
414 143.5 m
272.89999 143.5 l
S
0 J
0 j
0 i
264.89999 143.5 m
272.89999 146.5 l
272.89999 140.5 l
h
264.89999 143.5 m
S
1 1 1 sc
CM
54 415 m
263 415 l
263 360 l
54 360 l
h
54 415 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 0 675 cm
54 260 m
263 260 l
263 315 l
54 315 l
h
54 260 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 158.5 387.5 cm
-48.889999 7.2200012 m
(./$8'\(&'\()[ 17.420000 10.740000 11.860000 12.960000 10.740000 6.660000 10.000000 10.740000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
342 415 m
551 415 l
551 360 l
342 360 l
h
342 415 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 0 675 cm
342 260 m
551 260 l
551 315 l
342 315 l
h
342 260 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 446.5 387.5 cm
-58.889999 7.2200012 m
(./$A'#9,&'\()[ 17.420000 10.740000 11.860000 13.700000 10.740000 10.000000 11.480000 4.440000 10.000000 10.740000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 675 cm
158.5 260 m
158.5 180.89999 l
S
0 J
0 j
0 i
158.5 172.89999 m
155.5 180.89999 l
161.5 180.89999 l
h
158.5 172.89999 m
S
1 J
1 j
0.60000002 i
391.5 260 m
222.35483 175.42741 l
S
0 J
0 j
0 i
215.19942 171.8497 m
221.01318 178.1107 l
223.69647 172.74414 l
h
215.19942 171.8497 m
S
/Cs3 SC
0.80000001 0.80000001 0.80000001 sc
CM
774 559 m
983 559 l
983 504 l
774 504 l
h
774 559 m
f
1 J
1 j
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 675 cm
774 116 m
983 116 l
983 171 l
774 171 l
h
774 116 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 878.5 531.5 cm
-31.299999 7.2200012 m
(893:';)[ 12.960000 11.480000 10.740000 10.380000 10.740000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
1134 559 m
1343 559 l
1343 504 l
1134 504 l
h
1134 559 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 0 675 cm
1134 116 m
1343 116 l
1343 171 l
1134 171 l
h
1134 116 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 1238.5 531.5 cm
-89.470001 7.2200012 m
(!"#$./$$"67893:';)[ 11.120000 4.440000 10.000000 11.860000 17.420000 10.740000 11.860000 11.860000 4.440000 11.120000 11.480000 12.960000 11.480000 10.740000 10.380000 10.740000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 675 cm
1134 143.5 m
992.90002 143.5 l
S
0 i
CM
984.90002 531.5 m
992.90002 528.5 l
992.90002 534.5 l
h
984.90002 531.5 m
f
0 J
0 j
1 0 0 -1 0 675 cm
984.90002 143.5 m
992.90002 146.5 l
992.90002 140.5 l
h
984.90002 143.5 m
S
1 J
1 j
0.60000002 i
623 143.5 m
764.09998 143.5 l
S
0 i
CM
772.09998 531.5 m
764.09998 534.5 l
764.09998 528.5 l
h
772.09998 531.5 m
f
0 J
0 j
1 0 0 -1 0 675 cm
772.09998 143.5 m
764.09998 140.5 l
764.09998 146.5 l
h
772.09998 143.5 m
S
1 J
1 j
0.60000002 i
522 171 m
522 216 l
1314 216 l
1373.5 216 l
1373.5 250.10001 l
S
0 i
CM
1373.5 416.89999 m
1376.5 424.89999 l
1370.5 424.89999 l
h
1373.5 416.89999 m
f
0 J
0 j
1 0 0 -1 0 675 cm
1373.5 258.10001 m
1376.5 250.10001 l
1370.5 250.10001 l
h
1373.5 258.10001 m
S
1 J
1 j
0.60000002 i
1557 181.89999 m
1557 279 l
1557 342.5 l
1746 342.5 l
S
0 i
CM
1557 501.10001 m
1554 493.10001 l
1560 493.10001 l
h
1557 501.10001 m
f
0 J
0 j
1 0 0 -1 0 675 cm
1557 173.89999 m
1554 181.89999 l
1560 181.89999 l
h
1557 173.89999 m
S
1 J
1 j
0.60000002 i
1557 181.89999 m
1557 432 l
1557 459.5 l
1746 459.5 l
S
0 i
CM
1557 501.10001 m
1554 493.10001 l
1560 493.10001 l
h
1557 501.10001 m
f
0 J
0 j
1 0 0 -1 0 675 cm
1557 173.89999 m
1554 181.89999 l
1560 181.89999 l
h
1557 173.89999 m
S
1 J
1 j
0.60000002 i
1557 181.89999 m
1557 576 l
1746 575.67804 l
S
0 i
CM
1557 501.10001 m
1554 493.10001 l
1560 493.10001 l
h
1557 501.10001 m
f
0 J
0 j
1 0 0 -1 0 675 cm
1557 173.89999 m
1554 181.89999 l
1560 181.89999 l
h
1557 173.89999 m
S
1 1 1 sc
CM
54 271 m
263 271 l
263 216 l
54 216 l
h
54 271 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 0 675 cm
54 404 m
263 404 l
263 459 l
54 459 l
h
54 404 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 158.5 243.5 cm
-65.010002 7.2200012 m
(./$8'\(&'\(G5;)[ 17.420000 10.740000 11.860000 12.960000 10.740000 6.660000 10.000000 10.740000 6.660000 14.080000 11.860000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 675 cm
158.5 404 m
158.5 324.89999 l
S
0 i
CM
158.5 358.10001 m
155.5 350.10001 l
161.5 350.10001 l
h
158.5 358.10001 m
f
0 J
0 j
1 0 0 -1 0 675 cm
158.5 316.89999 m
155.5 324.89999 l
161.5 324.89999 l
h
158.5 316.89999 m
S
1 J
1 j
0.60000002 i
1676.9 135 m
1845 135 l
1850.5 135 l
1850.5 198 l
S
0 i
CM
1668.9 540 m
1676.9 537 l
1676.9 543 l
h
1668.9 540 m
f
0 J
0 j
1 0 0 -1 0 675 cm
1668.9 135 m
1676.9 138 l
1676.9 132 l
h
1668.9 135 m
S
ep
end
%%Trailer
%%EOF
