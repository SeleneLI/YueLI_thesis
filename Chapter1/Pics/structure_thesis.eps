%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 2115.000000 1080.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.13.3 (Build 17D47) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 2115 1080
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 2115 1080
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue-Bold
%!FontType1-1.0: HelveticaNeue-Bold 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue-Bold def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /C put
dup 34 /h put
dup 35 /a put
dup 36 /p put
dup 37 /t put
dup 38 /e put
dup 39 /r put
dup 40 /space put
dup 41 /two put
dup 42 /three put
dup 43 /five put
dup 44 /seven put
dup 45 /six put
dup 46 /four put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -1018 1 index div -481 2 index div 1437 3 index div 1141 5 -1 roll div]cvx def
/sfnts [<
74727565000900000000000063767420000000000000009C000000386670676D00000000000000D400000428676C796600000000000004FC00000C74686561640000000000001170000000366868656100000000000011A800000024686D747800000000000011CC000000446C6F63610000000000001210000000246D617870000000000000123400000020707265700000000000001254000000FB14006D0085008D009C00000010004BFF0E0005020E00CA02110000140074006B0084008E007F009D00000011FF4A000D0205000E02CA0011B800002C4BB800095058B101018E59B801FF85B844001DB9000900035F5E2DB800012C2020456944B001602DB800022CB800012A212DB800032C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB800042C2046B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB800052C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB800062C2020456944B001602020457D691844B001602DB800072CB800062A2DB800082C4B20B003265358B0801BB040598A8A20B003265358B0022621B0C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B80003265358B0032545B8014050582321B8014023211BB003254523212321591B2159442DB800092C4B535845441B2121592DB8000A2C4BB800095058B101018E59B801FF85B800441DB9000900035F5E2DB8000B2C2020456944B001602DB8000C2CB8000B2A212DB8000D2C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB8000E2C2046B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB8000F2C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB800102C2020456944B001602020457D691844B001602DB800112CB800102A2DB800122C4B20B003265358B0801BB040598A8A20B0032653582321B0C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B0032653582321B801408A8A1B8A235920B80003265358B0032545B8018050582321B8018023211BB003254523212321591B2159442DB800132C4B535845441B2121592DB800142C4BB800095058B101018E59B801FF85B800441DB9000900035F5E2DB800152C2020456944B001602DB800162CB800152A212DB800172C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821




00>] def
/CharStrings 17 dict dup begin
/.notdef 0 def
/space 1 def
/two 2 def
/three 3 def
/four 4 def
/five 5 def
/six 6 def
/seven 7 def
/C 8 def
/a 9 def
/e 10 def
/h 11 def
/p 12 def
/r 13 def
/t 14 def
/uni2B90 15 def
/uni2B91 16 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-1018 -481 1437 1141}def
/UniqueID 4174458 def
currentdict currentfile eexec

B734BFC7FD95B26163E540C644F6886E01BC9300EB6E62958EB174A8A3A845F95892B7054EE97C18136B8CE943D7415F72769B04BB522ADB3A61E0946297C623F3641522F8C64E1564B3BB0F672E1F698E714290D910A27C71147FC6B008D169895DB275906FB6CFA7EA3890E11EB9C2FCD4062D04411E8C60DDA5D59B82FE99764EB16DB2FB8F17D92E3104CAE08BDEC618A32F69E0C86C8C8A9F126E1CA5DA6EC101DC5BF22831C28F4C032A816094F996C2DFFF7BA98C654E279609DE2F6C04B70062A99A9A969994642E90A5B5BB20938B56A530E62B8DF3DE474D6F322E8420FBB1582AD8D1ECA4C74A24E4353D4EB21C04325A68E32D1A866A5FC0478690C2E36FF26FCEB6F29D37BF252CEB38F7E5F0A96F933B936312DE2537E00C0BE2395A67AEDBE6FA2A0C70231A51F3E25BEDBD0B24FC9074EBE53D9B1D9D294E8B2387824957EE7BCB680EA6E62C02D00FF5268F1552A42AC55F8E37B6FAA03785A45BD4A8AE2029D6979DB41F8BB4077B030D647860C986C36678D1F9F4518F1502105D8D40C5062FA6E7392812DAC9BCACA98D083388DECE4215AAC821AD8A5E1BC8D7D06298AD6F574A3B317931F3C2581ADDE8751C16B40EC3C340EE6D0B546E6DE03F5145151302AF1148A8EA95B6EEFF78C095D43EBA3CC903FCB984CDB859E4127F4356804F2854C4D460A7C55AF487E60B4B71BAB09BB683F5F0071624D53F946208D14DBFD1EEE62811C9B0BEB99D494DB16FDF5A7EB407A9596E724FD3C2CC8D4C8DC77759132E46EFD57F0F64AB4B69BBAFB3D155B96DDED6ABEA6C2AFA36C20F88F527FEABD01137A5863F133D414ACC6301609DF6B75AF4CD8AE03556E8A795AE5BDA8EB7C2C86779FF49C7A376EE7ACF17FAAC1CE608EAF30531A8DAFA47FDEB11E725F4307D6A7431B925E5F75D61A7398DA67821CB59FB8DDF1BB2A99E276841F78659E860A4BDDA8C76499E0C44417FA10B2399BA78BC4FFDA62FDE08CEE929B36F304D12770DFCEB55CB296D53E66005CC703A2E7BE87227C9FC73D2D9154786224573A143068616B4F1DA011D19A0FD306E2E7911F0592DB126BF333FCC29EAE04037D82A7BCEFF7B9AD9A3F54C8A337FFF5552113D2709745EF56461BA371B3C7437FD7965812192410B0D97C7E5FDCA941C0F987BA69946C4758BE02B504355BA7507990979463AC888AA39ED71CC804E4978FA284569659B937BFE147884000A2C04608CDF8A94D0DE95B23E7A4DB6CD4F495218013B64F2885BB56E69DA9F2FBD69235DFEB4AD937A345A2603BC99BF91B723AC2C231848FD8913E826350077AADC556C2A5CE2752D28468D4D9668F4BC79F202B5C88875B2C909EEBBD787601B614A3C8BC45FD6C14BA7E8211F973171AD62D492F1B3C3A723F368A232DF4ED2D72CB792622ABC86C206AD86796B89CD14B6B860
BE4812214CACDB3DEBC80FA58AA7ECF36FCA90DC3AC426594FE378A962BE23BFA941F14B38F4F4968D4C2D8BCE728BB0D53711002344618887BC910B691357B5029987FDC775826F7F0A33A70EA25109044661CEA5D6E173DA6151FC98F82CA156784F8146AC6A033B396C4FD007D96F10E576F6004B36B4A42D681683DD7B19405F4EB9570C3B5875733B076FBA66AFC29B29504CEEDBEC5DEB4B4805FD7E536E43C4618126C97601136A654698279BE5165F694DB3B32E155CEBA39FB73A704C3D576B2D006AFE2E549E9EDDC6A0BB3CADF4BAC12E84FA54F052E28BF1FCD68FFE597AB24BC264D47B01F45744B25B8A945D1482191ECB740070AB7BFCA2578060106E142548A0ABB3955363E0DA634081F1596B786D787FD837F82CEFF622BBF6666D63DCBFF95FF3DF5FC29C3DCBEFEFEC8B1C1BAE74EF8A9C94DF2483F3C65BC00D0235952DA229F27965C0956829480852922D866F02ED8AE5B2573001C2C8F51741F964E2B0B773EDCF440086FFF2ECF73497769D74D2170724EE4003A2C687C2C0337DB1F6638CB4F509F560C2AB52621D67351737269625ECDD2A120E737C8482E480FE6E1CB1397F5A5087FBA8770105CB4014B7D23346BE05EDDBD3BA692A55BFCBEEB19EFAA5385CDA9BE1302FEBDE55D2A13ABD84E76EDFB9E9B9B23CC60C28BEF8D00D656FA9539C34CD02F61C5D24646897C0F7675C1BFF7A01F3755AC9264FA0029AF57B633CC6E6C9CE865B5C615DDA76457E96687884FE8932961BA9BB168110B570EBE7A93B4E630A00082141417C1A29AEDCE9CCD2C1B73641E6CDA6018B5DEBD3BE0FE66B91ADB8B181553D24F7E1059D7CF3342EB8F4516F20F29C2D90A6D44F0A0587C59D31DA58094E24E05FEF688A5C1F57D9A0FBFD25A427963A5D4E9F3D28F889023349C68DB9604396702206593E978664A06EEE8063F9320442F0DB11CD9CEA79742435EB235F40DDF17BA390F71C47394BD8300EDCE074650D4DAEF9B8FD346CA1E129FA22D57BB25B67775361E0344E13103EC391747EC5393F1932B2FF91036A1E700DB0AD08CCB6B203FEF84FF0156A408645E882CCB00937D0B6518DAE537CBC1FEA6CB00703057722C626F49BC2ECC2BC6C6E60449FEE67F7EEDB779817E296848A31EF37EEE2C6EA05054DDBAF60D419067C605A8358D05EAC1B3F29FF0025CF26B32E1916F64F1C03ECDDC2CFE7ED4F6A2931C7C4C9EF4A6B510CB03322C9674B2F563C8CCAF8BB0D8D2F98F75625C821B9511C3912B4B8219F8598329D91B5357F8C09A680774029CCDEC50B10DB0C63DDA30F513841AF8B2A04858C2672AE4AAA70989C5A892292A7B690097C54ACA5067065C222B0926017F60F25BD2497EF57E9CBCBBC1D8B385CC2F0C9A6F6AD6D46BC26D340342A3B5432CC721D0CE3786CD169298E91E30579CD0889BA
BAB3F81266E47043EB5DDC0D23C1B8DCA8FC245F1B7F6ED211DDF5DB6F558CE1255C648F5D0971FA20ABD71A5BB9B9B492520CCA711596E8B0C928B31E8FEEA5DAC951161477735C68041F3495D6E09964941BC0CEC72BCF114114047AF14713F42723842E09314D390ABFF50CDC4296251ABB2AF13F8661D2EE2E0FE3735ADBEC40A16A93118BFD932FBDD2C14E61BCB7969BB6E940B67110970096727067C89958F5265F87B89D0917D0464C6BE54359936F15010D5D9B73EC948AA77C79D1B2868F3B9595197DD83E82FF29D642E541CC2E9723479005E5881D8D170614EC70D32A5A8D02F68F89771CD0BAE7BCF70F6E55CACFCDB46073183A9527CBAE9EBBE08F09EF633560DF8C5EB814E6E032EEBB253E4F8ED264D1EA0697A171F3AF15428639FFE34FACDEA3A1290CE5E35257E5023E083495019B7162ED41DB4A1FC94F0E726F4E6157CA510A323DEF1C3351BFBE44FB966728D0B5736DB70C0611C3FFA95FB2CC674D4030BD6B5167D8E8B55AE0FDF879812F14C56C7856BC5B6CFB706C8E5B442CBB962F709734F9069545D866E69AB11BB0A2CD78F18ACB991C255E3112139AB01116ACFFD40B990A7FDE1C5E0B9D57BF01D073EFB7518876D2C098669F4CF2A7AC44BA0098E2FE6F467788EE2D4D27E0A1B2628DA2056F660C6CB45DE7A0701CCC7708F2A623A7285628EFD902B409E98AB2E5579BE263F8D782430F004F04B2515BC1187013FA72EDA8587BEEF56C461DF8B674407A5B244EE049C6B6D95AE9F0FE588A06C68F8888D17D2467C1BE87A43099
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue-Bold cguidfix
/F1.1/HelveticaNeue-Bold renmfont
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /L put
dup 34 /I put
dup 35 /S put
dup 36 /P put
dup 37 /space put
dup 38 /A put
dup 39 /r put
dup 40 /c put
dup 41 /h put
dup 42 /i put
dup 43 /t put
dup 44 /e put
dup 45 /u put
dup 46 /R put
dup 47 /l put
dup 48 /a put
dup 49 /d put
dup 50 /W put
dup 51 /o put
dup 52 /k put
dup 53 /f put
dup 54 /m put
dup 55 /s put
dup 56 /C put
dup 57 /n put
dup 58 /g put
dup 59 /p put
dup 60 /U put
dup 61 /hyphen put
dup 62 /V put
dup 63 /w put
dup 64 /colon put
dup 65 /M put
dup 66 /y put
dup 67 /b put
dup 68 /ampersand put
dup 69 /x put
dup 70 /three put
dup 71 /E put
dup 72 /v put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<










00>] def
/CharStrings 42 dict dup begin
/.notdef 0 def
/space 1 def
/ampersand 2 def
/hyphen 3 def
/three 4 def
/colon 5 def
/A 6 def
/C 7 def
/E 8 def
/I 9 def
/L 10 def
/M 11 def
/P 12 def
/R 13 def
/S 14 def
/U 15 def
/V 16 def
/W 17 def
/a 18 def
/b 19 def
/c 20 def
/d 21 def
/e 22 def
/f 23 def
/g 24 def
/h 25 def
/i 26 def
/k 27 def
/l 28 def
/m 29 def
/n 30 def
/o 31 def
/p 32 def
/r 33 def
/s 34 def
/t 35 def
/u 36 def
/v 37 def
/w 38 def
/x 39 def
/y 40 def
/uni2B91 41 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-951 -481 1987 1077}def
/UniqueID 4127891 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C94DD8F68E7C9E6CE89571C79E22E977A5B42C931CC2176483889C4D7E8F08AD6A30D32F921F086F068997EEAC13FC5D4DB04433304F20EAF4CDEBFCC059713B591D123A2CB5C04D69A6F57D3F0C7D8146F138B1F7AD227781281AC46E7984398322682323445F258F303A6DF35BB941F3BC55786921CF653E57772293B0BB5F1AED0736ADBE82DAF0BC6D3FBD91FE12F0987691168280286675315DE87CFEE2245CD0938552459224CCE4E9D6A0A8FA637313C5EB8897B4CB74646BAC5C6ECF8B993F7AE6A65BF18304204A92AFF764629EEEA8159DF2663018B6A3548F790515C331DCAC006389C09840E365369A9A0C64E5656E12BB4987278EB4CCE3E1F5EE6C26F969FED0BA7FA59B2FC16496691CC14E6F6892D22B8B226286CD16C7F5979D9FE1B7AE1FACEB5D37A9D59C484396CBB15649545EFF1639DDD4EB63EE6AC50AEDE81084D09956C08110F9C2E74BB36B3C619593F2D64E36AE36D68A81797A449A14372446C5DE818DCE63887AA82E0FE9F02F801ADCC3D62F94C4D11003DC7925375F8F63049D10436A7C1C1B978D0D959CC9FFD00858DACD9E081E0900BBE37B8C1226A811D26DB497EAC694304DCD0D3D0DB8A30C6CAC435120A1C59CD3B6D6F5A7EEEE482155AA7C0B75225A11C2F60184703E6389FA3988F3E1E537528899F769DB3F8D69304D95A9902AA95EA48398C3945914018B64DFF8E66D503DB2509EDF777BBEB119139A823FEFD62E0B94A0C67B268F39975AFA4CBA4331762
DDCFFF5B01EF2061683FD55D9B6460B8698C0DE260E2C301348A2AECDFF34E5058745FD011384B41091CA3049AD732D76DA091232BD2132FA50363107C892FA22D8DC31AF409D121CFE8C8D0AC0B7AB68331E3886B6516DD485DB3DE996F69E0238EAB92F5F5C1E73E677700A596AAB5077660F072FA1E00DBFB25937B12EA6CA398D085E38193A89AF989956A8A710743F28B26ABEAD73AB43E9D3D99215DE80856A0F70B0D3BA35CAEDF93B86CA2ADC3939E139B314C2A7E16F0E6FD9BFA1A7D70E4C6ED8340594B88DA062815C083F38B3F844470C68067F62F1579ACD09D1CC8E75CEEA267A85FAA63AE0E33CC697BAA74EC06D8EB87974FD4F938564166FDA1A221BC5B18733979DE08A510565E20C0C3F26522746B285EF588467F6E7BC58372AD187850C45C539D23B776BFB8EC7EFFEACDCBADAA6D9303596FEB40B33F10DF990D87F3026B209D0C79F12D501C905F645DAC267616006909201947338AF8545595E77F53B628EEF286D9B9A904A1BB746BAB9A196009A81AC079FA7DFFE88BC7A1AEE0CDFBA2D279CBE4FA106576BCEA9128A0160EC21EE62BF5C443DECE3C3791432E4AA2CCBD49220662D98F10D7BF6FD83E212C25419A84C4A9BECF5FA3E3A4DDDBCB30F5AE5513FA67D136E1A75FCD1FD91FE7A7C7A43B20EF7AE73375EDF235EE2FFA1B7898834AD861C88DC4239922B36F9EF0C83AC12723505DC43CB293B2AC25B6B6694B0CC49788B511345A33420074EC44B26C1DCFDED392ACF6C1553EA92C3F11654F704B33327FBCBF7C9A84460CD686B389F0DED1DBD870C5FA1E6FA8AD9EA1DEEE9F0815E9123DA171CBE40B30E05D25F514E3B459A958D23606B8B513714D86733EFA27604783266B1BB872E292CF9D1CAA6B0D58754455E470268C8DC46E56AFDA80FCF03D5378940CCC299318C1A1670DC33075F7760CF0A9F8044F957078EE401F2817E7A9DA2E31CF31FBD318E7D23ABB461A855EF1AE5FA3D8B03FBA69BF33E7C5D156BCE8AD8323027595BAABD1EBFFC58AF077EF22D31BC917B9A66E1602697BCDEAFD8BE9876E4A6FB1CF7CE542DEDB23266038E5D5896F65C909AC17786C480E8A9891B50B697275A5179AAE9350025F7B907B1BF5E4DC5146C6356BECDD12038E8DC378ACE32D4774FFB59FCC7121ACC2394520B822110A64005226F8B8F34E5088268DF5A9C63782EAE445E2A4C9A7DFE57ACDD25549EBB1CCE5B44509EEE5B1562F37E7A53074677EDC26C5284B43079C3C182DB64CF1166C54041A5F8653F51F4AA4CF96383C21CBEDDF822B3E4DA91B52B2944ACBB37408209664487EE37DB3783D0E4961E45732A7556DEA94B6C4C2E5D63952655FEC817670F82411A24EDAA13B6244AD0E8B52BFF04A0D6AA9F0D88AB57810C4C8FC98FC80ECE4C793A94EF02F2ECF054C8F38B77426E83872


EC99690E1A024651690183E3D484B2CC7643D046D4C706A585DB21720B802724DD866428A8D1159CAA4C2F0797A63B9DA48C36637941E512B9CD217F1EE2E5A6D66099CB58BC78E4EA4B4C0A3E55ECE40A174479CD8BA9B456C6668EC9742A6FC263EC52FBA81B66682090978D1473A727E958AA047C77DBA60776CC534453DE77842A8CF1D92614FA75EC460ADA96B455519B61DDE69D978B84E905298C322971F6C8A6251E91EBC3C6C528D073EB7C2CA9D8FE167E0AE404AAA2BA7DF8C7E25B54015D094BCDA6BB89E847B5E660E9BD77B50CBA2CCFA1A7EC9263BA8CA19BA639ECD535638D47E4D9AA34EC0A9A46998A04BB8016E698064E9A5D694E14171D62E69F363F88B349B78187EB14E2D154783F4460E72935423434FD2A3B58B9926EEBA8EDB48EEADAD726206B945B65CBC20279A314DD09FBE4C9D25D61B29451530824B4185BF85C803040DD43F36AB73431F0AE6EE1CCC6DA5C90F2755CA3D1A835A4AC3D7B733030FCF82AFB4522A08E3688D9454160B9092A7DE62ED6ADD9ADC552B3DFCB7A3F3455272D846CC7B93FBF0C427689AA921798DD59BC1DEBAE6525FCC34935D8BFF66C72E74BAEEAA890904042D46172CFA06A5FC1922804589D18DC23429D4260376A2292FA2F353266639721451350D3D2162FE9C359C23338112738AA1CE6C1BE93644278E2F45A132FF185D0E3577DDCCA7FF4CF678BF590B3D72C87047E8C16419D3FB892200E3B1161ED8CCB4EA4817A9BB7D86AA6F6928482D0D3EF411486BC4B1E75854FBCD294DA07C38AA9DE80F8768E012A7AEC2D8022953AB6B8BC794C18602765C1375141A29B04C718C576521E2AB3C4F4EFCB6D7907932C1F7053F2E63B2139E5C9779BDFD532A6929BA05A5F268CAD5252582B2D35F1DFC423D9E99D2656AEA08C4C9051FAE1A273E547FC92AACB48CF77D2B7E24097C081F304920D28D4F6A589F2D5E1A06F161D5F7ABD2F77806D33643E8A8352D4A3ED227A4826CA26CFC61E31D84A96ABB332BE763BAB3C8B0D04D7A1086615FAC1FECD540EBD427CA0A917A8A50A28344200BADCA9358BFD98E9D4ECD2D214D6BBA5FAEF847AC24E9226BAAEAF2B78C99E09B521FD3D1A5ABC126EE2DFC7E25467106089344ECE062319C347DC017FDB99A08F291E0D21FA5173EB144557C8B5A1E9504B8D39BD4CA9CAFE3ABC37B840C1DE2FF860DF71FB544AD267D5DFD66F4E38CF898B940B0F5A35361E3DF14B74E2E79DAF190A90DBB080C9A6649BC883734BF8804295A506B03B83F916EA0F1644F03F368560939AE43745A44E4BE367399ACD3875B3E6A0C4A234022641DBAB25357F913D87FE8371DE327E43A28635FFD8EF4B664EA34CB179B2A9ADD07A2959F553718C6CFF24527A2FC8D1CA44440DE22097ADC83E9C5A8FABDE6F1192652E96DFD4B789989E101F
A55D7EF2E42D4CC549869D129C40A2521BAD8D218CE120B4B9FD3CC94195B2BDFC96663576BDAF486B4A8D0C947DF0D33A8D2BD0EF20C48496D5A5CAFB4AD922A89A279E743D1F80B40A6D675F6CA696361932E1D325546E7689077301A66CBC461EDB7A32DA869C7CBB0BDB66428CF30CFE37E166FC250B45A04EC7D04272466A6FCC2FECA6454034FA4D720F7FC6C20A8E916791F6230A6B1B070080C03617210431FBEAE0292C01EB708F98C4FECEECF55013050A1A5815BF66A379D37DF110F9DA379114F35EE36390F20EE1E808A069B2C75444A76498AD89BDE729ACFD7DCC0F26484F9BF4009987D768FB6A3B4D93D1823194C4425DC5BFC0DAF5FFA116BE34630D96289068480CFEB0D53446455F009AE6D2C51169A2A38DD9EDA301730931212945AC30EAA99DFC12CD316954137A7512658E91AEBE059452BD4960610B51E7391D57969DF20D66AAE70FBE3D522BF7E9DE6F6FF44FE4377CA571111BE263362A79B2B052530D179C83EFD62EC0AC4EDD0F21F2D9CE95DF3EFDB4F2A0953527CB1CA46BF59BF082AB6E652C4ADE086821927D17595F417A06F9E83B8639F43CC7F024B0D8D79C32718F22863D99ABB5D502A4AF95A63E008DCD659A676FE22804FC5BB289F74BB95996C89C9644F74528F7B5718313DA398700BEE642406EB9412FD9F234EF9DF5B5C5A643A7A12876A190DC756EBF816F0EB2F99EC527F6FD2B2CEB1951EBFBC37130CF021457A117F1A2EB37917840DE0B2C771D7ACBAEA52DCEC719263C5A0A522B794F6CBB3BEFFCFF4DB2E47143FD4EC21ECC65B8837F4C4975435048346DB6FDEC3C05C681F235F5FADC717209F8B8818EB944E2D44D66E390CFBB2B99B0A5C509D97E911F634D39C7C93FB6CBAAD01F01779DEECB53AC1270CDE9343FCAF674D7C74CAB6C07704759691CC29790AF9DFDEDB969539BAACD697B7D673B3B259613FE33B06C02F1283FC3A1887FE5EE2BEC47136E777E47A2993985D7B3005BB07CC91A98DBE0126FA77D02576B2E04E645CB336A20548025B3F26A8EF6CEA85551E9573DF4A07C32C72929DAAC12E8A55F28B29F52708E8625D3BAACB0B369CD1D1B14D42A3B6AB9926281E0843318B8C17A1B27850EDF28009983AAC374C66D825443440C6ACBC04064E4F128E1B4EFCD952CF37B5F1008D9E9F2D3F2F768772F4E34B1E056553232D6A8307B2B7A3FBD82E1480417E73609B1612C038C2EAFA622ABD9B2F1257A1796432E0C13020442C3EFB085671D3EDB2D29262EEC0BC2D2FA3B0795D501287169D315CAF62381E192349461270E97A2946B3CB594D3458D577DD118E3ACFE8E848C6993FC2133B9D53EA04B53EF0B021CF5069F9F0FF4D5D2DF35FDB59F289D56B7631A1C9C35FE41CFA8D81AD024909CE1FD11DA7F66CDE6E303D480A72BC41303945AF891684C71

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F2.1/HelveticaNeue renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 1 1 sc
q
0 0 2115 1080 rc
0 1080 m
2115 1080 l
2115 0 l
0 0 l
h
0 1080 m
f
801 1035 m
1089 1035 l
1089 936 l
801 936 l
h
801 1035 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 0 1080 cm
801 45 m
1089 45 l
1089 144 l
801 144 l
h
801 45 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 945 985.5 cm
/F1.1[ 35 0 0 -35 0 0]sf
-81.690002 -7.9976196 m
(!"#$%&'\(\))[ 25.935000 20.755000 20.090000 21.385000 12.320000 20.090000 13.615000 9.730000 0.000000 ] xS
/F2.1[ 35 0 0 -35 0 0]sf
-136.13251 34.017624 m
(!"#$%&'\(\)*+,\(+-',)[ 19.460000 9.065000 22.680000 22.680000 9.730000 22.680000 11.025000 18.795000 19.460000 7.770000 11.025000 18.795000 18.795000 11.025000 19.460000 11.025000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
459 855 m
1422 855 l
1422 648 l
459 648 l
h
459 855 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 0 1080 cm
459 225 m
1422 225 l
1422 432 l
459 432 l
h
459 225 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 940.5 751.5 cm
/F1.1[ 35 0 0 -35 0 0]sf
-81.690002 -52.99762 m
(!"#$%&'\(*)[ 25.935000 20.755000 20.090000 21.385000 12.320000 20.090000 13.615000 9.730000 0.000000 ] xS
/F2.1[ 35 0 0 -35 0 0]sf
-146.78999 -10.982376 m
(!"#$%.,/0+,1%23'4)[ 19.460000 9.065000 22.680000 22.680000 9.730000 23.975000 18.795000 7.770000 18.795000 11.025000 18.795000 20.755000 9.730000 30.415000 20.090000 11.655000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 1080 cm
944.0481 144 m
942.68073 215.10184 l
S
0 i
CM
942.52692 856.89966 m
945.68018 864.84052 l
939.68127 864.95587 l
h
942.52692 856.89966 m
f
0 J
0 j
1 0 0 -1 0 1080 cm
942.52692 223.10036 m
945.68018 215.15952 l
939.68127 215.04414 l
h
942.52692 223.10036 m
S
1 1 1 sc
CM
477 738 m
639 738 l
639 666 l
477 666 l
h
477 738 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 0 1080 cm
477 342 m
639 342 l
639 414 l
477 414 l
h
477 342 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 558 702 cm
-74.864998 12.510002 m
($/0+53'67)[ 22.680000 7.770000 18.795000 11.025000 10.360000 20.090000 11.655000 29.855000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
1215 738 m
1404 738 l
1404 666 l
1215 666 l
h
1215 738 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 0 1080 cm
1215 342 m
1404 342 l
1404 414 l
1215 414 l
h
1215 342 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 1309.5 702 cm
-86.852501 12.510002 m
(8\)0//,9:,7)[ 25.270000 19.460000 18.795000 7.770000 7.770000 18.795000 19.460000 20.090000 18.795000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
675 738 m
954 738 l
954 666 l
675 666 l
h
675 738 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 0 1080 cm
675 342 m
954 342 l
954 414 l
675 414 l
h
675 342 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 814.5 702 cm
-130.00751 12.510002 m
("6;/,6,9+0+*397)[ 9.065000 29.855000 20.755000 7.770000 18.795000 29.855000 18.795000 19.460000 11.025000 18.795000 11.025000 7.770000 20.090000 19.460000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
990 738 m
1170 738 l
1170 666 l
990 666 l
h
990 738 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 0 1080 cm
990 342 m
1170 342 l
1170 414 l
990 414 l
h
990 342 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 1080 702 cm
-83.282501 12.510002 m
(<7,=\(07,7)[ 25.270000 17.500000 18.795000 13.615000 18.795000 18.795000 17.500000 18.795000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
45 234 m
468 234 l
468 72 l
45 72 l
h
45 234 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 0 1080 cm
45 846 m
468 846 l
468 1008 l
45 1008 l
h
45 846 m
S
0 i
1 0 0 -1 256.5 153 cm
/F1.1[ 35 0 0 -35 0 0]sf
-81.690002 -34.487617 m
(!"#$%&'\(+)[ 25.935000 20.755000 20.090000 21.385000 12.320000 20.090000 13.615000 9.730000 0.000000 ] xS
/F2.1[ 35 0 0 -35 0 0]sf
-136.41251 19.527626 m
(!"#$=>*,?7@%!"#$%)[ 19.460000 9.065000 22.680000 22.680000 13.615000 21.385000 7.770000 18.795000 26.530000 17.500000 9.730000 9.730000 19.460000 9.065000 22.680000 22.680000 0.000000 ] xS
-197.75 60.507622 m
(A0;;*9:%#B7+,6%A39*+3')[ 30.485000 18.795000 20.755000 20.755000 7.770000 19.460000 20.090000 9.730000 22.680000 17.500000 17.500000 11.025000 18.795000 29.855000 9.730000 30.485000 20.090000 19.460000 7.770000 11.025000 20.090000 0.000000 ] xS
1 1 1 sc
CM
1395 531 m
2043 531 l
2043 252 l
1395 252 l
h
1395 531 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 0 1080 cm
1395 549 m
2043 549 l
2043 828 l
1395 828 l
h
1395 549 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 1719 391.5 cm
/F1.1[ 35 0 0 -35 0 0]sf
-81.690002 -89.957611 m
(!"#$%&'\(,)[ 25.935000 20.755000 20.090000 21.385000 12.320000 20.090000 13.615000 9.730000 0.000000 ] xS
/F2.1[ 35 0 0 -35 0 0]sf
-316.0325 -47.942368 m
(9-6,'*\(0/%090/B7*7%35%+\)',,%!"#$%63C*/*+B%)[ 19.460000 19.460000 29.855000 18.795000 11.655000 7.770000 18.795000 18.795000 7.770000 9.730000 18.795000 19.460000 18.795000 7.770000 17.500000 17.500000 7.770000 17.500000 9.730000 20.090000 10.360000 9.730000 11.025000 19.460000 11.025000 18.795000 18.795000 9.730000 19.460000 9.065000 22.680000 22.680000 9.730000 29.855000 20.090000 20.755000 7.770000 7.770000 7.770000 11.025000 17.500000 0.000000 ] xS
-75.18 -6.9623718 m
(7\(,90'*37)[ 17.500000 18.795000 18.795000 19.460000 18.795000 11.655000 7.770000 20.090000 0.000000 ] xS
-11.025 34.017624 m
(D)s
-249.28751 74.99762 m
("6;/,6,9+0+*39%35%!"#$%63C*/*+B%)[ 9.065000 29.855000 20.755000 7.770000 18.795000 29.855000 18.795000 19.460000 11.025000 18.795000 11.025000 7.770000 20.090000 19.460000 9.730000 20.090000 10.360000 9.730000 19.460000 9.065000 22.680000 22.680000 9.730000 29.855000 20.090000 20.755000 7.770000 7.770000 7.770000 11.025000 17.500000 0.000000 ] xS
-140.035 115.97762 m
(,E+,97*39%39%97=F)[ 18.795000 18.130000 11.025000 18.795000 19.460000 17.500000 7.770000 20.090000 19.460000 9.730000 20.090000 19.460000 9.730000 19.460000 17.500000 13.615000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
720 531 m
1152 531 l
1152 369 l
720 369 l
h
720 531 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 0 1080 cm
720 549 m
1152 549 l
1152 711 l
720 711 l
h
720 549 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 936 450 cm
/F1.1[ 35 0 0 -35 0 0]sf
-81.690002 -28.487617 m
(!"#$%&'\(-)[ 25.935000 20.755000 20.090000 21.385000 12.320000 20.090000 13.615000 9.730000 0.000000 ] xS
/F2.1[ 35 0 0 -35 0 0]sf
-121.205 13.527626 m
(&77,77*9:%!"#$%)[ 22.680000 17.500000 17.500000 18.795000 17.500000 17.500000 7.770000 19.460000 20.090000 9.730000 19.460000 9.065000 22.680000 22.680000 0.000000 ] xS
-200.60249 54.507622 m
(*9+,'?3'4*9:%;,'53'609\(,%)[ 7.770000 19.460000 11.025000 18.795000 11.655000 26.530000 20.090000 11.655000 18.165000 7.770000 19.460000 20.090000 9.730000 20.755000 18.795000 11.655000 10.360000 20.090000 11.655000 29.855000 18.795000 19.460000 18.795000 18.795000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
90 531 m
432 531 l
432 369 l
90 369 l
h
90 531 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 0 1080 cm
90 549 m
432 549 l
432 711 l
90 711 l
h
90 549 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 261 450 cm
/F1.1[ 35 0 0 -35 0 0]sf
-81.690002 -28.487617 m
(!"#$%&'\(.)[ 25.935000 20.755000 20.090000 21.385000 12.320000 20.090000 13.615000 9.730000 0.000000 ] xS
/F2.1[ 35 0 0 -35 0 0]sf
-142.9225 13.527626 m
(GH0/-0+*39%35%!"#$%)[ 21.385000 17.500000 18.795000 7.770000 19.460000 18.795000 11.025000 7.770000 20.090000 19.460000 9.730000 20.090000 10.360000 9.730000 19.460000 9.065000 22.680000 22.680000 0.000000 ] xS
-132.5975 54.507622 m
(A0;;*9:%#B7+,6)[ 30.485000 18.795000 20.755000 20.755000 7.770000 19.460000 20.090000 9.730000 22.680000 17.500000 17.500000 11.025000 18.795000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 1080 cm
707.23883 432 m
441.04919 550.1106 l
S
0 i
CM
433.73672 526.64478 m
442.26593 527.14722 l
439.83246 532.63159 l
h
433.73672 526.64478 m
f
0 J
0 j
1 0 0 -1 0 1080 cm
433.73672 553.35522 m
442.26593 552.85278 l
439.83246 547.36841 l
h
433.73672 553.35522 m
S
1 J
1 j
0.60000002 i
938.9552 432 m
937.35669 539.10107 l
S
0 i
CM
937.2373 532.89978 m
940.35638 540.85413 l
934.35706 540.94366 l
h
937.2373 532.89978 m
f
0 J
0 j
1 0 0 -1 0 1080 cm
937.2373 547.10022 m
940.35638 539.14587 l
934.35706 539.05634 l
h
937.2373 547.10022 m
S
1 J
1 j
0.60000002 i
1164.3187 432 m
1408.3455 544.84473 l
S
0 i
CM
1415.6067 531.79749 m
1409.6046 537.87823 l
1407.0863 532.43231 l
h
1415.6067 531.79749 m
f
0 J
0 j
1 0 0 -1 0 1080 cm
1415.6067 548.20251 m
1409.6046 542.12177 l
1407.0863 547.56769 l
h
1415.6067 548.20251 m
S
1 J
1 j
0.60000002 i
259.77274 711 m
257.87726 836.10114 l
S
0 i
CM
257.75604 235.89978 m
260.87692 243.85341 l
254.87759 243.94432 l
h
257.75604 235.89978 m
f
0 J
0 j
1 0 0 -1 0 1080 cm
257.75604 844.10022 m
260.87692 836.14661 l
254.87759 836.05566 l
h
257.75604 844.10022 m
S
ep
end
%%Trailer
%%EOF
